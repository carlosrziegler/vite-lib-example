{"version":3,"file":"csf-plugin.js","sourceRoot":"","sources":["../../svelte/csf-plugin.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,6GAAwG;AACxG,2BAAkC;AAClC,iGAA6F;AAC7F,MAAM,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,6DAA6D,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;AAErH,wDAA0C;AAE1C,SAAwB,SAAS,CAAC,aAAuB;IACvD,OAAO;QACL,IAAI,EAAE,4BAA4B;QAClC,OAAO,EAAE,MAAM;QACf,KAAK,CAAC,SAAS,CAAC,IAAY,EAAE,EAAU;YACtC,IAAI,oBAAoB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;gBACjC,MAAM,SAAS,GAAG,IAAA,2CAAmB,EAAC,EAAE,CAAC,CAAC;gBAC1C,IAAI,MAAM,GAAG,IAAA,iBAAY,EAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;gBACzC,IAAI,aAAa,IAAI,aAAa,CAAC,UAAU,EAAE;oBAC7C,MAAM,GAAG,CAAC,MAAM,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,aAAa,CAAC,UAAU,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;iBAC7F;gBACD,MAAM,GAAG,GAAG,IAAA,gCAAc,EAAC,MAAM,CAAC,CAAC;gBACnC,MAAM,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC;gBACxB,MAAM,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAM,OAAO,CAAC;qBAC1C,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC;qBAClC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,gBAAgB,EAAE,gCAAgC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC;qBACvF,IAAI,CAAC,IAAI,CAAC,CAAC;gBAEd,MAAM,wBAAwB,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,CAAC;gBAEvF,MAAM,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAM,OAAO,CAAC;qBACnD,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC;qBAClC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;gBAErB,MAAM,MAAM,GAAG;oBACb,wBAAwB;oBACxB,uBAAuB,MAAM,IAAI;oBACjC,oCAAoC,SAAS,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI;oBACzE,wCAAwC;oBACxC,sCAAsC,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,GAAG;oBAC1E,QAAQ;iBACT,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACb,OAAO;oBACL,IAAI,EAAE,MAAM;iBACb,CAAC;aACH;QACH,CAAC;KACF,CAAC;AACJ,CAAC;AAtCD,4BAsCC","sourcesContent":["import { getNameFromFilename } from '@storybook/addon-svelte-csf/dist/cjs/parser/svelte-stories-loader';\nimport { readFileSync } from 'fs';\nimport { extractStories } from '@storybook/addon-svelte-csf/dist/cjs/parser/extract-stories';\nconst parser = require.resolve('@storybook/addon-svelte-csf/dist/esm/parser/collect-stories').replace(/[/\\\\]/g, '/');\nimport type { Options } from '@sveltejs/vite-plugin-svelte';\nimport * as svelte from 'svelte/compiler';\n\nexport default function csfPlugin(svelteOptions?: Options) {\n  return {\n    name: 'storybook-addon-svelte-csf',\n    enforce: 'post',\n    async transform(code: string, id: string) {\n      if (/\\.stories\\.svelte$/.test(id)) {\n        const component = getNameFromFilename(id);\n        let source = readFileSync(id).toString();\n        if (svelteOptions && svelteOptions.preprocess) {\n          source = (await svelte.preprocess(source, svelteOptions.preprocess, { filename: id })).code;\n        }\n        const all = extractStories(source);\n        const { stories } = all;\n        const storyDef = Object.entries<any>(stories)\n          .filter(([, def]) => !def.template)\n          .map(([id]) => `export const ${id} = __storiesMetaData.stories[${JSON.stringify(id)}];`)\n          .join('\\n');\n\n        const codeWithoutDefaultExport = code.replace('export default ', '// export default ');\n\n        const namedExportsOrder = Object.entries<any>(stories)\n          .filter(([, def]) => !def.template)\n          .map(([id]) => id);\n\n        const output = [\n          codeWithoutDefaultExport,\n          `import parser from '${parser}';`,\n          `const __storiesMetaData = parser(${component}, ${JSON.stringify(all)});`,\n          'export default __storiesMetaData.meta;',\n          `export const __namedExportsOrder = ${JSON.stringify(namedExportsOrder)};`,\n          storyDef,\n        ].join('\\n');\n        return {\n          code: output,\n        };\n      }\n    },\n  };\n}\n"]}