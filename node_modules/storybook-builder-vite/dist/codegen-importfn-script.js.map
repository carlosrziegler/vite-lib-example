{"version":3,"file":"codegen-importfn-script.js","sourceRoot":"","sources":["../codegen-importfn-script.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,2CAA6B;AAC7B,+BAAqC;AAGrC,iDAA6C;AAE7C;;GAEG;AAEH;;;;GAIG;AACH,SAAS,YAAY,CAAC,YAAoB;IACxC,OAAO,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,YAAY,EAAE,CAAC;AAC7E,CAAC;AAED;;;;;;GAMG;AACH,KAAK,UAAU,UAAU,CAAC,OAAiB;IACzC,MAAM,aAAa,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;QACzC,OAAO,MAAM,YAAY,CAAC,IAAA,oBAAa,EAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,+BAA+B,IAAI,IAAI,CAAC;IACtH,CAAC,CAAC,CAAC;IAEH,OAAO;;QAED,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC;;;;;;GAM9B,CAAC;AACJ,CAAC;AAEM,KAAK,UAAU,0BAA0B,CAAC,OAAgB;IAC/D,qEAAqE;IACrE,MAAM,OAAO,GAAG,MAAM,IAAA,0BAAW,EAAC,OAAO,CAAC,CAAC;IAE3C,oGAAoG;IACpG,OAAO,CAAC,MAAM,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AAC5C,CAAC;AAND,gEAMC","sourcesContent":["import * as path from 'path';\nimport { normalizePath } from 'vite';\nimport type { Options } from '@storybook/core-common';\n\nimport { listStories } from './list-stories';\n\n/**\n * This file is largely based on https://github.com/storybookjs/storybook/blob/d1195cbd0c61687f1720fefdb772e2f490a46584/lib/core-common/src/utils/to-importFn.ts\n */\n\n/**\n * Paths get passed either with no leading './' - e.g. `src/Foo.stories.js`,\n * or with a leading `../` (etc), e.g. `../src/Foo.stories.js`.\n * We want to deal in importPaths relative to the working dir, so we normalize\n */\nfunction toImportPath(relativePath: string) {\n  return relativePath.startsWith('../') ? relativePath : `./${relativePath}`;\n}\n\n/**\n * This function takes an array of stories and creates a mapping between the stories' relative paths\n * to the working directory and their dynamic imports. The import is done in an asynchronous function\n * to delay loading. It then creates a function, `importFn(path)`, which resolves a path to an import\n * function and this is called by Storybook to fetch a story dynamically when needed.\n * @param stories An array of absolute story paths.\n */\nasync function toImportFn(stories: string[]) {\n  const objectEntries = stories.map((file) => {\n    return `  '${toImportPath(normalizePath(path.relative(process.cwd(), file)))}': async () => import('/@fs/${file}')`;\n  });\n\n  return `\n    const importers = {\n      ${objectEntries.join(',\\n')}\n    };\n\n    export async function importFn(path) {\n        return importers[path]();\n    }\n  `;\n}\n\nexport async function generateImportFnScriptCode(options: Options) {\n  // First we need to get an array of stories and their absolute paths.\n  const stories = await listStories(options);\n\n  // We can then call toImportFn to create a function that can be used to load each story dynamically.\n  return (await toImportFn(stories)).trim();\n}\n"]}