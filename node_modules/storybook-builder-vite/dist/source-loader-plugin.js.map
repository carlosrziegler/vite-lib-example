{"version":3,"file":"source-loader-plugin.js","sourceRoot":"","sources":["../source-loader-plugin.ts"],"names":[],"mappings":";;;;;;AAAA,6EAA6D;AAE7D,SAAgB,kBAAkB;IAChC,OAAO;QACL,IAAI,EAAE,qCAAqC;QAC3C,OAAO,EAAE,KAAK;QACd,KAAK,CAAC,SAAS,CAAC,GAAW,EAAE,EAAU;YACrC,IAAI,EAAE,CAAC,KAAK,CAAC,qBAAqB,CAAC,EAAE;gBACnC,8EAA8E;gBAC9E,qCAAqC;gBACrC,MAAM,eAAe,GAAG,EAAE,WAAW,EAAE,CAAC,OAAe,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC;gBACtG,MAAM,IAAI,GAAG,MAAM,uBAAqB,CAAC,IAAI,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC;gBAEpE,OAAO;oBACL,IAAI;oBACJ,GAAG,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE;iBACtB,CAAC;aACH;QACH,CAAC;KACF,CAAC;AACJ,CAAC;AAlBD,gDAkBC","sourcesContent":["import sourceLoaderTransform from '@storybook/source-loader';\n\nexport function sourceLoaderPlugin() {\n  return {\n    name: 'storybook-vite-source-loader-plugin',\n    enforce: 'pre',\n    async transform(src: string, id: string) {\n      if (id.match(/\\.stories\\.[jt]sx?$/)) {\n        // We need to mock 'this' when calling transform from @storybook/source-loader\n        // noinspection JSUnusedGlobalSymbols\n        const mockClassLoader = { emitWarning: (message: string) => console.warn(message), resourcePath: id };\n        const code = await sourceLoaderTransform.call(mockClassLoader, src);\n\n        return {\n          code,\n          map: { mappings: '' },\n        };\n      }\n    },\n  };\n}\n"]}