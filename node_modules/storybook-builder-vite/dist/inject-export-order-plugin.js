"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.injectExportOrderPlugin = void 0;
const es_module_lexer_1 = require("es-module-lexer");
exports.injectExportOrderPlugin = {
    name: 'storybook-vite-inject-export-order-plugin',
    // This should only run after the typescript has been transpiled
    enforce: 'post',
    async transform(code, id) {
        if (!/\.stories\.([tj])sx?$/.test(id)) {
            return;
        }
        // TODO: Maybe convert `injectExportOrderPlugin` to function that returns object,
        //  and run `await init;` once and then call `parse()` without `await`,
        //  instead of calling `await parse()` every time.
        const [, exports] = await (0, es_module_lexer_1.parse)(code);
        if (exports.includes('__namedExportsOrder')) {
            // user has defined named exports already
            return;
        }
        const orderedExports = exports.filter((e) => e !== 'default');
        return {
            code: `${code};\nexport const __namedExportsOrder = ${JSON.stringify(orderedExports)};`,
            map: null,
        };
    },
};
//# sourceMappingURL=inject-export-order-plugin.js.map