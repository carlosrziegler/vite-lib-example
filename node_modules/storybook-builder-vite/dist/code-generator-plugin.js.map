{"version":3,"file":"code-generator-plugin.js","sourceRoot":"","sources":["../code-generator-plugin.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport { transformIframeHtml } from './transform-iframe-html';\nimport { generateIframeScriptCode } from './codegen-iframe-script';\nimport { generateModernIframeScriptCode } from './codegen-modern-iframe-script';\nimport { generateImportFnScriptCode } from './codegen-importfn-script';\nimport { generateVirtualStoryEntryCode, generatePreviewEntryCode } from './codegen-entries';\n\nimport type { Plugin } from 'vite';\nimport type { ExtendedOptions } from './types';\n\nexport function codeGeneratorPlugin(options: ExtendedOptions): Plugin {\n  const virtualFileId = '/virtual:/@storybook/builder-vite/vite-app.js';\n  const virtualStoriesFile = '/virtual:/@storybook/builder-vite/storybook-stories.js';\n  const virtualPreviewFile = '/virtual:/@storybook/builder-vite/preview-entry.js';\n  const iframePath = path.resolve(__dirname, '..', 'input', 'iframe.html');\n  let iframeId: string;\n\n  // noinspection JSUnusedGlobalSymbols\n  return {\n    name: 'storybook-vite-code-generator-plugin',\n    enforce: 'pre',\n    configureServer(server) {\n      // invalidate the whole vite-app.js script on every file change.\n      // (this might be a little too aggressive?)\n      server.watcher.on('change', (_e) => {\n        const { moduleGraph } = server;\n        const appModule = moduleGraph.getModuleById(virtualFileId);\n        if (appModule) {\n          server.moduleGraph.invalidateModule(appModule);\n        }\n        const storiesModule = moduleGraph.getModuleById(virtualStoriesFile);\n        if (storiesModule) {\n          server.moduleGraph.invalidateModule(storiesModule);\n        }\n      });\n    },\n    config(config, { command }) {\n      // If we are building the static distribution, add iframe.html as an entry.\n      // In development mode, it's not an entry - instead, we use an express middleware\n      // to serve iframe.html. The reason is that Vite's dev server (at the time of writing)\n      // does not support virtual files as entry points.\n      if (command === 'build') {\n        if (!config.build) {\n          config.build = {};\n        }\n        config.build.rollupOptions = {\n          input: iframePath,\n        };\n      }\n    },\n    configResolved(config) {\n      iframeId = `${config.root}/iframe.html`;\n    },\n    resolveId(source) {\n      if (source === virtualFileId) {\n        return virtualFileId;\n      } else if (source === iframePath) {\n        return iframeId;\n      } else if (source === virtualStoriesFile) {\n        return virtualStoriesFile;\n      } else if (source === virtualPreviewFile) {\n        return virtualPreviewFile;\n      }\n    },\n    async load(id) {\n      const storyStoreV7 = options.features?.storyStoreV7;\n      if (id === virtualStoriesFile) {\n        if (storyStoreV7) {\n          return generateImportFnScriptCode(options);\n        } else {\n          return generateVirtualStoryEntryCode(options);\n        }\n      }\n\n      if (id === virtualPreviewFile && !storyStoreV7) {\n        return generatePreviewEntryCode(options);\n      }\n\n      if (id === virtualFileId) {\n        if (storyStoreV7) {\n          return generateModernIframeScriptCode(options, { storiesFilename: virtualStoriesFile });\n        } else {\n          return generateIframeScriptCode(options, {\n            storiesFilename: virtualStoriesFile,\n            previewFilename: virtualPreviewFile,\n          });\n        }\n      }\n\n      if (id === iframeId) {\n        return fs.readFileSync(path.resolve(__dirname, '..', 'input', 'iframe.html'), 'utf-8');\n      }\n    },\n    async transformIndexHtml(html, ctx) {\n      if (ctx.path !== '/iframe.html') {\n        return;\n      }\n      return transformIframeHtml(html, options);\n    },\n  };\n}\n"]}