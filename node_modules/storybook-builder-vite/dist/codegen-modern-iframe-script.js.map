{"version":3,"file":"codegen-modern-iframe-script.js","sourceRoot":"","sources":["../codegen-modern-iframe-script.ts"],"names":[],"mappings":";;;AAAA,wDAAiE;AACjE,+BAAqC;AAQ9B,KAAK,UAAU,8BAA8B,CAClD,OAAwB,EACxB,EAAE,eAAe,EAAyC;IAE1D,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC;IAEvC,MAAM,mBAAmB,GAAG,IAAA,qCAAuB,EAAC,EAAE,SAAS,EAAE,CAAC,CAAC;IACnE,MAAM,aAAa,GAAG,MAAM,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC;IACjE,MAAM,aAAa,GAAG,CAAC,GAAG,aAAa,EAAE,mBAAmB,CAAC;SAC1D,MAAM,CAAC,OAAO,CAAC;SACf,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,QAAQ,IAAA,oBAAa,EAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IAE9D,0CAA0C;IAC1C;;;;;OAKG;IACH,sBAAsB;IACtB,MAAM,IAAI,GAAG;;;;;;;;;gCASiB,eAAe;;;;;0CAKL,aAAa;SAC9C,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE,CAAC,WAAW,WAAW,IAAI,CAAC;SAChD,IAAI,CAAC,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;;kCAqBc,eAAe;;;;;;+BAMlB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;;;;;;;KAOvD,CAAC,IAAI,EAAE,CAAC;IACX,OAAO,IAAI,CAAC;AACd,CAAC;AAxED,wEAwEC","sourcesContent":["import { loadPreviewOrConfigFile } from '@storybook/core-common';\nimport { normalizePath } from 'vite';\n\nimport type { ExtendedOptions } from './types';\n\ninterface GenerateModernIframeScriptCodeOptions {\n  storiesFilename: string;\n}\n\nexport async function generateModernIframeScriptCode(\n  options: ExtendedOptions,\n  { storiesFilename }: GenerateModernIframeScriptCodeOptions\n) {\n  const { presets, configDir } = options;\n\n  const previewOrConfigFile = loadPreviewOrConfigFile({ configDir });\n  const presetEntries = await presets.apply('config', [], options);\n  const configEntries = [...presetEntries, previewOrConfigFile]\n    .filter(Boolean)\n    .map((configEntry) => `/@fs/${normalizePath(configEntry)}`);\n\n  // noinspection UnnecessaryLocalVariableJS\n  /**\n   * This code is largely taken from https://github.com/storybookjs/storybook/blob/d1195cbd0c61687f1720fefdb772e2f490a46584/lib/builder-webpack4/src/preview/virtualModuleModernEntry.js.handlebars\n   * Some small tweaks were made to `getProjectAnnotations` (since `import()` needs to be resolved asynchronously)\n   * and the HMR implementation has been tweaked to work with Vite.\n   * @todo Inline variable and remove `noinspection`\n   */\n  // language=JavaScript\n  const code = `\n    import global from 'global';\n\n    import { composeConfigs, PreviewWeb } from '@storybook/preview-web';\n    import { ClientApi } from '@storybook/client-api';\n    import { addons } from '@storybook/addons';\n    import createPostMessageChannel from '@storybook/channel-postmessage';\n    import createWebSocketChannel from '@storybook/channel-websocket';\n\n    import { importFn } from '${storiesFilename}';\n\n    const { SERVER_CHANNEL_URL } = global;\n\n    const getProjectAnnotations = async () =>\n      composeConfigs(await Promise.all([${configEntries\n        .map((configEntry) => `import('${configEntry}')`)\n        .join(',\\n')}]));\n\n    const channel = createPostMessageChannel({ page: 'preview' });\n    addons.setChannel(channel);\n\n    if (SERVER_CHANNEL_URL) {\n      const serverChannel = createWebSocketChannel({ url: SERVER_CHANNEL_URL });\n      addons.setServerChannel(serverChannel);\n      window.__STORYBOOK_SERVER_CHANNEL__ = serverChannel;\n    }\n\n    const preview = new PreviewWeb();\n\n    window.__STORYBOOK_PREVIEW__ = preview;\n    window.__STORYBOOK_STORY_STORE__ = preview.storyStore;\n    window.__STORYBOOK_ADDONS_CHANNEL__ = channel;\n    window.__STORYBOOK_CLIENT_API__ = new ClientApi({ storyStore: preview.storyStore });\n\n    preview.initialize({ importFn, getProjectAnnotations });\n\n    if (import.meta.hot) {\n        import.meta.hot.accept('${storiesFilename}', (newModule) => {\n\n        // importFn has changed so we need to patch the new one in\n        preview.onStoriesChanged({ importFn: newModule.importFn });\n        });\n\n      import.meta.hot.accept(${JSON.stringify(configEntries)}, ([...newConfigEntries]) => {\n        const newGetProjectAnnotations =  () => composeConfigs(newConfigEntries);\n\n        // getProjectAnnotations has changed so we need to patch the new one in\n        preview.onGetProjectAnnotationsChanged({ getProjectAnnotations: newGetProjectAnnotations });\n      });\n    }\n    `.trim();\n  return code;\n}\n"]}