"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.listStories = void 0;
const path = __importStar(require("path"));
const glob_promise_1 = require("glob-promise");
// TODO: Merge with https://github.com/eirslett/storybook-builder-vite/pull/182
async function listStories({ presets, configDir }) {
    return (await Promise.all((await presets.apply('stories')).map((storiesEntry) => {
        const files = typeof storiesEntry === 'string' ? storiesEntry : storiesEntry.files;
        if (!files) {
            return [];
        }
        return (0, glob_promise_1.promise)(path.isAbsolute(files) ? files : path.join(configDir, files));
    }))).reduce((carry, stories) => carry.concat(stories), []);
}
exports.listStories = listStories;
//# sourceMappingURL=list-stories.js.map