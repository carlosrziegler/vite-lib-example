{"version":3,"file":"inject-export-order-plugin.js","sourceRoot":"","sources":["../inject-export-order-plugin.ts"],"names":[],"mappings":";;;AAAA,qDAAwC;AAE3B,QAAA,uBAAuB,GAAG;IACrC,IAAI,EAAE,2CAA2C;IACjD,gEAAgE;IAChE,OAAO,EAAE,MAAM;IACf,KAAK,CAAC,SAAS,CAAC,IAAY,EAAE,EAAU;QACtC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;YACrC,OAAO;SACR;QACD,iFAAiF;QACjF,uEAAuE;QACvE,kDAAkD;QAClD,MAAM,CAAC,EAAE,OAAO,CAAC,GAAG,MAAM,IAAA,uBAAK,EAAC,IAAI,CAAC,CAAC;QAEtC,IAAI,OAAO,CAAC,QAAQ,CAAC,qBAAqB,CAAC,EAAE;YAC3C,yCAAyC;YACzC,OAAO;SACR;QAED,MAAM,cAAc,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC;QAE9D,OAAO;YACL,IAAI,EAAE,GAAG,IAAI,yCAAyC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG;YACvF,GAAG,EAAE,IAAI;SACV,CAAC;IACJ,CAAC;CACF,CAAC","sourcesContent":["import { parse } from 'es-module-lexer';\n\nexport const injectExportOrderPlugin = {\n  name: 'storybook-vite-inject-export-order-plugin',\n  // This should only run after the typescript has been transpiled\n  enforce: 'post',\n  async transform(code: string, id: string) {\n    if (!/\\.stories\\.([tj])sx?$/.test(id)) {\n      return;\n    }\n    // TODO: Maybe convert `injectExportOrderPlugin` to function that returns object,\n    //  and run `await init;` once and then call `parse()` without `await`,\n    //  instead of calling `await parse()` every time.\n    const [, exports] = await parse(code);\n\n    if (exports.includes('__namedExportsOrder')) {\n      // user has defined named exports already\n      return;\n    }\n\n    const orderedExports = exports.filter((e) => e !== 'default');\n\n    return {\n      code: `${code};\\nexport const __namedExportsOrder = ${JSON.stringify(orderedExports)};`,\n      map: null,\n    };\n  },\n};\n"]}