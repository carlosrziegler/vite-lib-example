{
  "version": 3,
  "sources": ["../@storybook/channels/dist/esm/index.js"],
  "sourcesContent": ["import \"core-js/modules/es.object.freeze.js\";\n\nvar _templateObject;\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/web.immediate.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport deprecate from 'util-deprecate';\nimport dedent from 'ts-dedent';\n\nvar generateRandomId = function generateRandomId() {\n  // generates a random 13 character string\n  return Math.random().toString(16).slice(2);\n};\n\nexport var Channel = /*#__PURE__*/function () {\n  function Channel() {\n    var _this = this;\n\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        transport = _ref.transport,\n        _ref$async = _ref.async,\n        async = _ref$async === void 0 ? false : _ref$async;\n\n    _classCallCheck(this, Channel);\n\n    this.isAsync = void 0;\n    this.sender = generateRandomId();\n    this.events = {};\n    this.data = {};\n    this.transport = void 0;\n    this.addPeerListener = deprecate(function (eventName, listener) {\n      _this.addListener(eventName, listener);\n    }, dedent(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      channel.addPeerListener is deprecated\\n    \"]))));\n    this.isAsync = async;\n\n    if (transport) {\n      this.transport = transport;\n      this.transport.setHandler(function (event) {\n        return _this.handleEvent(event);\n      });\n    }\n  }\n\n  _createClass(Channel, [{\n    key: \"hasTransport\",\n    get: function get() {\n      return !!this.transport;\n    }\n  }, {\n    key: \"addListener\",\n    value: function addListener(eventName, listener) {\n      this.events[eventName] = this.events[eventName] || [];\n      this.events[eventName].push(listener);\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(eventName) {\n      var _this2 = this;\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var event = {\n        type: eventName,\n        args: args,\n        from: this.sender\n      };\n      var options = {};\n\n      if (args.length >= 1 && args[0] && args[0].options) {\n        options = args[0].options;\n      }\n\n      var handler = function handler() {\n        if (_this2.transport) {\n          _this2.transport.send(event, options);\n        }\n\n        _this2.handleEvent(event);\n      };\n\n      if (this.isAsync) {\n        // todo I'm not sure how to test this\n        setImmediate(handler);\n      } else {\n        handler();\n      }\n    }\n  }, {\n    key: \"last\",\n    value: function last(eventName) {\n      return this.data[eventName];\n    }\n  }, {\n    key: \"eventNames\",\n    value: function eventNames() {\n      return Object.keys(this.events);\n    }\n  }, {\n    key: \"listenerCount\",\n    value: function listenerCount(eventName) {\n      var listeners = this.listeners(eventName);\n      return listeners ? listeners.length : 0;\n    }\n  }, {\n    key: \"listeners\",\n    value: function listeners(eventName) {\n      var listeners = this.events[eventName];\n      return listeners || undefined;\n    }\n  }, {\n    key: \"once\",\n    value: function once(eventName, listener) {\n      var onceListener = this.onceListener(eventName, listener);\n      this.addListener(eventName, onceListener);\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventName) {\n      if (!eventName) {\n        this.events = {};\n      } else if (this.events[eventName]) {\n        delete this.events[eventName];\n      }\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(eventName, listener) {\n      var listeners = this.listeners(eventName);\n\n      if (listeners) {\n        this.events[eventName] = listeners.filter(function (l) {\n          return l !== listener;\n        });\n      }\n    }\n  }, {\n    key: \"on\",\n    value: function on(eventName, listener) {\n      this.addListener(eventName, listener);\n    }\n  }, {\n    key: \"off\",\n    value: function off(eventName, listener) {\n      this.removeListener(eventName, listener);\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(event) {\n      var listeners = this.listeners(event.type);\n\n      if (listeners && listeners.length) {\n        listeners.forEach(function (fn) {\n          fn.apply(event, event.args);\n        });\n      }\n\n      this.data[event.type] = event.args;\n    }\n  }, {\n    key: \"onceListener\",\n    value: function onceListener(eventName, listener) {\n      var _this3 = this;\n\n      var onceListener = function onceListener() {\n        _this3.removeListener(eventName, onceListener);\n\n        return listener.apply(void 0, arguments);\n      };\n\n      return onceListener;\n    }\n  }]);\n\n  return Channel;\n}();\nexport default Channel;"],
  "mappings": "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",
  "names": ["esm_default", "init_esm", "generateRandomId", "Channel", "deprecate", "handler", "listeners", "onceListener"]
}
