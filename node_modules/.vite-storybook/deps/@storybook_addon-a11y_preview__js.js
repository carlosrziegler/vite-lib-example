import {
  init_es_array_join
} from "./chunk-X2MU6FGF.js";
import {
  require_runtime
} from "./chunk-CVHW5ARR.js";
import {
  addons,
  init_public_api
} from "./chunk-5CF6P373.js";
import "./chunk-ZXYVD3K7.js";
import "./chunk-2LAXKQL6.js";
import {
  STORY_CHANGED,
  init_esm
} from "./chunk-SI7WQ323.js";
import "./chunk-KV4CCD7N.js";
import {
  init_es_array_from,
  init_es_array_map
} from "./chunk-JKFCGRDS.js";
import "./chunk-P2LCBLHM.js";
import {
  init_es_promise
} from "./chunk-W7T2CIIB.js";
import "./chunk-YGWNZ64L.js";
import "./chunk-P4Y2FAFX.js";
import "./chunk-LUJQH5N3.js";
import "./chunk-PQWIJE26.js";
import "./chunk-H4G2HVRG.js";
import "./chunk-4YRUZNYU.js";
import "./chunk-YWOZGKFB.js";
import "./chunk-6FRUU5ZS.js";
import "./chunk-JOM5RNIL.js";
import {
  init_es_set
} from "./chunk-C26MXRMR.js";
import {
  init_es_array_concat,
  init_web_dom_collections_iterator,
  require_es_array_iterator,
  require_es_string_iterator
} from "./chunk-DYXT5BQG.js";
import {
  init_es_object_to_string
} from "./chunk-7XJ24U6U.js";
import {
  require_window
} from "./chunk-J3LZN47Y.js";
import {
  __commonJS,
  __esm,
  __toESM
} from "./chunk-MF7N2UXY.js";

// node_modules/@storybook/addon-a11y/dist/esm/constants.js
var ADDON_ID, PANEL_ID, HIGHLIGHT_STYLE_ID, RESULT, REQUEST, RUNNING, ERROR, MANUAL, HIGHLIGHT, EVENTS;
var init_constants = __esm({
  "node_modules/@storybook/addon-a11y/dist/esm/constants.js"() {
    ADDON_ID = "storybook/a11y";
    PANEL_ID = "".concat(ADDON_ID, "/panel");
    HIGHLIGHT_STYLE_ID = "a11yHighlight";
    RESULT = "".concat(ADDON_ID, "/result");
    REQUEST = "".concat(ADDON_ID, "/request");
    RUNNING = "".concat(ADDON_ID, "/running");
    ERROR = "".concat(ADDON_ID, "/error");
    MANUAL = "".concat(ADDON_ID, "/manual");
    HIGHLIGHT = "".concat(ADDON_ID, "/highlight");
    EVENTS = {
      RESULT,
      REQUEST,
      RUNNING,
      ERROR,
      MANUAL,
      HIGHLIGHT
    };
  }
});

// node_modules/@storybook/addon-a11y/dist/esm/a11yRunner.js
var require_a11yRunner = __commonJS({
  "node_modules/@storybook/addon-a11y/dist/esm/a11yRunner.js"(exports, module) {
    init_es_object_to_string();
    init_es_promise();
    var import_runtime = __toESM(require_runtime());
    var import_global = __toESM(require_window());
    init_public_api();
    init_constants();
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg);
        var value = info.value;
      } catch (error) {
        reject(error);
        return;
      }
      if (info.done) {
        resolve(value);
      } else {
        Promise.resolve(value).then(_next, _throw);
      }
    }
    function _asyncToGenerator(fn) {
      return function() {
        var self = this, args = arguments;
        return new Promise(function(resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
          }
          function _throw(err) {
            asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
          }
          _next(void 0);
        });
      };
    }
    var document = import_global.default.document;
    var globalWindow = import_global.default.window;
    if (module && module.hot && module.hot.decline) {
      module.hot.decline();
    }
    var channel = addons.getChannel();
    var active = false;
    var activeStoryId;
    var handleRequest = function() {
      var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(storyId) {
        var _yield$getParams, manual;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return getParams(storyId);
              case 2:
                _yield$getParams = _context.sent;
                manual = _yield$getParams.manual;
                if (manual) {
                  _context.next = 7;
                  break;
                }
                _context.next = 7;
                return run(storyId);
              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));
      return function handleRequest2(_x) {
        return _ref.apply(this, arguments);
      };
    }();
    var run = function() {
      var _ref2 = _asyncToGenerator(regeneratorRuntime.mark(function _callee2(storyId) {
        var input, axe, _input$element, element, config, _input$options, options, htmlElement, result;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                activeStoryId = storyId;
                _context2.prev = 1;
                _context2.next = 4;
                return getParams(storyId);
              case 4:
                input = _context2.sent;
                if (active) {
                  _context2.next = 19;
                  break;
                }
                active = true;
                channel.emit(EVENTS.RUNNING);
                _context2.next = 10;
                return import("./axe-GCIUG72Q.js");
              case 10:
                axe = _context2.sent.default;
                _input$element = input.element, element = _input$element === void 0 ? "#root" : _input$element, config = input.config, _input$options = input.options, options = _input$options === void 0 ? {} : _input$options;
                htmlElement = document.querySelector(element);
                axe.reset();
                if (config) {
                  axe.configure(config);
                }
                _context2.next = 17;
                return axe.run(htmlElement, options);
              case 17:
                result = _context2.sent;
                if (activeStoryId === storyId) {
                  channel.emit(EVENTS.RESULT, result);
                } else {
                  active = false;
                  run(activeStoryId);
                }
              case 19:
                _context2.next = 24;
                break;
              case 21:
                _context2.prev = 21;
                _context2.t0 = _context2["catch"](1);
                channel.emit(EVENTS.ERROR, _context2.t0);
              case 24:
                _context2.prev = 24;
                active = false;
                return _context2.finish(24);
              case 27:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, null, [[1, 21, 24, 27]]);
      }));
      return function run2(_x2) {
        return _ref2.apply(this, arguments);
      };
    }();
    var getParams = function() {
      var _ref3 = _asyncToGenerator(regeneratorRuntime.mark(function _callee3(storyId) {
        var _ref4, parameters;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return globalWindow.__STORYBOOK_STORY_STORE__.loadStory({
                  storyId
                });
              case 2:
                _context3.t0 = _context3.sent;
                if (_context3.t0) {
                  _context3.next = 5;
                  break;
                }
                _context3.t0 = {};
              case 5:
                _ref4 = _context3.t0;
                parameters = _ref4.parameters;
                return _context3.abrupt("return", parameters.a11y || {
                  config: {},
                  options: {
                    restoreScroll: true
                  }
                });
              case 8:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));
      return function getParams2(_x3) {
        return _ref3.apply(this, arguments);
      };
    }();
    channel.on(EVENTS.REQUEST, handleRequest);
    channel.on(EVENTS.MANUAL, run);
  }
});

// node_modules/@storybook/addon-a11y/dist/esm/highlight.js
var highlightStyle;
var init_highlight = __esm({
  "node_modules/@storybook/addon-a11y/dist/esm/highlight.js"() {
    highlightStyle = function highlightStyle2(color) {
      return "\n  outline: 2px dashed ".concat(color, ";\n  outline-offset: 2px;\n  box-shadow: 0 0 0 6px rgba(255,255,255,0.6);\n");
    };
  }
});

// node_modules/@storybook/addon-a11y/dist/esm/a11yHighlight.js
var require_a11yHighlight = __commonJS({
  "node_modules/@storybook/addon-a11y/dist/esm/a11yHighlight.js"(exports, module) {
    init_es_array_from();
    var import_es_string_iterator = __toESM(require_es_string_iterator());
    var import_es_array_iterator = __toESM(require_es_array_iterator());
    init_es_object_to_string();
    init_es_set();
    init_web_dom_collections_iterator();
    init_es_array_join();
    init_es_array_map();
    init_es_array_concat();
    var import_global = __toESM(require_window());
    init_public_api();
    init_esm();
    init_constants();
    init_highlight();
    var document = import_global.default.document;
    if (module && module.hot && module.hot.decline) {
      module.hot.decline();
    }
    var channel = addons.getChannel();
    var highlight = function highlight2(infos) {
      var id = HIGHLIGHT_STYLE_ID;
      resetHighlight();
      var elements = Array.from(new Set(infos.elements));
      var sheet = document.createElement("style");
      sheet.setAttribute("id", id);
      sheet.innerHTML = elements.map(function(target) {
        return "".concat(target, "{\n          ").concat(highlightStyle(infos.color), "\n         }");
      }).join(" ");
      document.head.appendChild(sheet);
    };
    var resetHighlight = function resetHighlight2() {
      var id = HIGHLIGHT_STYLE_ID;
      var sheetToBeRemoved = document.getElementById(id);
      if (sheetToBeRemoved) {
        sheetToBeRemoved.parentNode.removeChild(sheetToBeRemoved);
      }
    };
    channel.on(STORY_CHANGED, resetHighlight);
    channel.on(EVENTS.HIGHLIGHT, highlight);
  }
});

// node_modules/@storybook/addon-a11y/dist/esm/preview.js
var import_a11yRunner = __toESM(require_a11yRunner());
var import_a11yHighlight = __toESM(require_a11yHighlight());
//# sourceMappingURL=@storybook_addon-a11y_preview__js.js.map
