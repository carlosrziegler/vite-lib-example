import {
  require_object_get_prototype_of
} from "./chunk-DYXT5BQG.js";
import {
  require_an_object,
  require_export,
  require_function_call,
  require_has_own_property,
  require_is_object,
  require_object_get_own_property_descriptor
} from "./chunk-7XJ24U6U.js";
import {
  __commonJS
} from "./chunk-MF7N2UXY.js";

// node_modules/core-js/internals/is-data-descriptor.js
var require_is_data_descriptor = __commonJS({
  "node_modules/core-js/internals/is-data-descriptor.js"(exports, module) {
    var hasOwn = require_has_own_property();
    module.exports = function(descriptor) {
      return descriptor !== void 0 && (hasOwn(descriptor, "value") || hasOwn(descriptor, "writable"));
    };
  }
});

// node_modules/core-js/modules/es.reflect.get.js
var $ = require_export();
var call = require_function_call();
var isObject = require_is_object();
var anObject = require_an_object();
var isDataDescriptor = require_is_data_descriptor();
var getOwnPropertyDescriptorModule = require_object_get_own_property_descriptor();
var getPrototypeOf = require_object_get_prototype_of();
function get(target, propertyKey) {
  var receiver = arguments.length < 3 ? target : arguments[2];
  var descriptor, prototype;
  if (anObject(target) === receiver)
    return target[propertyKey];
  descriptor = getOwnPropertyDescriptorModule.f(target, propertyKey);
  if (descriptor)
    return isDataDescriptor(descriptor) ? descriptor.value : descriptor.get === void 0 ? void 0 : call(descriptor.get, receiver);
  if (isObject(prototype = getPrototypeOf(target)))
    return get(prototype, propertyKey, receiver);
}
$({ target: "Reflect", stat: true }, {
  get
});
//# sourceMappingURL=chunk-DRSZXUPQ.js.map
