import {
  require_array_slice
} from "./chunk-J7PSVTWH.js";
import {
  require_array_method_has_species_support,
  require_array_species_create,
  require_create_property,
  require_dom_iterables,
  require_dom_token_list_prototype,
  require_freezing,
  require_internal_metadata,
  require_is_array,
  require_object_keys,
  require_regexp_flags,
  require_to_string
} from "./chunk-MYJXNO5K.js";
import {
  require_an_object,
  require_create_non_enumerable_property,
  require_define_built_in,
  require_export,
  require_fails,
  require_function_bind_context,
  require_function_call,
  require_function_name,
  require_function_uncurry_this,
  require_global,
  require_has_own_property,
  require_indexed_object,
  require_is_constructor,
  require_is_object,
  require_length_of_array_like,
  require_object_is_prototype_of,
  require_to_absolute_index,
  require_to_indexed_object,
  require_to_object,
  require_well_known_symbol
} from "./chunk-L4GB7WNN.js";
import {
  __commonJS,
  __esm,
  init_define_import_meta_env
} from "./chunk-63WBANMH.js";

// node_modules/core-js/internals/array-iteration.js
var require_array_iteration = __commonJS({
  "node_modules/core-js/internals/array-iteration.js"(exports, module) {
    init_define_import_meta_env();
    var bind = require_function_bind_context();
    var uncurryThis = require_function_uncurry_this();
    var IndexedObject = require_indexed_object();
    var toObject2 = require_to_object();
    var lengthOfArrayLike2 = require_length_of_array_like();
    var arraySpeciesCreate = require_array_species_create();
    var push = uncurryThis([].push);
    var createMethod = function(TYPE) {
      var IS_MAP = TYPE == 1;
      var IS_FILTER = TYPE == 2;
      var IS_SOME = TYPE == 3;
      var IS_EVERY = TYPE == 4;
      var IS_FIND_INDEX = TYPE == 6;
      var IS_FILTER_REJECT = TYPE == 7;
      var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
      return function($this, callbackfn, that, specificCreate) {
        var O = toObject2($this);
        var self = IndexedObject(O);
        var boundFunction = bind(callbackfn, that);
        var length = lengthOfArrayLike2(self);
        var index = 0;
        var create = specificCreate || arraySpeciesCreate;
        var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : void 0;
        var value, result;
        for (; length > index; index++)
          if (NO_HOLES || index in self) {
            value = self[index];
            result = boundFunction(value, index, O);
            if (TYPE) {
              if (IS_MAP)
                target[index] = result;
              else if (result)
                switch (TYPE) {
                  case 3:
                    return true;
                  case 5:
                    return value;
                  case 6:
                    return index;
                  case 2:
                    push(target, value);
                }
              else
                switch (TYPE) {
                  case 4:
                    return false;
                  case 7:
                    push(target, value);
                }
            }
          }
        return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
      };
    };
    module.exports = {
      forEach: createMethod(0),
      map: createMethod(1),
      filter: createMethod(2),
      some: createMethod(3),
      every: createMethod(4),
      find: createMethod(5),
      findIndex: createMethod(6),
      filterReject: createMethod(7)
    };
  }
});

// node_modules/core-js/modules/es.array.filter.js
var $, $filter, arrayMethodHasSpeciesSupport, HAS_SPECIES_SUPPORT;
var init_es_array_filter = __esm({
  "node_modules/core-js/modules/es.array.filter.js"() {
    "use strict";
    init_define_import_meta_env();
    $ = require_export();
    $filter = require_array_iteration().filter;
    arrayMethodHasSpeciesSupport = require_array_method_has_species_support();
    HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("filter");
    $({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT }, {
      filter: function filter(callbackfn) {
        return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
      }
    });
  }
});

// node_modules/core-js/internals/regexp-get-flags.js
var require_regexp_get_flags = __commonJS({
  "node_modules/core-js/internals/regexp-get-flags.js"(exports, module) {
    init_define_import_meta_env();
    var call = require_function_call();
    var hasOwn = require_has_own_property();
    var isPrototypeOf = require_object_is_prototype_of();
    var regExpFlags = require_regexp_flags();
    var RegExpPrototype2 = RegExp.prototype;
    module.exports = function(R) {
      var flags = R.flags;
      return flags === void 0 && !("flags" in RegExpPrototype2) && !hasOwn(R, "flags") && isPrototypeOf(RegExpPrototype2, R) ? call(regExpFlags, R) : flags;
    };
  }
});

// node_modules/core-js/modules/es.regexp.to-string.js
var PROPER_FUNCTION_NAME, defineBuiltIn, anObject, $toString, fails, getRegExpFlags, TO_STRING, RegExpPrototype, nativeToString, NOT_GENERIC, INCORRECT_NAME;
var init_es_regexp_to_string = __esm({
  "node_modules/core-js/modules/es.regexp.to-string.js"() {
    "use strict";
    init_define_import_meta_env();
    PROPER_FUNCTION_NAME = require_function_name().PROPER;
    defineBuiltIn = require_define_built_in();
    anObject = require_an_object();
    $toString = require_to_string();
    fails = require_fails();
    getRegExpFlags = require_regexp_get_flags();
    TO_STRING = "toString";
    RegExpPrototype = RegExp.prototype;
    nativeToString = RegExpPrototype[TO_STRING];
    NOT_GENERIC = fails(function() {
      return nativeToString.call({ source: "a", flags: "b" }) != "/a/b";
    });
    INCORRECT_NAME = PROPER_FUNCTION_NAME && nativeToString.name != TO_STRING;
    if (NOT_GENERIC || INCORRECT_NAME) {
      defineBuiltIn(RegExp.prototype, TO_STRING, function toString() {
        var R = anObject(this);
        var pattern = $toString(R.source);
        var flags = $toString(getRegExpFlags(R));
        return "/" + pattern + "/" + flags;
      }, { unsafe: true });
    }
  }
});

// node_modules/core-js/modules/es.array.slice.js
var $2, isArray, isConstructor, isObject, toAbsoluteIndex, lengthOfArrayLike, toIndexedObject, createProperty, wellKnownSymbol, arrayMethodHasSpeciesSupport2, nativeSlice, HAS_SPECIES_SUPPORT2, SPECIES, $Array, max;
var init_es_array_slice = __esm({
  "node_modules/core-js/modules/es.array.slice.js"() {
    "use strict";
    init_define_import_meta_env();
    $2 = require_export();
    isArray = require_is_array();
    isConstructor = require_is_constructor();
    isObject = require_is_object();
    toAbsoluteIndex = require_to_absolute_index();
    lengthOfArrayLike = require_length_of_array_like();
    toIndexedObject = require_to_indexed_object();
    createProperty = require_create_property();
    wellKnownSymbol = require_well_known_symbol();
    arrayMethodHasSpeciesSupport2 = require_array_method_has_species_support();
    nativeSlice = require_array_slice();
    HAS_SPECIES_SUPPORT2 = arrayMethodHasSpeciesSupport2("slice");
    SPECIES = wellKnownSymbol("species");
    $Array = Array;
    max = Math.max;
    $2({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT2 }, {
      slice: function slice(start, end) {
        var O = toIndexedObject(this);
        var length = lengthOfArrayLike(O);
        var k = toAbsoluteIndex(start, length);
        var fin = toAbsoluteIndex(end === void 0 ? length : end, length);
        var Constructor, result, n;
        if (isArray(O)) {
          Constructor = O.constructor;
          if (isConstructor(Constructor) && (Constructor === $Array || isArray(Constructor.prototype))) {
            Constructor = void 0;
          } else if (isObject(Constructor)) {
            Constructor = Constructor[SPECIES];
            if (Constructor === null)
              Constructor = void 0;
          }
          if (Constructor === $Array || Constructor === void 0) {
            return nativeSlice(O, k, fin);
          }
        }
        result = new (Constructor === void 0 ? $Array : Constructor)(max(fin - k, 0));
        for (n = 0; k < fin; k++, n++)
          if (k in O)
            createProperty(result, n, O[k]);
        result.length = n;
        return result;
      }
    });
  }
});

// node_modules/core-js/modules/es.object.keys.js
var $3, toObject, nativeKeys, fails2, FAILS_ON_PRIMITIVES;
var init_es_object_keys = __esm({
  "node_modules/core-js/modules/es.object.keys.js"() {
    init_define_import_meta_env();
    $3 = require_export();
    toObject = require_to_object();
    nativeKeys = require_object_keys();
    fails2 = require_fails();
    FAILS_ON_PRIMITIVES = fails2(function() {
      nativeKeys(1);
    });
    $3({ target: "Object", stat: true, forced: FAILS_ON_PRIMITIVES }, {
      keys: function keys(it) {
        return nativeKeys(toObject(it));
      }
    });
  }
});

// node_modules/core-js/internals/array-method-is-strict.js
var require_array_method_is_strict = __commonJS({
  "node_modules/core-js/internals/array-method-is-strict.js"(exports, module) {
    "use strict";
    init_define_import_meta_env();
    var fails4 = require_fails();
    module.exports = function(METHOD_NAME, argument) {
      var method = [][METHOD_NAME];
      return !!method && fails4(function() {
        method.call(null, argument || function() {
          return 1;
        }, 1);
      });
    };
  }
});

// node_modules/core-js/internals/array-for-each.js
var require_array_for_each = __commonJS({
  "node_modules/core-js/internals/array-for-each.js"(exports, module) {
    "use strict";
    init_define_import_meta_env();
    var $forEach = require_array_iteration().forEach;
    var arrayMethodIsStrict = require_array_method_is_strict();
    var STRICT_METHOD = arrayMethodIsStrict("forEach");
    module.exports = !STRICT_METHOD ? function forEach2(callbackfn) {
      return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
    } : [].forEach;
  }
});

// node_modules/core-js/modules/web.dom-collections.for-each.js
var global, DOMIterables, DOMTokenListPrototype, forEach, createNonEnumerableProperty, handlePrototype, COLLECTION_NAME;
var init_web_dom_collections_for_each = __esm({
  "node_modules/core-js/modules/web.dom-collections.for-each.js"() {
    init_define_import_meta_env();
    global = require_global();
    DOMIterables = require_dom_iterables();
    DOMTokenListPrototype = require_dom_token_list_prototype();
    forEach = require_array_for_each();
    createNonEnumerableProperty = require_create_non_enumerable_property();
    handlePrototype = function(CollectionPrototype) {
      if (CollectionPrototype && CollectionPrototype.forEach !== forEach)
        try {
          createNonEnumerableProperty(CollectionPrototype, "forEach", forEach);
        } catch (error) {
          CollectionPrototype.forEach = forEach;
        }
    };
    for (COLLECTION_NAME in DOMIterables) {
      if (DOMIterables[COLLECTION_NAME]) {
        handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype);
      }
    }
    handlePrototype(DOMTokenListPrototype);
  }
});

// node_modules/core-js/modules/es.object.freeze.js
var $4, FREEZING, fails3, isObject2, onFreeze, $freeze, FAILS_ON_PRIMITIVES2;
var init_es_object_freeze = __esm({
  "node_modules/core-js/modules/es.object.freeze.js"() {
    init_define_import_meta_env();
    $4 = require_export();
    FREEZING = require_freezing();
    fails3 = require_fails();
    isObject2 = require_is_object();
    onFreeze = require_internal_metadata().onFreeze;
    $freeze = Object.freeze;
    FAILS_ON_PRIMITIVES2 = fails3(function() {
      $freeze(1);
    });
    $4({ target: "Object", stat: true, forced: FAILS_ON_PRIMITIVES2, sham: !FREEZING }, {
      freeze: function freeze(it) {
        return $freeze && isObject2(it) ? $freeze(onFreeze(it)) : it;
      }
    });
  }
});

export {
  require_array_iteration,
  require_array_method_is_strict,
  init_es_array_filter,
  require_regexp_get_flags,
  init_es_regexp_to_string,
  init_es_array_slice,
  init_es_object_keys,
  init_web_dom_collections_for_each,
  init_es_object_freeze
};
//# sourceMappingURL=chunk-3JN5YVZI.js.map
