import {
  require_ansi_to_html
} from "./chunk-K4MZ3STY.js";
import {
  StoryStore,
  combineParameters,
  init_esm as init_esm3
} from "./chunk-FZ5HGLFN.js";
import {
  init_es_string_ends_with
} from "./chunk-QCGHIWPD.js";
import {
  init_es_string_starts_with
} from "./chunk-6ZDB7Z4F.js";
import {
  init_es_array_join,
  init_es_string_match,
  init_es_string_split
} from "./chunk-7OGGZRZ2.js";
import {
  require_runtime
} from "./chunk-FYNXAUJO.js";
import {
  require_synchronous_promise
} from "./chunk-POXA3YOR.js";
import {
  require_isPlainObject
} from "./chunk-4GTMLINT.js";
import {
  init_es_array_find
} from "./chunk-OXSGFUZ3.js";
import {
  init_es_weak_map
} from "./chunk-OAH7BJYX.js";
import {
  init_es_string_search
} from "./chunk-LCJJYHH4.js";
import {
  require_lib
} from "./chunk-GINDXL2T.js";
import {
  esm_default as esm_default2,
  init_esm as init_esm2
} from "./chunk-KRVC46AS.js";
import {
  init_es_number_constructor
} from "./chunk-UQDYFMBC.js";
import {
  init_es_object_values
} from "./chunk-B3Z7DGEU.js";
import {
  init_es_promise
} from "./chunk-AUU3CWDW.js";
import {
  init_es_array_from,
  init_es_array_includes,
  init_es_array_map,
  init_es_function_name,
  init_es_object_assign,
  init_es_object_entries,
  init_es_string_includes,
  init_es_symbol,
  init_es_symbol_description,
  init_es_symbol_iterator
} from "./chunk-JNJVKBIS.js";
import {
  esm_default,
  init_esm
} from "./chunk-AGDQOUL7.js";
import {
  require_browser
} from "./chunk-NHJEIV3I.js";
import {
  init_es_array_filter,
  init_es_array_slice,
  init_es_object_freeze,
  init_es_object_keys,
  init_es_regexp_to_string,
  init_web_dom_collections_for_each
} from "./chunk-3JN5YVZI.js";
import {
  init_es_array_concat,
  init_es_set,
  init_es_string_replace,
  init_web_dom_collections_iterator,
  require_es_array_iterator,
  require_es_regexp_exec,
  require_es_string_iterator
} from "./chunk-MYJXNO5K.js";
import {
  init_es_object_to_string
} from "./chunk-L4GB7WNN.js";
import {
  require_window
} from "./chunk-UY7AYQEB.js";
import {
  __esm,
  __toESM,
  init_define_import_meta_env
} from "./chunk-63WBANMH.js";

// node_modules/@storybook/preview-web/node_modules/@storybook/core-events/dist/esm/index.js
var events, esm_default3, CHANNEL_CREATED, CONFIG_ERROR, STORY_INDEX_INVALIDATED, STORY_SPECIFIED, SET_STORIES, SET_CURRENT_STORY, CURRENT_STORY_WAS_SET, FORCE_RE_RENDER, FORCE_REMOUNT, STORY_PREPARED, STORY_CHANGED, STORY_UNCHANGED, STORY_RENDERED, STORY_MISSING, STORY_ERRORED, STORY_THREW_EXCEPTION, STORY_RENDER_PHASE_CHANGED, UPDATE_STORY_ARGS, STORY_ARGS_UPDATED, RESET_STORY_ARGS, SET_GLOBALS, UPDATE_GLOBALS, GLOBALS_UPDATED, REGISTER_SUBSCRIPTION, PREVIEW_KEYDOWN, SELECT_STORY, STORIES_COLLAPSE_ALL, STORIES_EXPAND_ALL, DOCS_RENDERED, SHARED_STATE_CHANGED, SHARED_STATE_SET, NAVIGATE_URL, UPDATE_QUERY_PARAMS, IGNORED_EXCEPTION;
var init_esm4 = __esm({
  "node_modules/@storybook/preview-web/node_modules/@storybook/core-events/dist/esm/index.js"() {
    init_define_import_meta_env();
    (function(events2) {
      events2["CHANNEL_CREATED"] = "channelCreated";
      events2["CONFIG_ERROR"] = "configError";
      events2["STORY_INDEX_INVALIDATED"] = "storyIndexInvalidated";
      events2["STORY_SPECIFIED"] = "storySpecified";
      events2["SET_STORIES"] = "setStories";
      events2["SET_CURRENT_STORY"] = "setCurrentStory";
      events2["CURRENT_STORY_WAS_SET"] = "currentStoryWasSet";
      events2["FORCE_RE_RENDER"] = "forceReRender";
      events2["FORCE_REMOUNT"] = "forceRemount";
      events2["STORY_PREPARED"] = "storyPrepared";
      events2["STORY_CHANGED"] = "storyChanged";
      events2["STORY_UNCHANGED"] = "storyUnchanged";
      events2["STORY_RENDERED"] = "storyRendered";
      events2["STORY_MISSING"] = "storyMissing";
      events2["STORY_ERRORED"] = "storyErrored";
      events2["STORY_THREW_EXCEPTION"] = "storyThrewException";
      events2["STORY_RENDER_PHASE_CHANGED"] = "storyRenderPhaseChanged";
      events2["UPDATE_STORY_ARGS"] = "updateStoryArgs";
      events2["STORY_ARGS_UPDATED"] = "storyArgsUpdated";
      events2["RESET_STORY_ARGS"] = "resetStoryArgs";
      events2["SET_GLOBALS"] = "setGlobals";
      events2["UPDATE_GLOBALS"] = "updateGlobals";
      events2["GLOBALS_UPDATED"] = "globalsUpdated";
      events2["REGISTER_SUBSCRIPTION"] = "registerSubscription";
      events2["PREVIEW_KEYDOWN"] = "previewKeydown";
      events2["SELECT_STORY"] = "selectStory";
      events2["STORIES_COLLAPSE_ALL"] = "storiesCollapseAll";
      events2["STORIES_EXPAND_ALL"] = "storiesExpandAll";
      events2["DOCS_RENDERED"] = "docsRendered";
      events2["SHARED_STATE_CHANGED"] = "sharedStateChanged";
      events2["SHARED_STATE_SET"] = "sharedStateSet";
      events2["NAVIGATE_URL"] = "navigateUrl";
      events2["UPDATE_QUERY_PARAMS"] = "updateQueryParams";
    })(events || (events = {}));
    esm_default3 = events;
    CHANNEL_CREATED = events.CHANNEL_CREATED;
    CONFIG_ERROR = events.CONFIG_ERROR;
    STORY_INDEX_INVALIDATED = events.STORY_INDEX_INVALIDATED;
    STORY_SPECIFIED = events.STORY_SPECIFIED;
    SET_STORIES = events.SET_STORIES;
    SET_CURRENT_STORY = events.SET_CURRENT_STORY;
    CURRENT_STORY_WAS_SET = events.CURRENT_STORY_WAS_SET;
    FORCE_RE_RENDER = events.FORCE_RE_RENDER;
    FORCE_REMOUNT = events.FORCE_REMOUNT;
    STORY_PREPARED = events.STORY_PREPARED;
    STORY_CHANGED = events.STORY_CHANGED;
    STORY_UNCHANGED = events.STORY_UNCHANGED;
    STORY_RENDERED = events.STORY_RENDERED;
    STORY_MISSING = events.STORY_MISSING;
    STORY_ERRORED = events.STORY_ERRORED;
    STORY_THREW_EXCEPTION = events.STORY_THREW_EXCEPTION;
    STORY_RENDER_PHASE_CHANGED = events.STORY_RENDER_PHASE_CHANGED;
    UPDATE_STORY_ARGS = events.UPDATE_STORY_ARGS;
    STORY_ARGS_UPDATED = events.STORY_ARGS_UPDATED;
    RESET_STORY_ARGS = events.RESET_STORY_ARGS;
    SET_GLOBALS = events.SET_GLOBALS;
    UPDATE_GLOBALS = events.UPDATE_GLOBALS;
    GLOBALS_UPDATED = events.GLOBALS_UPDATED;
    REGISTER_SUBSCRIPTION = events.REGISTER_SUBSCRIPTION;
    PREVIEW_KEYDOWN = events.PREVIEW_KEYDOWN;
    SELECT_STORY = events.SELECT_STORY;
    STORIES_COLLAPSE_ALL = events.STORIES_COLLAPSE_ALL;
    STORIES_EXPAND_ALL = events.STORIES_EXPAND_ALL;
    DOCS_RENDERED = events.DOCS_RENDERED;
    SHARED_STATE_CHANGED = events.SHARED_STATE_CHANGED;
    SHARED_STATE_SET = events.SHARED_STATE_SET;
    NAVIGATE_URL = events.NAVIGATE_URL;
    UPDATE_QUERY_PARAMS = events.UPDATE_QUERY_PARAMS;
    IGNORED_EXCEPTION = new Error("ignoredException");
  }
});

// node_modules/@storybook/preview-web/node_modules/@storybook/client-logger/dist/esm/index.js
var import_es_array_iterator, import_es_string_iterator, import_es_regexp_exec, import_global, LOGLEVEL, console, levels, currentLogLevelString, currentLogLevelNumber, logger, logged, once, pretty;
var init_esm5 = __esm({
  "node_modules/@storybook/preview-web/node_modules/@storybook/client-logger/dist/esm/index.js"() {
    init_define_import_meta_env();
    init_es_array_concat();
    import_es_array_iterator = __toESM(require_es_array_iterator());
    init_es_object_to_string();
    init_es_set();
    import_es_string_iterator = __toESM(require_es_string_iterator());
    init_web_dom_collections_iterator();
    import_es_regexp_exec = __toESM(require_es_regexp_exec());
    init_es_string_replace();
    import_global = __toESM(require_window());
    LOGLEVEL = import_global.default.LOGLEVEL;
    console = import_global.default.console;
    levels = {
      trace: 1,
      debug: 2,
      info: 3,
      warn: 4,
      error: 5,
      silent: 10
    };
    currentLogLevelString = LOGLEVEL;
    currentLogLevelNumber = levels[currentLogLevelString] || levels.info;
    logger = {
      trace: function trace(message) {
        for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          rest[_key - 1] = arguments[_key];
        }
        return currentLogLevelNumber <= levels.trace && console.trace.apply(console, [message].concat(rest));
      },
      debug: function debug(message) {
        for (var _len2 = arguments.length, rest = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
          rest[_key2 - 1] = arguments[_key2];
        }
        return currentLogLevelNumber <= levels.debug && console.debug.apply(console, [message].concat(rest));
      },
      info: function info(message) {
        for (var _len3 = arguments.length, rest = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
          rest[_key3 - 1] = arguments[_key3];
        }
        return currentLogLevelNumber <= levels.info && console.info.apply(console, [message].concat(rest));
      },
      warn: function warn(message) {
        for (var _len4 = arguments.length, rest = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
          rest[_key4 - 1] = arguments[_key4];
        }
        return currentLogLevelNumber <= levels.warn && console.warn.apply(console, [message].concat(rest));
      },
      error: function error(message) {
        for (var _len5 = arguments.length, rest = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {
          rest[_key5 - 1] = arguments[_key5];
        }
        return currentLogLevelNumber <= levels.error && console.error.apply(console, [message].concat(rest));
      },
      log: function log(message) {
        for (var _len6 = arguments.length, rest = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {
          rest[_key6 - 1] = arguments[_key6];
        }
        return currentLogLevelNumber < levels.silent && console.log.apply(console, [message].concat(rest));
      }
    };
    logged = /* @__PURE__ */ new Set();
    once = function once2(type) {
      return function(message) {
        if (logged.has(message))
          return void 0;
        logged.add(message);
        for (var _len7 = arguments.length, rest = new Array(_len7 > 1 ? _len7 - 1 : 0), _key7 = 1; _key7 < _len7; _key7++) {
          rest[_key7 - 1] = arguments[_key7];
        }
        return logger[type].apply(logger, [message].concat(rest));
      };
    };
    once.clear = function() {
      return logged.clear();
    };
    once.trace = once("trace");
    once.debug = once("debug");
    once.info = once("info");
    once.warn = once("warn");
    once.error = once("error");
    once.log = once("log");
    pretty = function pretty2(type) {
      return function() {
        var argArray = [];
        for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
          args[_key8] = arguments[_key8];
        }
        if (args.length) {
          var startTagRe = /<span\s+style=(['"])([^'"]*)\1\s*>/gi;
          var endTagRe = /<\/span>/gi;
          var reResultArray;
          argArray.push(args[0].replace(startTagRe, "%c").replace(endTagRe, "%c"));
          while (reResultArray = startTagRe.exec(args[0])) {
            argArray.push(reResultArray[2]);
            argArray.push("");
          }
          for (var j = 1; j < args.length; j++) {
            argArray.push(args[j]);
          }
        }
        logger[type].apply(logger, argArray);
      };
    };
    pretty.trace = pretty("trace");
    pretty.debug = pretty("debug");
    pretty.info = pretty("info");
    pretty.warn = pretty("warn");
    pretty.error = pretty("error");
  }
});

// node_modules/@storybook/preview-web/node_modules/@storybook/addons/dist/esm/storybook-channel-mock.js
function mockChannel() {
  var transport = {
    setHandler: function setHandler() {
    },
    send: function send() {
    }
  };
  return new esm_default2({
    transport
  });
}
var init_storybook_channel_mock = __esm({
  "node_modules/@storybook/preview-web/node_modules/@storybook/addons/dist/esm/storybook-channel-mock.js"() {
    init_define_import_meta_env();
    init_esm2();
  }
});

// node_modules/@storybook/preview-web/node_modules/@storybook/addons/dist/esm/types.js
var types;
var init_types = __esm({
  "node_modules/@storybook/preview-web/node_modules/@storybook/addons/dist/esm/types.js"() {
    init_define_import_meta_env();
    init_es_array_find();
    init_es_object_to_string();
    init_es_object_values();
    (function(types2) {
      types2["TAB"] = "tab";
      types2["PANEL"] = "panel";
      types2["TOOL"] = "tool";
      types2["TOOLEXTRA"] = "toolextra";
      types2["PREVIEW"] = "preview";
      types2["NOTES_ELEMENT"] = "notes-element";
    })(types || (types = {}));
  }
});

// node_modules/@storybook/preview-web/node_modules/@storybook/addons/dist/esm/index.js
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function getAddonsStore() {
  if (!import_global2.default[KEY]) {
    import_global2.default[KEY] = new AddonStore();
  }
  return import_global2.default[KEY];
}
var import_global2, AddonStore, KEY, addons;
var init_esm6 = __esm({
  "node_modules/@storybook/preview-web/node_modules/@storybook/addons/dist/esm/index.js"() {
    init_define_import_meta_env();
    init_es_object_assign();
    init_es_object_to_string();
    init_web_dom_collections_for_each();
    init_es_object_values();
    init_es_promise();
    import_global2 = __toESM(require_window());
    init_esm2();
    init_esm5();
    init_storybook_channel_mock();
    init_types();
    AddonStore = _createClass(function AddonStore2() {
      var _this = this;
      _classCallCheck(this, AddonStore2);
      this.loaders = {};
      this.elements = {};
      this.config = {};
      this.channel = void 0;
      this.serverChannel = void 0;
      this.promise = void 0;
      this.resolve = void 0;
      this.getChannel = function() {
        if (!_this.channel) {
          _this.setChannel(mockChannel());
        }
        return _this.channel;
      };
      this.getServerChannel = function() {
        if (!_this.serverChannel) {
          throw new Error("Accessing non-existent serverChannel");
        }
        return _this.serverChannel;
      };
      this.ready = function() {
        return _this.promise;
      };
      this.hasChannel = function() {
        return !!_this.channel;
      };
      this.hasServerChannel = function() {
        return !!_this.serverChannel;
      };
      this.setChannel = function(channel) {
        _this.channel = channel;
        _this.resolve();
      };
      this.setServerChannel = function(channel) {
        _this.serverChannel = channel;
      };
      this.getElements = function(type) {
        if (!_this.elements[type]) {
          _this.elements[type] = {};
        }
        return _this.elements[type];
      };
      this.addPanel = function(name, options) {
        _this.add(name, Object.assign({
          type: types.PANEL
        }, options));
      };
      this.add = function(name, addon) {
        var type = addon.type;
        var collection = _this.getElements(type);
        collection[name] = Object.assign({
          id: name
        }, addon);
      };
      this.setConfig = function(value) {
        Object.assign(_this.config, value);
      };
      this.getConfig = function() {
        return _this.config;
      };
      this.register = function(name, registerCallback) {
        if (_this.loaders[name]) {
          logger.warn("".concat(name, " was loaded twice, this could have bad side-effects"));
        }
        _this.loaders[name] = registerCallback;
      };
      this.loadAddons = function(api) {
        Object.values(_this.loaders).forEach(function(value) {
          return value(api);
        });
      };
      this.promise = new Promise(function(res) {
        _this.resolve = function() {
          return res(_this.getChannel());
        };
      });
    });
    KEY = "__STORYBOOK_ADDONS";
    addons = getAddonsStore();
  }
});

// node_modules/@storybook/preview-web/node_modules/@storybook/addons/dist/esm/make-decorator.js
var init_make_decorator = __esm({
  "node_modules/@storybook/preview-web/node_modules/@storybook/addons/dist/esm/make-decorator.js"() {
    init_define_import_meta_env();
    init_es_function_name();
    init_es_array_concat();
  }
});

// node_modules/@storybook/preview-web/node_modules/@storybook/addons/dist/esm/hooks.js
function _classCallCheck2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass2(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties2(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties2(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var import_es_array_iterator2, import_es_string_iterator2, import_es_regexp_exec2, import_global3, globalWindow, HooksContext;
var init_hooks = __esm({
  "node_modules/@storybook/preview-web/node_modules/@storybook/addons/dist/esm/hooks.js"() {
    init_define_import_meta_env();
    import_es_array_iterator2 = __toESM(require_es_array_iterator());
    init_es_object_to_string();
    import_es_string_iterator2 = __toESM(require_es_string_iterator());
    init_es_weak_map();
    init_web_dom_collections_iterator();
    init_es_set();
    init_web_dom_collections_for_each();
    init_es_array_includes();
    init_es_string_includes();
    init_es_function_name();
    init_es_array_map();
    init_es_array_concat();
    init_es_object_entries();
    init_es_object_keys();
    init_es_symbol();
    init_es_symbol_description();
    init_es_symbol_iterator();
    init_es_array_from();
    init_es_array_slice();
    import_es_regexp_exec2 = __toESM(require_es_regexp_exec());
    import_global3 = __toESM(require_window());
    init_esm5();
    init_esm4();
    init_esm6();
    globalWindow = import_global3.default.window;
    HooksContext = function() {
      function HooksContext2() {
        var _this = this;
        _classCallCheck2(this, HooksContext2);
        this.hookListsMap = void 0;
        this.mountedDecorators = void 0;
        this.prevMountedDecorators = void 0;
        this.currentHooks = void 0;
        this.nextHookIndex = void 0;
        this.currentPhase = void 0;
        this.currentEffects = void 0;
        this.prevEffects = void 0;
        this.currentDecoratorName = void 0;
        this.hasUpdates = void 0;
        this.currentContext = void 0;
        this.renderListener = function(storyId) {
          if (storyId !== _this.currentContext.id)
            return;
          _this.triggerEffects();
          _this.currentContext = null;
          _this.removeRenderListeners();
        };
        this.init();
      }
      _createClass2(HooksContext2, [{
        key: "init",
        value: function init() {
          this.hookListsMap = /* @__PURE__ */ new WeakMap();
          this.mountedDecorators = /* @__PURE__ */ new Set();
          this.prevMountedDecorators = this.mountedDecorators;
          this.currentHooks = [];
          this.nextHookIndex = 0;
          this.currentPhase = "NONE";
          this.currentEffects = [];
          this.prevEffects = [];
          this.currentDecoratorName = null;
          this.hasUpdates = false;
          this.currentContext = null;
        }
      }, {
        key: "clean",
        value: function clean() {
          this.prevEffects.forEach(function(effect) {
            if (effect.destroy) {
              effect.destroy();
            }
          });
          this.init();
          this.removeRenderListeners();
        }
      }, {
        key: "getNextHook",
        value: function getNextHook() {
          var hook = this.currentHooks[this.nextHookIndex];
          this.nextHookIndex += 1;
          return hook;
        }
      }, {
        key: "triggerEffects",
        value: function triggerEffects() {
          var _this2 = this;
          this.prevEffects.forEach(function(effect) {
            if (!_this2.currentEffects.includes(effect) && effect.destroy) {
              effect.destroy();
            }
          });
          this.currentEffects.forEach(function(effect) {
            if (!_this2.prevEffects.includes(effect)) {
              effect.destroy = effect.create();
            }
          });
          this.prevEffects = this.currentEffects;
          this.currentEffects = [];
        }
      }, {
        key: "addRenderListeners",
        value: function addRenderListeners() {
          this.removeRenderListeners();
          var channel = addons.getChannel();
          channel.on(STORY_RENDERED, this.renderListener);
        }
      }, {
        key: "removeRenderListeners",
        value: function removeRenderListeners() {
          var channel = addons.getChannel();
          channel.removeListener(STORY_RENDERED, this.renderListener);
        }
      }]);
      return HooksContext2;
    }();
  }
});

// node_modules/@storybook/preview-web/node_modules/@storybook/addons/dist/esm/public_api.js
var init_public_api = __esm({
  "node_modules/@storybook/preview-web/node_modules/@storybook/addons/dist/esm/public_api.js"() {
    init_define_import_meta_env();
    init_esm6();
    init_make_decorator();
    init_esm6();
    init_types();
    init_storybook_channel_mock();
    init_hooks();
  }
});

// node_modules/@storybook/preview-web/dist/esm/parseArgsParam.js
function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
var import_es_array_iterator3, import_es_string_iterator3, import_es_regexp_exec3, import_qs, import_isPlainObject, _templateObject, VALIDATION_REGEXP, NUMBER_REGEXP, HEX_REGEXP, COLOR_REGEXP, validateArgs, QS_OPTIONS, parseArgsParam;
var init_parseArgsParam = __esm({
  "node_modules/@storybook/preview-web/dist/esm/parseArgsParam.js"() {
    init_define_import_meta_env();
    init_es_symbol();
    init_es_symbol_description();
    init_es_symbol_iterator();
    import_es_array_iterator3 = __toESM(require_es_array_iterator());
    import_es_string_iterator3 = __toESM(require_es_string_iterator());
    init_web_dom_collections_iterator();
    init_es_function_name();
    init_es_array_from();
    init_es_object_freeze();
    import_es_regexp_exec3 = __toESM(require_es_regexp_exec());
    init_es_object_to_string();
    init_es_object_entries();
    init_es_regexp_to_string();
    init_es_string_starts_with();
    init_es_string_ends_with();
    init_es_array_slice();
    init_es_string_match();
    init_es_array_concat();
    init_es_number_constructor();
    init_es_array_map();
    init_es_string_split();
    init_es_string_replace();
    init_es_array_join();
    init_es_object_assign();
    import_qs = __toESM(require_lib());
    init_esm();
    init_esm5();
    import_isPlainObject = __toESM(require_isPlainObject());
    VALIDATION_REGEXP = /^[a-zA-Z0-9 _-]*$/;
    NUMBER_REGEXP = /^-?[0-9]+(\.[0-9]+)?$/;
    HEX_REGEXP = /^#([a-f0-9]{3,4}|[a-f0-9]{6}|[a-f0-9]{8})$/i;
    COLOR_REGEXP = /^(rgba?|hsla?)\(([0-9]{1,3}),\s?([0-9]{1,3})%?,\s?([0-9]{1,3})%?,?\s?([0-9](\.[0-9]{1,2})?)?\)$/i;
    validateArgs = function validateArgs2() {
      var key = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
      var value = arguments.length > 1 ? arguments[1] : void 0;
      if (key === null)
        return false;
      if (key === "" || !VALIDATION_REGEXP.test(key))
        return false;
      if (value === null || value === void 0)
        return true;
      if (value instanceof Date)
        return true;
      if (typeof value === "number" || typeof value === "boolean")
        return true;
      if (typeof value === "string") {
        return VALIDATION_REGEXP.test(value) || NUMBER_REGEXP.test(value) || HEX_REGEXP.test(value) || COLOR_REGEXP.test(value);
      }
      if (Array.isArray(value))
        return value.every(function(v) {
          return validateArgs2(key, v);
        });
      if ((0, import_isPlainObject.default)(value))
        return Object.entries(value).every(function(_ref) {
          var _ref2 = _slicedToArray(_ref, 2), k = _ref2[0], v = _ref2[1];
          return validateArgs2(k, v);
        });
      return false;
    };
    QS_OPTIONS = {
      delimiter: ";",
      allowDots: true,
      allowSparse: true,
      decoder: function(_decoder) {
        function decoder(_x, _x2, _x3, _x4) {
          return _decoder.apply(this, arguments);
        }
        decoder.toString = function() {
          return _decoder.toString();
        };
        return decoder;
      }(function(str, defaultDecoder, charset, type) {
        if (type === "value" && str.startsWith("!")) {
          if (str === "!undefined")
            return void 0;
          if (str === "!null")
            return null;
          if (str.startsWith("!date(") && str.endsWith(")"))
            return new Date(str.slice(6, -1));
          if (str.startsWith("!hex(") && str.endsWith(")"))
            return "#".concat(str.slice(5, -1));
          var color = str.slice(1).match(COLOR_REGEXP);
          if (color) {
            if (str.startsWith("!rgba"))
              return "".concat(color[1], "(").concat(color[2], ", ").concat(color[3], ", ").concat(color[4], ", ").concat(color[5], ")");
            if (str.startsWith("!hsla"))
              return "".concat(color[1], "(").concat(color[2], ", ").concat(color[3], "%, ").concat(color[4], "%, ").concat(color[5], ")");
            return str.startsWith("!rgb") ? "".concat(color[1], "(").concat(color[2], ", ").concat(color[3], ", ").concat(color[4], ")") : "".concat(color[1], "(").concat(color[2], ", ").concat(color[3], "%, ").concat(color[4], "%)");
          }
        }
        if (type === "value" && NUMBER_REGEXP.test(str))
          return Number(str);
        return defaultDecoder(str, defaultDecoder, charset);
      })
    };
    parseArgsParam = function parseArgsParam2(argsString) {
      var parts = argsString.split(";").map(function(part) {
        return part.replace("=", "~").replace(":", "=");
      });
      return Object.entries(import_qs.default.parse(parts.join(";"), QS_OPTIONS)).reduce(function(acc, _ref3) {
        var _ref4 = _slicedToArray(_ref3, 2), key = _ref4[0], value = _ref4[1];
        if (validateArgs(key, value))
          return Object.assign(acc, _defineProperty({}, key, value));
        once.warn(esm_default(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      Omitted potentially unsafe URL args.\n\n      More info: https://storybook.js.org/docs/react/writing-stories/args#setting-args-through-the-url\n    "]))));
        return acc;
      }, {});
    };
  }
});

// node_modules/@storybook/preview-web/dist/esm/UrlStore.js
function _classCallCheck3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties3(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass3(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties3(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties3(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function pathToId(path) {
  var match = (path || "").match(/^\/story\/(.+)/);
  if (!match) {
    throw new Error("Invalid path '".concat(path, "',  must start with '/story/'"));
  }
  return match[1];
}
var import_es_array_iterator4, import_es_string_iterator4, import_es_regexp_exec4, import_global4, import_qs2, import_util_deprecate, _excluded, history, document, getQueryString, setPath, isObject, getFirstString, deprecatedLegacyQuery, getSelectionSpecifierFromPath, UrlStore;
var init_UrlStore = __esm({
  "node_modules/@storybook/preview-web/dist/esm/UrlStore.js"() {
    init_define_import_meta_env();
    init_es_object_keys();
    init_es_symbol();
    init_es_symbol_description();
    init_es_object_to_string();
    init_es_symbol_iterator();
    import_es_array_iterator4 = __toESM(require_es_array_iterator());
    import_es_string_iterator4 = __toESM(require_es_string_iterator());
    init_web_dom_collections_iterator();
    import_es_regexp_exec4 = __toESM(require_es_regexp_exec());
    init_es_string_match();
    init_es_string_search();
    init_es_object_assign();
    init_es_array_concat();
    init_es_object_values();
    import_global4 = __toESM(require_window());
    import_qs2 = __toESM(require_lib());
    import_util_deprecate = __toESM(require_browser());
    init_parseArgsParam();
    _excluded = ["path", "selectedKind", "selectedStory"];
    history = import_global4.default.history;
    document = import_global4.default.document;
    getQueryString = function getQueryString2(_ref) {
      var selection = _ref.selection, extraParams = _ref.extraParams;
      var _document$location$se = document.location.search, search = _document$location$se === void 0 ? "" : _document$location$se;
      var _qs$parse = import_qs2.default.parse(search, {
        ignoreQueryPrefix: true
      }), path = _qs$parse.path, selectedKind = _qs$parse.selectedKind, selectedStory = _qs$parse.selectedStory, rest = _objectWithoutProperties(_qs$parse, _excluded);
      return import_qs2.default.stringify(Object.assign({}, rest, extraParams, selection && {
        id: selection.storyId,
        viewMode: selection.viewMode
      }), {
        encode: false,
        addQueryPrefix: true
      });
    };
    setPath = function setPath2(selection) {
      if (!selection)
        return;
      var query = getQueryString({
        selection
      });
      var _document$location$ha = document.location.hash, hash = _document$location$ha === void 0 ? "" : _document$location$ha;
      document.title = selection.storyId;
      history.replaceState({}, "", "".concat(document.location.pathname).concat(query).concat(hash));
    };
    isObject = function isObject2(val) {
      return val != null && _typeof(val) === "object" && Array.isArray(val) === false;
    };
    getFirstString = function getFirstString2(v) {
      if (typeof v === "string") {
        return v;
      }
      if (Array.isArray(v)) {
        return getFirstString2(v[0]);
      }
      if (isObject(v)) {
        return getFirstString2(Object.values(v));
      }
      return void 0;
    };
    deprecatedLegacyQuery = (0, import_util_deprecate.default)(function() {
      return 0;
    }, "URL formats with `selectedKind` and `selectedName` query parameters are deprecated.\nUse `id=$storyId` instead.\nSee https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#new-url-structure");
    getSelectionSpecifierFromPath = function getSelectionSpecifierFromPath2() {
      var query = import_qs2.default.parse(document.location.search, {
        ignoreQueryPrefix: true
      });
      var args = typeof query.args === "string" ? parseArgsParam(query.args) : void 0;
      var globals = typeof query.globals === "string" ? parseArgsParam(query.globals) : void 0;
      var viewMode = getFirstString(query.viewMode);
      if (typeof viewMode !== "string" || !viewMode.match(/docs|story/)) {
        viewMode = "story";
      }
      var path = getFirstString(query.path);
      var storyId = path ? pathToId(path) : getFirstString(query.id);
      if (storyId) {
        return {
          storySpecifier: storyId,
          args,
          globals,
          viewMode
        };
      }
      var title = getFirstString(query.selectedKind);
      var name = getFirstString(query.selectedStory);
      if (title && name) {
        deprecatedLegacyQuery();
        return {
          storySpecifier: {
            title,
            name
          },
          args,
          globals,
          viewMode
        };
      }
      return null;
    };
    UrlStore = function() {
      function UrlStore2() {
        _classCallCheck3(this, UrlStore2);
        this.selectionSpecifier = void 0;
        this.selection = void 0;
        this.selectionSpecifier = getSelectionSpecifierFromPath();
      }
      _createClass3(UrlStore2, [{
        key: "setSelection",
        value: function setSelection(selection) {
          this.selection = selection;
          setPath(this.selection);
        }
      }, {
        key: "setQueryParams",
        value: function setQueryParams(queryParams) {
          var query = getQueryString({
            extraParams: queryParams
          });
          var _document$location$ha2 = document.location.hash, hash = _document$location$ha2 === void 0 ? "" : _document$location$ha2;
          history.replaceState({}, "", "".concat(document.location.pathname).concat(query).concat(hash));
        }
      }]);
      return UrlStore2;
    }();
  }
});

// node_modules/@storybook/preview-web/dist/esm/WebView.js
function _slicedToArray2(arr, i) {
  return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray2(o, minLen);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit2(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles2(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _taggedTemplateLiteral2(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _classCallCheck4(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties4(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass4(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties4(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties4(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var import_es_array_iterator5, import_es_string_iterator5, import_es_regexp_exec5, import_global5, import_ansi_to_html, import_qs3, _templateObject2, document2, layoutClassMap, Mode, classes, ansiConverter, WebView;
var init_WebView = __esm({
  "node_modules/@storybook/preview-web/dist/esm/WebView.js"() {
    init_define_import_meta_env();
    init_es_object_freeze();
    init_es_symbol();
    init_es_symbol_description();
    init_es_symbol_iterator();
    import_es_array_iterator5 = __toESM(require_es_array_iterator());
    import_es_string_iterator5 = __toESM(require_es_string_iterator());
    init_web_dom_collections_iterator();
    init_es_function_name();
    init_es_array_from();
    import_es_regexp_exec5 = __toESM(require_es_regexp_exec());
    init_es_string_search();
    init_es_array_join();
    init_es_object_keys();
    init_es_object_to_string();
    init_web_dom_collections_for_each();
    init_es_string_split();
    init_es_array_slice();
    import_global5 = __toESM(require_window());
    init_esm5();
    import_ansi_to_html = __toESM(require_ansi_to_html());
    init_esm();
    import_qs3 = __toESM(require_lib());
    document2 = import_global5.default.document;
    layoutClassMap = {
      centered: "sb-main-centered",
      fullscreen: "sb-main-fullscreen",
      padded: "sb-main-padded"
    };
    (function(Mode2) {
      Mode2["MAIN"] = "MAIN";
      Mode2["NOPREVIEW"] = "NOPREVIEW";
      Mode2["PREPARING_STORY"] = "PREPARING_STORY";
      Mode2["PREPARING_DOCS"] = "PREPARING_DOCS";
      Mode2["ERROR"] = "ERROR";
    })(Mode || (Mode = {}));
    classes = {
      PREPARING_STORY: "sb-show-preparing-story",
      PREPARING_DOCS: "sb-show-preparing-docs",
      MAIN: "sb-show-main",
      NOPREVIEW: "sb-show-nopreview",
      ERROR: "sb-show-errordisplay"
    };
    ansiConverter = new import_ansi_to_html.default({
      escapeXML: true
    });
    WebView = function() {
      function WebView2() {
        _classCallCheck4(this, WebView2);
        this.currentLayoutClass = void 0;
        this.testing = false;
        var _qs$parse = import_qs3.default.parse(document2.location.search, {
          ignoreQueryPrefix: true
        }), __SPECIAL_TEST_PARAMETER__ = _qs$parse.__SPECIAL_TEST_PARAMETER__;
        switch (__SPECIAL_TEST_PARAMETER__) {
          case "preparing-story": {
            this.showPreparingStory();
            this.testing = true;
            break;
          }
          case "preparing-docs": {
            this.showPreparingDocs();
            this.testing = true;
            break;
          }
          default:
        }
      }
      _createClass4(WebView2, [{
        key: "prepareForStory",
        value: function prepareForStory(story) {
          this.showStory();
          this.applyLayout(story.parameters.layout);
          document2.documentElement.scrollTop = 0;
          document2.documentElement.scrollLeft = 0;
          return this.storyRoot();
        }
      }, {
        key: "storyRoot",
        value: function storyRoot() {
          return document2.getElementById("root");
        }
      }, {
        key: "prepareForDocs",
        value: function prepareForDocs() {
          this.showMain();
          this.showDocs();
          this.applyLayout("fullscreen");
          return this.docsRoot();
        }
      }, {
        key: "docsRoot",
        value: function docsRoot() {
          return document2.getElementById("docs-root");
        }
      }, {
        key: "applyLayout",
        value: function applyLayout() {
          var layout = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "padded";
          if (layout === "none") {
            document2.body.classList.remove(this.currentLayoutClass);
            this.currentLayoutClass = null;
            return;
          }
          this.checkIfLayoutExists(layout);
          var layoutClass = layoutClassMap[layout];
          document2.body.classList.remove(this.currentLayoutClass);
          document2.body.classList.add(layoutClass);
          this.currentLayoutClass = layoutClass;
        }
      }, {
        key: "checkIfLayoutExists",
        value: function checkIfLayoutExists(layout) {
          if (!layoutClassMap[layout]) {
            logger.warn(esm_default(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral2(["The desired layout: ", " is not a valid option.\n         The possible options are: ", ", none."])), layout, Object.keys(layoutClassMap).join(", ")));
          }
        }
      }, {
        key: "showMode",
        value: function showMode(mode) {
          Object.keys(Mode).forEach(function(otherMode) {
            if (otherMode === mode) {
              document2.body.classList.add(classes[otherMode]);
            } else {
              document2.body.classList.remove(classes[otherMode]);
            }
          });
        }
      }, {
        key: "showErrorDisplay",
        value: function showErrorDisplay(_ref) {
          var _ref$message = _ref.message, message = _ref$message === void 0 ? "" : _ref$message, _ref$stack = _ref.stack, stack = _ref$stack === void 0 ? "" : _ref$stack;
          var header = message;
          var detail = stack;
          var parts = message.split("\n");
          if (parts.length > 1) {
            var _parts = _slicedToArray2(parts, 1);
            header = _parts[0];
            detail = parts.slice(1).join("\n");
          }
          document2.getElementById("error-message").innerHTML = ansiConverter.toHtml(header);
          document2.getElementById("error-stack").innerHTML = ansiConverter.toHtml(detail);
          this.showMode(Mode.ERROR);
        }
      }, {
        key: "showNoPreview",
        value: function showNoPreview() {
          var _this$storyRoot, _this$docsRoot;
          if (this.testing)
            return;
          this.showMode(Mode.NOPREVIEW);
          (_this$storyRoot = this.storyRoot()) === null || _this$storyRoot === void 0 ? void 0 : _this$storyRoot.setAttribute("hidden", "true");
          (_this$docsRoot = this.docsRoot()) === null || _this$docsRoot === void 0 ? void 0 : _this$docsRoot.setAttribute("hidden", "true");
        }
      }, {
        key: "showPreparingStory",
        value: function showPreparingStory() {
          this.showMode(Mode.PREPARING_STORY);
        }
      }, {
        key: "showPreparingDocs",
        value: function showPreparingDocs() {
          this.showMode(Mode.PREPARING_DOCS);
        }
      }, {
        key: "showMain",
        value: function showMain() {
          this.showMode(Mode.MAIN);
        }
      }, {
        key: "showDocs",
        value: function showDocs() {
          this.storyRoot().setAttribute("hidden", "true");
          this.docsRoot().removeAttribute("hidden");
        }
      }, {
        key: "showStory",
        value: function showStory() {
          this.docsRoot().setAttribute("hidden", "true");
          this.storyRoot().removeAttribute("hidden");
        }
      }]);
      return WebView2;
    }();
  }
});

// node_modules/@storybook/preview-web/dist/esm/DocsRender.js
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info2 = gen[key](arg);
    var value = info2.value;
  } catch (error2) {
    reject(error2);
    return;
  }
  if (info2.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _classCallCheck5(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties5(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass5(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties5(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties5(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var import_runtime, import_global6, DocsRender;
var init_DocsRender = __esm({
  "node_modules/@storybook/preview-web/dist/esm/DocsRender.js"() {
    init_define_import_meta_env();
    import_runtime = __toESM(require_runtime());
    init_es_function_name();
    init_es_object_assign();
    init_es_object_to_string();
    init_es_promise();
    import_global6 = __toESM(require_window());
    init_esm4();
    DocsRender = function() {
      function DocsRender2(channel, store, id, story) {
        _classCallCheck5(this, DocsRender2);
        this.channel = channel;
        this.store = store;
        this.id = id;
        this.story = story;
        this.canvasElement = void 0;
        this.context = void 0;
        this.disableKeyListeners = false;
      }
      _createClass5(DocsRender2, [{
        key: "isPreparing",
        value: function isPreparing() {
          return false;
        }
      }, {
        key: "renderToElement",
        value: function() {
          var _renderToElement = _asyncToGenerator(regeneratorRuntime.mark(function _callee(canvasElement, renderStoryToElement) {
            var _this = this, _global$FEATURES;
            var _this$story, id, title, name, csfFile;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    this.canvasElement = canvasElement;
                    _this$story = this.story, id = _this$story.id, title = _this$story.title, name = _this$story.name;
                    _context.next = 4;
                    return this.store.loadCSFFileByStoryId(this.id);
                  case 4:
                    csfFile = _context.sent;
                    this.context = Object.assign({
                      id,
                      title,
                      name,
                      storyById: function storyById(storyId) {
                        return _this.store.storyFromCSFFile({
                          storyId,
                          csfFile
                        });
                      },
                      componentStories: function componentStories() {
                        return _this.store.componentStoriesFromCSFFile({
                          csfFile
                        });
                      },
                      loadStory: function loadStory(storyId) {
                        return _this.store.loadStory({
                          storyId
                        });
                      },
                      renderStoryToElement: renderStoryToElement.bind(this),
                      getStoryContext: function getStoryContext(renderedStory) {
                        return Object.assign({}, _this.store.getStoryContext(renderedStory), {
                          viewMode: "docs"
                        });
                      }
                    }, !((_global$FEATURES = import_global6.default.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.breakingChangesV7) && this.store.getStoryContext(this.story));
                    return _context.abrupt("return", this.render());
                  case 7:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee, this);
          }));
          function renderToElement(_x, _x2) {
            return _renderToElement.apply(this, arguments);
          }
          return renderToElement;
        }()
      }, {
        key: "render",
        value: function() {
          var _render = _asyncToGenerator(regeneratorRuntime.mark(function _callee2() {
            var _this2 = this;
            var renderer;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    if (!(!this.story || !this.context || !this.canvasElement)) {
                      _context2.next = 2;
                      break;
                    }
                    throw new Error("DocsRender not ready to render");
                  case 2:
                    _context2.next = 4;
                    return import("./renderDocs-6BTRBA3E.js");
                  case 4:
                    renderer = _context2.sent;
                    renderer.renderDocs(this.story, this.context, this.canvasElement, function() {
                      return _this2.channel.emit(DOCS_RENDERED, _this2.id);
                    });
                  case 6:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2, this);
          }));
          function render() {
            return _render.apply(this, arguments);
          }
          return render;
        }()
      }, {
        key: "rerender",
        value: function() {
          var _rerender = _asyncToGenerator(regeneratorRuntime.mark(function _callee3() {
            var _global$FEATURES2;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    if ((_global$FEATURES2 = import_global6.default.FEATURES) !== null && _global$FEATURES2 !== void 0 && _global$FEATURES2.modernInlineRender) {
                      _context3.next = 3;
                      break;
                    }
                    _context3.next = 3;
                    return this.render();
                  case 3:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3, this);
          }));
          function rerender() {
            return _rerender.apply(this, arguments);
          }
          return rerender;
        }()
      }, {
        key: "teardown",
        value: function() {
          var _teardown = _asyncToGenerator(regeneratorRuntime.mark(function _callee4() {
            var _ref, viewModeChanged, renderer, _args4 = arguments;
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    _ref = _args4.length > 0 && _args4[0] !== void 0 ? _args4[0] : {}, viewModeChanged = _ref.viewModeChanged;
                    if (!(!viewModeChanged || !this.canvasElement)) {
                      _context4.next = 3;
                      break;
                    }
                    return _context4.abrupt("return");
                  case 3:
                    _context4.next = 5;
                    return import("./renderDocs-6BTRBA3E.js");
                  case 5:
                    renderer = _context4.sent;
                    renderer.unmountDocs(this.canvasElement);
                  case 7:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee4, this);
          }));
          function teardown() {
            return _teardown.apply(this, arguments);
          }
          return teardown;
        }()
      }]);
      return DocsRender2;
    }();
    DocsRender.displayName = "DocsRender";
  }
});

// node_modules/@storybook/preview-web/dist/esm/StoryRender.js
function asyncGeneratorStep2(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info2 = gen[key](arg);
    var value = info2.value;
  } catch (error2) {
    reject(error2);
    return;
  }
  if (info2.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator2(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep2(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep2(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _classCallCheck6(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties6(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass6(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties6(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties6(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function createController() {
  if (AbortController)
    return new AbortController();
  return {
    signal: {
      aborted: false
    },
    abort: function abort() {
      this.signal.aborted = true;
    }
  };
}
var import_runtime2, import_global7, AbortController, PREPARE_ABORTED, StoryRender;
var init_StoryRender = __esm({
  "node_modules/@storybook/preview-web/dist/esm/StoryRender.js"() {
    init_define_import_meta_env();
    init_es_array_includes();
    init_es_function_name();
    init_es_object_assign();
    init_es_object_to_string();
    init_es_promise();
    import_runtime2 = __toESM(require_runtime());
    import_global7 = __toESM(require_window());
    init_esm4();
    init_DocsRender();
    AbortController = import_global7.default.AbortController;
    PREPARE_ABORTED = new Error("prepareAborted");
    StoryRender = function() {
      function StoryRender2(channel, store, renderToScreen, callbacks, id, viewMode, story) {
        _classCallCheck6(this, StoryRender2);
        this.channel = channel;
        this.store = store;
        this.renderToScreen = renderToScreen;
        this.callbacks = callbacks;
        this.id = id;
        this.viewMode = viewMode;
        this.story = void 0;
        this.phase = void 0;
        this.abortController = void 0;
        this.canvasElement = void 0;
        this.notYetRendered = true;
        this.disableKeyListeners = false;
        this.abortController = createController();
        if (story) {
          this.story = story;
          this.phase = "preparing";
        }
      }
      _createClass6(StoryRender2, [{
        key: "runPhase",
        value: function() {
          var _runPhase = _asyncToGenerator2(regeneratorRuntime.mark(function _callee(signal, phase, phaseFn) {
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    this.phase = phase;
                    this.channel.emit(STORY_RENDER_PHASE_CHANGED, {
                      newPhase: this.phase,
                      storyId: this.id
                    });
                    if (!phaseFn) {
                      _context.next = 5;
                      break;
                    }
                    _context.next = 5;
                    return phaseFn();
                  case 5:
                    if (signal.aborted) {
                      this.phase = "aborted";
                      this.channel.emit(STORY_RENDER_PHASE_CHANGED, {
                        newPhase: this.phase,
                        storyId: this.id
                      });
                    }
                  case 6:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee, this);
          }));
          function runPhase(_x, _x2, _x3) {
            return _runPhase.apply(this, arguments);
          }
          return runPhase;
        }()
      }, {
        key: "prepare",
        value: function() {
          var _prepare = _asyncToGenerator2(regeneratorRuntime.mark(function _callee3() {
            var _this = this;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    _context3.next = 2;
                    return this.runPhase(this.abortController.signal, "preparing", _asyncToGenerator2(regeneratorRuntime.mark(function _callee2() {
                      return regeneratorRuntime.wrap(function _callee2$(_context2) {
                        while (1) {
                          switch (_context2.prev = _context2.next) {
                            case 0:
                              _context2.next = 2;
                              return _this.store.loadStory({
                                storyId: _this.id
                              });
                            case 2:
                              _this.story = _context2.sent;
                            case 3:
                            case "end":
                              return _context2.stop();
                          }
                        }
                      }, _callee2);
                    })));
                  case 2:
                    if (!this.abortController.signal.aborted) {
                      _context3.next = 5;
                      break;
                    }
                    this.store.cleanupStory(this.story);
                    throw PREPARE_ABORTED;
                  case 5:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3, this);
          }));
          function prepare() {
            return _prepare.apply(this, arguments);
          }
          return prepare;
        }()
      }, {
        key: "isEqual",
        value: function isEqual(other) {
          return other && this.id === other.id && this.story && this.story === other.story;
        }
      }, {
        key: "isPreparing",
        value: function isPreparing() {
          return ["preparing"].includes(this.phase);
        }
      }, {
        key: "isPending",
        value: function isPending() {
          return ["rendering", "playing"].includes(this.phase);
        }
      }, {
        key: "toDocsRender",
        value: function toDocsRender() {
          return new DocsRender(this.channel, this.store, this.id, this.story);
        }
      }, {
        key: "context",
        value: function context() {
          return this.store.getStoryContext(this.story);
        }
      }, {
        key: "renderToElement",
        value: function() {
          var _renderToElement = _asyncToGenerator2(regeneratorRuntime.mark(function _callee4(canvasElement) {
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    this.canvasElement = canvasElement;
                    return _context4.abrupt("return", this.render({
                      initial: true,
                      forceRemount: true
                    }));
                  case 2:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee4, this);
          }));
          function renderToElement(_x4) {
            return _renderToElement.apply(this, arguments);
          }
          return renderToElement;
        }()
      }, {
        key: "render",
        value: function() {
          var _render = _asyncToGenerator2(regeneratorRuntime.mark(function _callee9() {
            var _this2 = this;
            var _ref2, _ref2$initial, initial, _ref2$forceRemount, forceRemount, _this$story, id, componentId, title, name, applyLoaders, unboundStoryFn, playFunction, abortSignal, loadedContext, renderStoryContext, _renderContext, _args9 = arguments;
            return regeneratorRuntime.wrap(function _callee9$(_context9) {
              while (1) {
                switch (_context9.prev = _context9.next) {
                  case 0:
                    _ref2 = _args9.length > 0 && _args9[0] !== void 0 ? _args9[0] : {}, _ref2$initial = _ref2.initial, initial = _ref2$initial === void 0 ? false : _ref2$initial, _ref2$forceRemount = _ref2.forceRemount, forceRemount = _ref2$forceRemount === void 0 ? false : _ref2$forceRemount;
                    if (this.story) {
                      _context9.next = 3;
                      break;
                    }
                    throw new Error("cannot render when not prepared");
                  case 3:
                    _this$story = this.story, id = _this$story.id, componentId = _this$story.componentId, title = _this$story.title, name = _this$story.name, applyLoaders = _this$story.applyLoaders, unboundStoryFn = _this$story.unboundStoryFn, playFunction = _this$story.playFunction;
                    if (forceRemount && !initial) {
                      this.cancelRender();
                      this.abortController = createController();
                    }
                    abortSignal = this.abortController.signal;
                    _context9.prev = 6;
                    _context9.next = 9;
                    return this.runPhase(abortSignal, "loading", _asyncToGenerator2(regeneratorRuntime.mark(function _callee5() {
                      return regeneratorRuntime.wrap(function _callee5$(_context5) {
                        while (1) {
                          switch (_context5.prev = _context5.next) {
                            case 0:
                              _context5.next = 2;
                              return applyLoaders(Object.assign({}, _this2.context(), {
                                viewMode: _this2.viewMode
                              }));
                            case 2:
                              loadedContext = _context5.sent;
                            case 3:
                            case "end":
                              return _context5.stop();
                          }
                        }
                      }, _callee5);
                    })));
                  case 9:
                    if (!abortSignal.aborted) {
                      _context9.next = 11;
                      break;
                    }
                    return _context9.abrupt("return");
                  case 11:
                    renderStoryContext = Object.assign({}, loadedContext, this.context(), {
                      abortSignal,
                      canvasElement: this.canvasElement
                    });
                    _renderContext = Object.assign({
                      componentId,
                      title,
                      kind: title,
                      id,
                      name,
                      story: name
                    }, this.callbacks, {
                      forceRemount: forceRemount || this.notYetRendered,
                      storyContext: renderStoryContext,
                      storyFn: function storyFn() {
                        return unboundStoryFn(renderStoryContext);
                      },
                      unboundStoryFn
                    });
                    _context9.next = 15;
                    return this.runPhase(abortSignal, "rendering", _asyncToGenerator2(regeneratorRuntime.mark(function _callee6() {
                      return regeneratorRuntime.wrap(function _callee6$(_context6) {
                        while (1) {
                          switch (_context6.prev = _context6.next) {
                            case 0:
                              return _context6.abrupt("return", _this2.renderToScreen(_renderContext, _this2.canvasElement));
                            case 1:
                            case "end":
                              return _context6.stop();
                          }
                        }
                      }, _callee6);
                    })));
                  case 15:
                    this.notYetRendered = false;
                    if (!abortSignal.aborted) {
                      _context9.next = 18;
                      break;
                    }
                    return _context9.abrupt("return");
                  case 18:
                    if (!(forceRemount && playFunction)) {
                      _context9.next = 27;
                      break;
                    }
                    this.disableKeyListeners = true;
                    _context9.next = 22;
                    return this.runPhase(abortSignal, "playing", _asyncToGenerator2(regeneratorRuntime.mark(function _callee7() {
                      return regeneratorRuntime.wrap(function _callee7$(_context7) {
                        while (1) {
                          switch (_context7.prev = _context7.next) {
                            case 0:
                              return _context7.abrupt("return", playFunction(_renderContext.storyContext));
                            case 1:
                            case "end":
                              return _context7.stop();
                          }
                        }
                      }, _callee7);
                    })));
                  case 22:
                    _context9.next = 24;
                    return this.runPhase(abortSignal, "played");
                  case 24:
                    this.disableKeyListeners = false;
                    if (!abortSignal.aborted) {
                      _context9.next = 27;
                      break;
                    }
                    return _context9.abrupt("return");
                  case 27:
                    _context9.next = 29;
                    return this.runPhase(abortSignal, "completed", _asyncToGenerator2(regeneratorRuntime.mark(function _callee8() {
                      return regeneratorRuntime.wrap(function _callee8$(_context8) {
                        while (1) {
                          switch (_context8.prev = _context8.next) {
                            case 0:
                              return _context8.abrupt("return", _this2.channel.emit(STORY_RENDERED, id));
                            case 1:
                            case "end":
                              return _context8.stop();
                          }
                        }
                      }, _callee8);
                    })));
                  case 29:
                    _context9.next = 34;
                    break;
                  case 31:
                    _context9.prev = 31;
                    _context9.t0 = _context9["catch"](6);
                    this.callbacks.showException(_context9.t0);
                  case 34:
                  case "end":
                    return _context9.stop();
                }
              }
            }, _callee9, this, [[6, 31]]);
          }));
          function render() {
            return _render.apply(this, arguments);
          }
          return render;
        }()
      }, {
        key: "rerender",
        value: function() {
          var _rerender = _asyncToGenerator2(regeneratorRuntime.mark(function _callee10() {
            return regeneratorRuntime.wrap(function _callee10$(_context10) {
              while (1) {
                switch (_context10.prev = _context10.next) {
                  case 0:
                    return _context10.abrupt("return", this.render());
                  case 1:
                  case "end":
                    return _context10.stop();
                }
              }
            }, _callee10, this);
          }));
          function rerender() {
            return _rerender.apply(this, arguments);
          }
          return rerender;
        }()
      }, {
        key: "remount",
        value: function() {
          var _remount = _asyncToGenerator2(regeneratorRuntime.mark(function _callee11() {
            return regeneratorRuntime.wrap(function _callee11$(_context11) {
              while (1) {
                switch (_context11.prev = _context11.next) {
                  case 0:
                    return _context11.abrupt("return", this.render({
                      forceRemount: true
                    }));
                  case 1:
                  case "end":
                    return _context11.stop();
                }
              }
            }, _callee11, this);
          }));
          function remount() {
            return _remount.apply(this, arguments);
          }
          return remount;
        }()
      }, {
        key: "cancelRender",
        value: function cancelRender() {
          this.abortController.abort();
        }
      }, {
        key: "teardown",
        value: function() {
          var _teardown = _asyncToGenerator2(regeneratorRuntime.mark(function _callee12() {
            var options, i, _args12 = arguments;
            return regeneratorRuntime.wrap(function _callee12$(_context12) {
              while (1) {
                switch (_context12.prev = _context12.next) {
                  case 0:
                    options = _args12.length > 0 && _args12[0] !== void 0 ? _args12[0] : {};
                    this.cancelRender();
                    if (this.story)
                      this.store.cleanupStory(this.story);
                    i = 0;
                  case 4:
                    if (!(i < 3)) {
                      _context12.next = 12;
                      break;
                    }
                    if (this.isPending()) {
                      _context12.next = 7;
                      break;
                    }
                    return _context12.abrupt("return");
                  case 7:
                    _context12.next = 9;
                    return new Promise(function(resolve) {
                      return setTimeout(resolve, 0);
                    });
                  case 9:
                    i += 1;
                    _context12.next = 4;
                    break;
                  case 12:
                    import_global7.default.window.location.reload();
                    _context12.next = 15;
                    return new Promise(function() {
                    });
                  case 15:
                  case "end":
                    return _context12.stop();
                }
              }
            }, _callee12, this);
          }));
          function teardown() {
            return _teardown.apply(this, arguments);
          }
          return teardown;
        }()
      }]);
      return StoryRender2;
    }();
    StoryRender.displayName = "StoryRender";
  }
});

// node_modules/@storybook/preview-web/dist/esm/PreviewWeb.js
function asyncGeneratorStep3(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info2 = gen[key](arg);
    var value = info2.value;
  } catch (error2) {
    reject(error2);
    return;
  }
  if (info2.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator3(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep3(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep3(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _taggedTemplateLiteral3(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _classCallCheck7(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties7(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass7(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties7(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties7(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function focusInInput(event) {
  var target = event.target;
  return /input|textarea/i.test(target.tagName) || target.getAttribute("contenteditable") !== null;
}
var import_runtime3, import_es_regexp_exec6, import_es_array_iterator6, import_es_string_iterator6, import_util_deprecate2, import_global8, import_synchronous_promise, _templateObject3, _templateObject22, _templateObject32, _templateObject4, _templateObject5, globalWindow2, fetch, STORY_INDEX_PATH, PreviewWeb;
var init_PreviewWeb = __esm({
  "node_modules/@storybook/preview-web/dist/esm/PreviewWeb.js"() {
    init_define_import_meta_env();
    init_es_array_slice();
    init_es_object_freeze();
    import_runtime3 = __toESM(require_runtime());
    init_es_object_to_string();
    init_es_promise();
    import_es_regexp_exec6 = __toESM(require_es_regexp_exec());
    import_es_array_iterator6 = __toESM(require_es_array_iterator());
    import_es_string_iterator6 = __toESM(require_es_string_iterator());
    init_web_dom_collections_iterator();
    init_es_array_map();
    init_es_array_filter();
    init_es_object_keys();
    init_es_symbol();
    init_es_symbol_description();
    init_es_array_concat();
    import_util_deprecate2 = __toESM(require_browser());
    init_esm();
    import_global8 = __toESM(require_window());
    import_synchronous_promise = __toESM(require_synchronous_promise());
    init_esm4();
    init_esm5();
    init_public_api();
    init_esm3();
    init_UrlStore();
    init_WebView();
    init_StoryRender();
    init_DocsRender();
    globalWindow2 = import_global8.default.window;
    fetch = import_global8.default.fetch;
    STORY_INDEX_PATH = "./stories.json";
    PreviewWeb = function() {
      function PreviewWeb2() {
        var _global$FEATURES, _this = this;
        _classCallCheck7(this, PreviewWeb2);
        this.channel = void 0;
        this.serverChannel = void 0;
        this.urlStore = void 0;
        this.storyStore = void 0;
        this.view = void 0;
        this.getStoryIndex = void 0;
        this.importFn = void 0;
        this.renderToDOM = void 0;
        this.previewEntryError = void 0;
        this.currentSelection = void 0;
        this.currentRender = void 0;
        this.storyRenders = [];
        this.previousCleanup = void 0;
        this.channel = addons.getChannel();
        if ((_global$FEATURES = import_global8.default.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.storyStoreV7 && addons.hasServerChannel()) {
          this.serverChannel = addons.getServerChannel();
        }
        this.view = new WebView();
        this.urlStore = new UrlStore();
        this.storyStore = new StoryStore();
        this.storyStore.getSelection = (0, import_util_deprecate2.default)(function() {
          return _this.urlStore.selection;
        }, esm_default(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral3(["\n        `__STORYBOOK_STORY_STORE__.getSelection()` is deprecated and will be removed in 7.0.\n  \n        To get the current selection, use the `useStoryContext()` hook from `@storybook/addons`.\n      "], ["\n        \\`__STORYBOOK_STORY_STORE__.getSelection()\\` is deprecated and will be removed in 7.0.\n  \n        To get the current selection, use the \\`useStoryContext()\\` hook from \\`@storybook/addons\\`.\n      "]))));
      }
      _createClass7(PreviewWeb2, [{
        key: "initialize",
        value: function initialize(_ref) {
          var _this2 = this;
          var getStoryIndex = _ref.getStoryIndex, importFn = _ref.importFn, getProjectAnnotations = _ref.getProjectAnnotations;
          this.getStoryIndex = getStoryIndex;
          this.importFn = importFn;
          this.setupListeners();
          return this.getProjectAnnotationsOrRenderError(getProjectAnnotations).then(function(projectAnnotations) {
            return _this2.initializeWithProjectAnnotations(projectAnnotations);
          });
        }
      }, {
        key: "setupListeners",
        value: function setupListeners() {
          var _this$serverChannel;
          globalWindow2.onkeydown = this.onKeydown.bind(this);
          (_this$serverChannel = this.serverChannel) === null || _this$serverChannel === void 0 ? void 0 : _this$serverChannel.on(esm_default3.STORY_INDEX_INVALIDATED, this.onStoryIndexChanged.bind(this));
          this.channel.on(esm_default3.SET_CURRENT_STORY, this.onSetCurrentStory.bind(this));
          this.channel.on(esm_default3.UPDATE_QUERY_PARAMS, this.onUpdateQueryParams.bind(this));
          this.channel.on(esm_default3.UPDATE_GLOBALS, this.onUpdateGlobals.bind(this));
          this.channel.on(esm_default3.UPDATE_STORY_ARGS, this.onUpdateArgs.bind(this));
          this.channel.on(esm_default3.RESET_STORY_ARGS, this.onResetArgs.bind(this));
          this.channel.on(esm_default3.FORCE_RE_RENDER, this.onForceReRender.bind(this));
          this.channel.on(esm_default3.FORCE_REMOUNT, this.onForceRemount.bind(this));
        }
      }, {
        key: "getProjectAnnotationsOrRenderError",
        value: function getProjectAnnotationsOrRenderError(getProjectAnnotations) {
          var _this3 = this;
          return import_synchronous_promise.SynchronousPromise.resolve().then(getProjectAnnotations).then(function(projectAnnotations) {
            _this3.renderToDOM = projectAnnotations.renderToDOM;
            if (!_this3.renderToDOM) {
              throw new Error(esm_default(_templateObject22 || (_templateObject22 = _taggedTemplateLiteral3(["\n            Expected your framework's preset to export a `renderToDOM` field.\n\n            Perhaps it needs to be upgraded for Storybook 6.4?\n\n            More info: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#mainjs-framework-field          \n          "], ["\n            Expected your framework's preset to export a \\`renderToDOM\\` field.\n\n            Perhaps it needs to be upgraded for Storybook 6.4?\n\n            More info: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#mainjs-framework-field          \n          "]))));
            }
            return projectAnnotations;
          }).catch(function(err) {
            _this3.renderPreviewEntryError("Error reading preview.js:", err);
            throw err;
          });
        }
      }, {
        key: "initializeWithProjectAnnotations",
        value: function initializeWithProjectAnnotations(projectAnnotations) {
          var _global$FEATURES2, _this4 = this;
          this.storyStore.setProjectAnnotations(projectAnnotations);
          this.setInitialGlobals();
          var storyIndexPromise;
          if ((_global$FEATURES2 = import_global8.default.FEATURES) !== null && _global$FEATURES2 !== void 0 && _global$FEATURES2.storyStoreV7) {
            storyIndexPromise = this.getStoryIndexFromServer();
          } else {
            if (!this.getStoryIndex) {
              throw new Error("No `getStoryIndex` passed defined in v6 mode");
            }
            storyIndexPromise = import_synchronous_promise.SynchronousPromise.resolve().then(this.getStoryIndex);
          }
          return storyIndexPromise.then(function(storyIndex) {
            return _this4.initializeWithStoryIndex(storyIndex);
          }).catch(function(err) {
            _this4.renderPreviewEntryError("Error loading story index:", err);
            throw err;
          });
        }
      }, {
        key: "setInitialGlobals",
        value: function() {
          var _setInitialGlobals = _asyncToGenerator3(regeneratorRuntime.mark(function _callee() {
            var _ref2, globals;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    _ref2 = this.urlStore.selectionSpecifier || {}, globals = _ref2.globals;
                    if (globals) {
                      this.storyStore.globals.updateFromPersisted(globals);
                    }
                    this.emitGlobals();
                  case 3:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee, this);
          }));
          function setInitialGlobals() {
            return _setInitialGlobals.apply(this, arguments);
          }
          return setInitialGlobals;
        }()
      }, {
        key: "emitGlobals",
        value: function emitGlobals() {
          this.channel.emit(esm_default3.SET_GLOBALS, {
            globals: this.storyStore.globals.get() || {},
            globalTypes: this.storyStore.projectAnnotations.globalTypes || {}
          });
        }
      }, {
        key: "getStoryIndexFromServer",
        value: function() {
          var _getStoryIndexFromServer = _asyncToGenerator3(regeneratorRuntime.mark(function _callee2() {
            var result;
            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    _context2.next = 2;
                    return fetch(STORY_INDEX_PATH);
                  case 2:
                    result = _context2.sent;
                    if (!(result.status === 200)) {
                      _context2.next = 5;
                      break;
                    }
                    return _context2.abrupt("return", result.json());
                  case 5:
                    _context2.t0 = Error;
                    _context2.next = 8;
                    return result.text();
                  case 8:
                    _context2.t1 = _context2.sent;
                    throw new _context2.t0(_context2.t1);
                  case 10:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }));
          function getStoryIndexFromServer() {
            return _getStoryIndexFromServer.apply(this, arguments);
          }
          return getStoryIndexFromServer;
        }()
      }, {
        key: "initializeWithStoryIndex",
        value: function initializeWithStoryIndex(storyIndex) {
          var _global$FEATURES3, _this5 = this;
          return this.storyStore.initialize({
            storyIndex,
            importFn: this.importFn,
            cache: !((_global$FEATURES3 = import_global8.default.FEATURES) !== null && _global$FEATURES3 !== void 0 && _global$FEATURES3.storyStoreV7)
          }).then(function() {
            var _global$FEATURES4;
            if (!((_global$FEATURES4 = import_global8.default.FEATURES) !== null && _global$FEATURES4 !== void 0 && _global$FEATURES4.storyStoreV7)) {
              _this5.channel.emit(esm_default3.SET_STORIES, _this5.storyStore.getSetStoriesPayload());
            }
            return _this5.selectSpecifiedStory();
          });
        }
      }, {
        key: "selectSpecifiedStory",
        value: function() {
          var _selectSpecifiedStory = _asyncToGenerator3(regeneratorRuntime.mark(function _callee3() {
            var _this$urlStore$select, storySpecifier, viewMode, args, storyId;
            return regeneratorRuntime.wrap(function _callee3$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    if (this.urlStore.selectionSpecifier) {
                      _context3.next = 3;
                      break;
                    }
                    this.renderMissingStory();
                    return _context3.abrupt("return");
                  case 3:
                    _this$urlStore$select = this.urlStore.selectionSpecifier, storySpecifier = _this$urlStore$select.storySpecifier, viewMode = _this$urlStore$select.viewMode, args = _this$urlStore$select.args;
                    storyId = this.storyStore.storyIndex.storyIdFromSpecifier(storySpecifier);
                    if (storyId) {
                      _context3.next = 8;
                      break;
                    }
                    if (storySpecifier === "*") {
                      this.renderStoryLoadingException(storySpecifier, new Error(esm_default(_templateObject32 || (_templateObject32 = _taggedTemplateLiteral3(["\n            Couldn't find any stories in your Storybook.\n            - Please check your stories field of your main.js config.\n            - Also check the browser console and terminal for error messages.\n          "])))));
                    } else {
                      this.renderStoryLoadingException(storySpecifier, new Error(esm_default(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral3(["\n            Couldn't find story matching '", "'.\n            - Are you sure a story with that id exists?\n            - Please check your stories field of your main.js config.\n            - Also check the browser console and terminal for error messages.\n          "])), storySpecifier)));
                    }
                    return _context3.abrupt("return");
                  case 8:
                    this.urlStore.setSelection({
                      storyId,
                      viewMode
                    });
                    this.channel.emit(esm_default3.STORY_SPECIFIED, this.urlStore.selection);
                    this.channel.emit(esm_default3.CURRENT_STORY_WAS_SET, this.urlStore.selection);
                    _context3.next = 13;
                    return this.renderSelection({
                      persistedArgs: args
                    });
                  case 13:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee3, this);
          }));
          function selectSpecifiedStory() {
            return _selectSpecifiedStory.apply(this, arguments);
          }
          return selectSpecifiedStory;
        }()
      }, {
        key: "onGetProjectAnnotationsChanged",
        value: function() {
          var _onGetProjectAnnotationsChanged = _asyncToGenerator3(regeneratorRuntime.mark(function _callee4(_ref3) {
            var getProjectAnnotations, projectAnnotations;
            return regeneratorRuntime.wrap(function _callee4$(_context4) {
              while (1) {
                switch (_context4.prev = _context4.next) {
                  case 0:
                    getProjectAnnotations = _ref3.getProjectAnnotations;
                    delete this.previewEntryError;
                    _context4.next = 4;
                    return this.getProjectAnnotationsOrRenderError(getProjectAnnotations);
                  case 4:
                    projectAnnotations = _context4.sent;
                    if (this.storyStore.projectAnnotations) {
                      _context4.next = 9;
                      break;
                    }
                    _context4.next = 8;
                    return this.initializeWithProjectAnnotations(projectAnnotations);
                  case 8:
                    return _context4.abrupt("return");
                  case 9:
                    _context4.next = 11;
                    return this.storyStore.setProjectAnnotations(projectAnnotations);
                  case 11:
                    this.emitGlobals();
                    this.renderSelection();
                  case 13:
                  case "end":
                    return _context4.stop();
                }
              }
            }, _callee4, this);
          }));
          function onGetProjectAnnotationsChanged(_x) {
            return _onGetProjectAnnotationsChanged.apply(this, arguments);
          }
          return onGetProjectAnnotationsChanged;
        }()
      }, {
        key: "onStoryIndexChanged",
        value: function() {
          var _onStoryIndexChanged = _asyncToGenerator3(regeneratorRuntime.mark(function _callee5() {
            var storyIndex;
            return regeneratorRuntime.wrap(function _callee5$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    delete this.previewEntryError;
                    if (this.storyStore.projectAnnotations) {
                      _context5.next = 3;
                      break;
                    }
                    return _context5.abrupt("return");
                  case 3:
                    _context5.prev = 3;
                    _context5.next = 6;
                    return this.getStoryIndexFromServer();
                  case 6:
                    storyIndex = _context5.sent;
                    if (this.storyStore.storyIndex) {
                      _context5.next = 10;
                      break;
                    }
                    _context5.next = 10;
                    return this.initializeWithStoryIndex(storyIndex);
                  case 10:
                    _context5.next = 12;
                    return this.onStoriesChanged({
                      storyIndex
                    });
                  case 12:
                    _context5.next = 18;
                    break;
                  case 14:
                    _context5.prev = 14;
                    _context5.t0 = _context5["catch"](3);
                    this.renderPreviewEntryError("Error loading story index:", _context5.t0);
                    throw _context5.t0;
                  case 18:
                  case "end":
                    return _context5.stop();
                }
              }
            }, _callee5, this, [[3, 14]]);
          }));
          function onStoryIndexChanged() {
            return _onStoryIndexChanged.apply(this, arguments);
          }
          return onStoryIndexChanged;
        }()
      }, {
        key: "onStoriesChanged",
        value: function() {
          var _onStoriesChanged = _asyncToGenerator3(regeneratorRuntime.mark(function _callee6(_ref4) {
            var _global$FEATURES5;
            var importFn, storyIndex;
            return regeneratorRuntime.wrap(function _callee6$(_context6) {
              while (1) {
                switch (_context6.prev = _context6.next) {
                  case 0:
                    importFn = _ref4.importFn, storyIndex = _ref4.storyIndex;
                    _context6.next = 3;
                    return this.storyStore.onStoriesChanged({
                      importFn,
                      storyIndex
                    });
                  case 3:
                    if ((_global$FEATURES5 = import_global8.default.FEATURES) !== null && _global$FEATURES5 !== void 0 && _global$FEATURES5.storyStoreV7) {
                      _context6.next = 10;
                      break;
                    }
                    _context6.t0 = this.channel;
                    _context6.t1 = esm_default3.SET_STORIES;
                    _context6.next = 8;
                    return this.storyStore.getSetStoriesPayload();
                  case 8:
                    _context6.t2 = _context6.sent;
                    _context6.t0.emit.call(_context6.t0, _context6.t1, _context6.t2);
                  case 10:
                    if (!this.urlStore.selection) {
                      _context6.next = 15;
                      break;
                    }
                    _context6.next = 13;
                    return this.renderSelection();
                  case 13:
                    _context6.next = 17;
                    break;
                  case 15:
                    _context6.next = 17;
                    return this.selectSpecifiedStory();
                  case 17:
                  case "end":
                    return _context6.stop();
                }
              }
            }, _callee6, this);
          }));
          function onStoriesChanged(_x2) {
            return _onStoriesChanged.apply(this, arguments);
          }
          return onStoriesChanged;
        }()
      }, {
        key: "onKeydown",
        value: function onKeydown(event) {
          var _this$currentRender;
          if (!((_this$currentRender = this.currentRender) !== null && _this$currentRender !== void 0 && _this$currentRender.disableKeyListeners) && !focusInInput(event)) {
            var altKey = event.altKey, ctrlKey = event.ctrlKey, metaKey = event.metaKey, shiftKey = event.shiftKey, key = event.key, code = event.code, keyCode = event.keyCode;
            this.channel.emit(esm_default3.PREVIEW_KEYDOWN, {
              event: {
                altKey,
                ctrlKey,
                metaKey,
                shiftKey,
                key,
                code,
                keyCode
              }
            });
          }
        }
      }, {
        key: "onSetCurrentStory",
        value: function onSetCurrentStory(selection) {
          this.urlStore.setSelection(selection);
          this.channel.emit(esm_default3.CURRENT_STORY_WAS_SET, this.urlStore.selection);
          this.renderSelection();
        }
      }, {
        key: "onUpdateQueryParams",
        value: function onUpdateQueryParams(queryParams) {
          this.urlStore.setQueryParams(queryParams);
        }
      }, {
        key: "onUpdateGlobals",
        value: function() {
          var _onUpdateGlobals = _asyncToGenerator3(regeneratorRuntime.mark(function _callee7(_ref5) {
            var globals;
            return regeneratorRuntime.wrap(function _callee7$(_context7) {
              while (1) {
                switch (_context7.prev = _context7.next) {
                  case 0:
                    globals = _ref5.globals;
                    this.storyStore.globals.update(globals);
                    _context7.next = 4;
                    return Promise.all(this.storyRenders.map(function(r) {
                      return r.rerender();
                    }));
                  case 4:
                    if (!(this.currentRender instanceof DocsRender)) {
                      _context7.next = 7;
                      break;
                    }
                    _context7.next = 7;
                    return this.currentRender.rerender();
                  case 7:
                    this.channel.emit(esm_default3.GLOBALS_UPDATED, {
                      globals: this.storyStore.globals.get(),
                      initialGlobals: this.storyStore.globals.initialGlobals
                    });
                  case 8:
                  case "end":
                    return _context7.stop();
                }
              }
            }, _callee7, this);
          }));
          function onUpdateGlobals(_x3) {
            return _onUpdateGlobals.apply(this, arguments);
          }
          return onUpdateGlobals;
        }()
      }, {
        key: "onUpdateArgs",
        value: function() {
          var _onUpdateArgs = _asyncToGenerator3(regeneratorRuntime.mark(function _callee8(_ref6) {
            var storyId, updatedArgs;
            return regeneratorRuntime.wrap(function _callee8$(_context8) {
              while (1) {
                switch (_context8.prev = _context8.next) {
                  case 0:
                    storyId = _ref6.storyId, updatedArgs = _ref6.updatedArgs;
                    this.storyStore.args.update(storyId, updatedArgs);
                    _context8.next = 4;
                    return Promise.all(this.storyRenders.filter(function(r) {
                      return r.id === storyId;
                    }).map(function(r) {
                      return r.rerender();
                    }));
                  case 4:
                    if (!(this.currentRender instanceof DocsRender)) {
                      _context8.next = 7;
                      break;
                    }
                    _context8.next = 7;
                    return this.currentRender.rerender();
                  case 7:
                    this.channel.emit(esm_default3.STORY_ARGS_UPDATED, {
                      storyId,
                      args: this.storyStore.args.get(storyId)
                    });
                  case 8:
                  case "end":
                    return _context8.stop();
                }
              }
            }, _callee8, this);
          }));
          function onUpdateArgs(_x4) {
            return _onUpdateArgs.apply(this, arguments);
          }
          return onUpdateArgs;
        }()
      }, {
        key: "onResetArgs",
        value: function() {
          var _onResetArgs = _asyncToGenerator3(regeneratorRuntime.mark(function _callee9(_ref7) {
            var _this$currentRender2;
            var storyId, argNames, _ref8, initialArgs, argNamesToReset, updatedArgs;
            return regeneratorRuntime.wrap(function _callee9$(_context9) {
              while (1) {
                switch (_context9.prev = _context9.next) {
                  case 0:
                    storyId = _ref7.storyId, argNames = _ref7.argNames;
                    if (!(storyId === ((_this$currentRender2 = this.currentRender) === null || _this$currentRender2 === void 0 ? void 0 : _this$currentRender2.id))) {
                      _context9.next = 5;
                      break;
                    }
                    _context9.t0 = this.currentRender.story;
                    _context9.next = 8;
                    break;
                  case 5:
                    _context9.next = 7;
                    return this.storyStore.loadStory({
                      storyId
                    });
                  case 7:
                    _context9.t0 = _context9.sent;
                  case 8:
                    _ref8 = _context9.t0;
                    initialArgs = _ref8.initialArgs;
                    argNamesToReset = argNames || Object.keys(this.storyStore.args.get(storyId));
                    updatedArgs = argNamesToReset.reduce(function(acc, argName) {
                      acc[argName] = initialArgs[argName];
                      return acc;
                    }, {});
                    _context9.next = 14;
                    return this.onUpdateArgs({
                      storyId,
                      updatedArgs
                    });
                  case 14:
                  case "end":
                    return _context9.stop();
                }
              }
            }, _callee9, this);
          }));
          function onResetArgs(_x5) {
            return _onResetArgs.apply(this, arguments);
          }
          return onResetArgs;
        }()
      }, {
        key: "onForceReRender",
        value: function() {
          var _onForceReRender = _asyncToGenerator3(regeneratorRuntime.mark(function _callee10() {
            return regeneratorRuntime.wrap(function _callee10$(_context10) {
              while (1) {
                switch (_context10.prev = _context10.next) {
                  case 0:
                    _context10.next = 2;
                    return Promise.all(this.storyRenders.map(function(r) {
                      return r.rerender();
                    }));
                  case 2:
                  case "end":
                    return _context10.stop();
                }
              }
            }, _callee10, this);
          }));
          function onForceReRender() {
            return _onForceReRender.apply(this, arguments);
          }
          return onForceReRender;
        }()
      }, {
        key: "onForceRemount",
        value: function() {
          var _onForceRemount = _asyncToGenerator3(regeneratorRuntime.mark(function _callee11(_ref9) {
            var storyId;
            return regeneratorRuntime.wrap(function _callee11$(_context11) {
              while (1) {
                switch (_context11.prev = _context11.next) {
                  case 0:
                    storyId = _ref9.storyId;
                    _context11.next = 3;
                    return Promise.all(this.storyRenders.filter(function(r) {
                      return r.id === storyId;
                    }).map(function(r) {
                      return r.remount();
                    }));
                  case 3:
                  case "end":
                    return _context11.stop();
                }
              }
            }, _callee11, this);
          }));
          function onForceRemount(_x6) {
            return _onForceRemount.apply(this, arguments);
          }
          return onForceRemount;
        }()
      }, {
        key: "renderSelection",
        value: function() {
          var _renderSelection = _asyncToGenerator3(regeneratorRuntime.mark(function _callee12() {
            var _this$currentSelectio, _this$currentSelectio2, _lastRender, _global$FEATURES6;
            var _ref10, persistedArgs, selection, storyId, storyIdChanged, viewModeChanged, lastSelection, lastRender, storyRender, implementationChanged, _storyRender$context, parameters, initialArgs, argTypes, args, _args12 = arguments;
            return regeneratorRuntime.wrap(function _callee12$(_context12) {
              while (1) {
                switch (_context12.prev = _context12.next) {
                  case 0:
                    _ref10 = _args12.length > 0 && _args12[0] !== void 0 ? _args12[0] : {}, persistedArgs = _ref10.persistedArgs;
                    selection = this.urlStore.selection;
                    if (selection) {
                      _context12.next = 4;
                      break;
                    }
                    throw new Error("Cannot render story as no selection was made");
                  case 4:
                    storyId = selection.storyId;
                    storyIdChanged = ((_this$currentSelectio = this.currentSelection) === null || _this$currentSelectio === void 0 ? void 0 : _this$currentSelectio.storyId) !== storyId;
                    viewModeChanged = ((_this$currentSelectio2 = this.currentSelection) === null || _this$currentSelectio2 === void 0 ? void 0 : _this$currentSelectio2.viewMode) !== selection.viewMode;
                    if (selection.viewMode === "story") {
                      this.view.showPreparingStory();
                    } else {
                      this.view.showPreparingDocs();
                    }
                    lastSelection = this.currentSelection;
                    lastRender = this.currentRender;
                    if (!((_lastRender = lastRender) !== null && _lastRender !== void 0 && _lastRender.isPreparing())) {
                      _context12.next = 14;
                      break;
                    }
                    _context12.next = 13;
                    return this.teardownRender(lastRender);
                  case 13:
                    lastRender = null;
                  case 14:
                    storyRender = new StoryRender(this.channel, this.storyStore, this.renderToDOM, this.mainStoryCallbacks(storyId), storyId, "story");
                    this.currentSelection = selection;
                    this.currentRender = storyRender;
                    _context12.prev = 17;
                    _context12.next = 20;
                    return storyRender.prepare();
                  case 20:
                    _context12.next = 29;
                    break;
                  case 22:
                    _context12.prev = 22;
                    _context12.t0 = _context12["catch"](17);
                    if (!(_context12.t0 !== PREPARE_ABORTED)) {
                      _context12.next = 28;
                      break;
                    }
                    _context12.next = 27;
                    return this.teardownRender(lastRender);
                  case 27:
                    this.renderStoryLoadingException(storyId, _context12.t0);
                  case 28:
                    return _context12.abrupt("return");
                  case 29:
                    implementationChanged = !storyIdChanged && !storyRender.isEqual(lastRender);
                    if (persistedArgs)
                      this.storyStore.args.updateFromPersisted(storyRender.story, persistedArgs);
                    _storyRender$context = storyRender.context(), parameters = _storyRender$context.parameters, initialArgs = _storyRender$context.initialArgs, argTypes = _storyRender$context.argTypes, args = _storyRender$context.args;
                    if (!(lastRender && !storyIdChanged && !implementationChanged && !viewModeChanged)) {
                      _context12.next = 37;
                      break;
                    }
                    this.currentRender = lastRender;
                    this.channel.emit(esm_default3.STORY_UNCHANGED, storyId);
                    this.view.showMain();
                    return _context12.abrupt("return");
                  case 37:
                    _context12.next = 39;
                    return this.teardownRender(lastRender, {
                      viewModeChanged
                    });
                  case 39:
                    if (lastSelection && (storyIdChanged || viewModeChanged)) {
                      this.channel.emit(esm_default3.STORY_CHANGED, storyId);
                    }
                    if ((_global$FEATURES6 = import_global8.default.FEATURES) !== null && _global$FEATURES6 !== void 0 && _global$FEATURES6.storyStoreV7) {
                      this.channel.emit(esm_default3.STORY_PREPARED, {
                        id: storyId,
                        parameters,
                        initialArgs,
                        argTypes,
                        args
                      });
                    }
                    if (implementationChanged || persistedArgs) {
                      this.channel.emit(esm_default3.STORY_ARGS_UPDATED, {
                        storyId,
                        args
                      });
                    }
                    if (selection.viewMode === "docs" || parameters.docsOnly) {
                      this.currentRender = storyRender.toDocsRender();
                      this.currentRender.renderToElement(this.view.prepareForDocs(), this.renderStoryToElement);
                    } else {
                      this.storyRenders.push(storyRender);
                      this.currentRender.renderToElement(this.view.prepareForStory(storyRender.story));
                    }
                  case 43:
                  case "end":
                    return _context12.stop();
                }
              }
            }, _callee12, this, [[17, 22]]);
          }));
          function renderSelection() {
            return _renderSelection.apply(this, arguments);
          }
          return renderSelection;
        }()
      }, {
        key: "renderStoryToElement",
        value: function renderStoryToElement(story, element) {
          var _this6 = this;
          var render = new StoryRender(this.channel, this.storyStore, this.renderToDOM, this.inlineStoryCallbacks(story.id), story.id, "docs", story);
          render.renderToElement(element);
          this.storyRenders.push(render);
          return _asyncToGenerator3(regeneratorRuntime.mark(function _callee13() {
            return regeneratorRuntime.wrap(function _callee13$(_context13) {
              while (1) {
                switch (_context13.prev = _context13.next) {
                  case 0:
                    _context13.next = 2;
                    return _this6.teardownRender(render);
                  case 2:
                  case "end":
                    return _context13.stop();
                }
              }
            }, _callee13);
          }));
        }
      }, {
        key: "teardownRender",
        value: function() {
          var _teardownRender = _asyncToGenerator3(regeneratorRuntime.mark(function _callee14(render) {
            var _ref12, viewModeChanged, _args14 = arguments;
            return regeneratorRuntime.wrap(function _callee14$(_context14) {
              while (1) {
                switch (_context14.prev = _context14.next) {
                  case 0:
                    _ref12 = _args14.length > 1 && _args14[1] !== void 0 ? _args14[1] : {}, viewModeChanged = _ref12.viewModeChanged;
                    this.storyRenders = this.storyRenders.filter(function(r) {
                      return r !== render;
                    });
                    _context14.next = 4;
                    return render === null || render === void 0 ? void 0 : render.teardown({
                      viewModeChanged
                    });
                  case 4:
                  case "end":
                    return _context14.stop();
                }
              }
            }, _callee14, this);
          }));
          function teardownRender(_x7) {
            return _teardownRender.apply(this, arguments);
          }
          return teardownRender;
        }()
      }, {
        key: "extract",
        value: function() {
          var _extract = _asyncToGenerator3(regeneratorRuntime.mark(function _callee15(options) {
            var _global$FEATURES7;
            return regeneratorRuntime.wrap(function _callee15$(_context15) {
              while (1) {
                switch (_context15.prev = _context15.next) {
                  case 0:
                    if (!this.previewEntryError) {
                      _context15.next = 2;
                      break;
                    }
                    throw this.previewEntryError;
                  case 2:
                    if (this.storyStore.projectAnnotations) {
                      _context15.next = 4;
                      break;
                    }
                    throw new Error(esm_default(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral3(["Failed to initialize Storybook.\n      \n      Do you have an error in your `preview.js`? Check your Storybook's browser console for errors."], ["Failed to initialize Storybook.\n      \n      Do you have an error in your \\`preview.js\\`? Check your Storybook's browser console for errors."]))));
                  case 4:
                    if (!((_global$FEATURES7 = import_global8.default.FEATURES) !== null && _global$FEATURES7 !== void 0 && _global$FEATURES7.storyStoreV7)) {
                      _context15.next = 7;
                      break;
                    }
                    _context15.next = 7;
                    return this.storyStore.cacheAllCSFFiles();
                  case 7:
                    return _context15.abrupt("return", this.storyStore.extract(options));
                  case 8:
                  case "end":
                    return _context15.stop();
                }
              }
            }, _callee15, this);
          }));
          function extract(_x8) {
            return _extract.apply(this, arguments);
          }
          return extract;
        }()
      }, {
        key: "mainStoryCallbacks",
        value: function mainStoryCallbacks(storyId) {
          var _this7 = this;
          return {
            showMain: function showMain() {
              return _this7.view.showMain();
            },
            showError: function showError(err) {
              return _this7.renderError(storyId, err);
            },
            showException: function showException(err) {
              return _this7.renderException(storyId, err);
            }
          };
        }
      }, {
        key: "inlineStoryCallbacks",
        value: function inlineStoryCallbacks(storyId) {
          return {
            showMain: function showMain() {
            },
            showError: function showError(err) {
              return logger.error("Error rendering docs story (".concat(storyId, ")"), err);
            },
            showException: function showException(err) {
              return logger.error("Error rendering docs story (".concat(storyId, ")"), err);
            }
          };
        }
      }, {
        key: "renderPreviewEntryError",
        value: function renderPreviewEntryError(reason, err) {
          this.previewEntryError = err;
          logger.error(reason);
          logger.error(err);
          this.view.showErrorDisplay(err);
          this.channel.emit(esm_default3.CONFIG_ERROR, err);
        }
      }, {
        key: "renderMissingStory",
        value: function renderMissingStory() {
          this.view.showNoPreview();
          this.channel.emit(esm_default3.STORY_MISSING);
        }
      }, {
        key: "renderStoryLoadingException",
        value: function renderStoryLoadingException(storySpecifier, err) {
          logger.error("Unable to load story '".concat(storySpecifier, "':"));
          logger.error(err);
          this.view.showErrorDisplay(err);
          this.channel.emit(esm_default3.STORY_MISSING, storySpecifier);
        }
      }, {
        key: "renderException",
        value: function renderException(storyId, err) {
          this.channel.emit(esm_default3.STORY_THREW_EXCEPTION, err);
          this.channel.emit(esm_default3.STORY_RENDER_PHASE_CHANGED, {
            newPhase: "errored",
            storyId
          });
          if (err !== IGNORED_EXCEPTION) {
            this.view.showErrorDisplay(err);
            logger.error("Error rendering story '".concat(storyId, "':"));
            logger.error(err);
          }
        }
      }, {
        key: "renderError",
        value: function renderError(storyId, _ref13) {
          var title = _ref13.title, description = _ref13.description;
          logger.error("Error rendering story ".concat(title, ": ").concat(description));
          this.channel.emit(esm_default3.STORY_ERRORED, {
            title,
            description
          });
          this.channel.emit(esm_default3.STORY_RENDER_PHASE_CHANGED, {
            newPhase: "errored",
            storyId
          });
          this.view.showErrorDisplay({
            message: title,
            stack: description
          });
        }
      }]);
      return PreviewWeb2;
    }();
  }
});

// node_modules/@storybook/preview-web/dist/esm/composeConfigs.js
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray3(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray3(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray3(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray3(o, minLen);
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray3(arr);
}
function _arrayLikeToArray3(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function getField(moduleExportList, field) {
  return moduleExportList.map(function(xs) {
    return xs[field];
  }).filter(Boolean);
}
function getArrayField(moduleExportList, field) {
  return getField(moduleExportList, field).reduce(function(a, b) {
    return [].concat(_toConsumableArray(a), _toConsumableArray(b));
  }, []);
}
function getObjectField(moduleExportList, field) {
  return Object.assign.apply(Object, [{}].concat(_toConsumableArray(getField(moduleExportList, field))));
}
function getSingletonField(moduleExportList, field) {
  return getField(moduleExportList, field).pop();
}
function composeConfigs(moduleExportList) {
  var allArgTypeEnhancers = getArrayField(moduleExportList, "argTypesEnhancers");
  return {
    parameters: combineParameters.apply(void 0, _toConsumableArray(getField(moduleExportList, "parameters"))),
    decorators: getArrayField(moduleExportList, "decorators"),
    args: getObjectField(moduleExportList, "args"),
    argsEnhancers: getArrayField(moduleExportList, "argsEnhancers"),
    argTypes: getObjectField(moduleExportList, "argTypes"),
    argTypesEnhancers: [].concat(_toConsumableArray(allArgTypeEnhancers.filter(function(e) {
      return !e.secondPass;
    })), _toConsumableArray(allArgTypeEnhancers.filter(function(e) {
      return e.secondPass;
    }))),
    globals: getObjectField(moduleExportList, "globals"),
    globalTypes: getObjectField(moduleExportList, "globalTypes"),
    loaders: getArrayField(moduleExportList, "loaders"),
    render: getSingletonField(moduleExportList, "render"),
    renderToDOM: getSingletonField(moduleExportList, "renderToDOM"),
    applyDecorators: getSingletonField(moduleExportList, "applyDecorators")
  };
}
var import_es_array_iterator7, import_es_string_iterator7, import_es_regexp_exec7;
var init_composeConfigs = __esm({
  "node_modules/@storybook/preview-web/dist/esm/composeConfigs.js"() {
    init_define_import_meta_env();
    init_es_array_filter();
    init_es_object_to_string();
    init_es_array_map();
    init_es_array_concat();
    init_es_object_assign();
    init_es_symbol();
    init_es_symbol_description();
    init_es_symbol_iterator();
    import_es_array_iterator7 = __toESM(require_es_array_iterator());
    import_es_string_iterator7 = __toESM(require_es_string_iterator());
    init_web_dom_collections_iterator();
    init_es_array_from();
    init_es_array_slice();
    init_es_function_name();
    import_es_regexp_exec7 = __toESM(require_es_regexp_exec());
    init_esm3();
  }
});

// node_modules/@storybook/preview-web/dist/esm/simulate-pageload.js
function simulateDOMContentLoaded() {
  var DOMContentLoadedEvent = document3.createEvent("Event");
  DOMContentLoadedEvent.initEvent("DOMContentLoaded", true, true);
  document3.dispatchEvent(DOMContentLoadedEvent);
}
function insertScript($script, callback, $scriptRoot) {
  var scriptEl = document3.createElement("script");
  scriptEl.type = $script.type === "module" ? "module" : "text/javascript";
  if ($script.src) {
    scriptEl.onload = callback;
    scriptEl.onerror = callback;
    scriptEl.src = $script.src;
  } else {
    scriptEl.textContent = $script.innerText;
  }
  if ($scriptRoot)
    $scriptRoot.appendChild(scriptEl);
  else
    document3.head.appendChild(scriptEl);
  $script.parentNode.removeChild($script);
  if (!$script.src)
    callback();
}
function insertScriptsSequentially(scriptsToExecute, callback) {
  var index = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
  scriptsToExecute[index](function() {
    index++;
    if (index === scriptsToExecute.length) {
      callback();
    } else {
      insertScriptsSequentially(scriptsToExecute, callback, index);
    }
  });
}
function simulatePageLoad($container) {
  var $scriptsRoot = document3.getElementById(SCRIPTS_ROOT_ID);
  if (!$scriptsRoot) {
    $scriptsRoot = document3.createElement("div");
    $scriptsRoot.id = SCRIPTS_ROOT_ID;
    document3.body.appendChild($scriptsRoot);
  } else {
    $scriptsRoot.innerHTML = "";
  }
  var $scripts = Array.from($container.querySelectorAll(SCRIPT));
  if ($scripts.length) {
    var scriptsToExecute = [];
    $scripts.forEach(function($script) {
      var typeAttr = $script.getAttribute("type");
      if (!typeAttr || runScriptTypes.includes(typeAttr)) {
        scriptsToExecute.push(function(callback) {
          return insertScript($script, callback, $scriptsRoot);
        });
      }
    });
    if (scriptsToExecute.length) {
      insertScriptsSequentially(scriptsToExecute, simulateDOMContentLoaded, void 0);
    }
  } else {
    simulateDOMContentLoaded();
  }
}
var import_es_string_iterator8, import_global9, document3, runScriptTypes, SCRIPT, SCRIPTS_ROOT_ID;
var init_simulate_pageload = __esm({
  "node_modules/@storybook/preview-web/dist/esm/simulate-pageload.js"() {
    init_define_import_meta_env();
    init_es_array_from();
    import_es_string_iterator8 = __toESM(require_es_string_iterator());
    init_es_object_to_string();
    init_web_dom_collections_for_each();
    init_es_array_includes();
    import_global9 = __toESM(require_window());
    document3 = import_global9.default.document;
    runScriptTypes = [
      "application/javascript",
      "application/ecmascript",
      "application/x-ecmascript",
      "application/x-javascript",
      "text/ecmascript",
      "text/javascript",
      "text/javascript1.0",
      "text/javascript1.1",
      "text/javascript1.2",
      "text/javascript1.3",
      "text/javascript1.4",
      "text/javascript1.5",
      "text/jscript",
      "text/livescript",
      "text/x-ecmascript",
      "text/x-javascript",
      "module"
    ];
    SCRIPT = "script";
    SCRIPTS_ROOT_ID = "scripts-root";
  }
});

// node_modules/@storybook/preview-web/dist/esm/types.js
var init_types2 = __esm({
  "node_modules/@storybook/preview-web/dist/esm/types.js"() {
    init_define_import_meta_env();
  }
});

// node_modules/@storybook/preview-web/dist/esm/index.js
var init_esm7 = __esm({
  "node_modules/@storybook/preview-web/dist/esm/index.js"() {
    init_define_import_meta_env();
    init_PreviewWeb();
    init_composeConfigs();
    init_simulate_pageload();
    init_types2();
  }
});

export {
  PreviewWeb,
  composeConfigs,
  simulateDOMContentLoaded,
  simulatePageLoad,
  init_esm7 as init_esm
};
//# sourceMappingURL=chunk-7EBOC43G.js.map
