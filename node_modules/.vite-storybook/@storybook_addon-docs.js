import {
  ArgsTable,
  ArgsTableError,
  Code,
  ColorItem,
  ColorPalette,
  Description$1,
  DocsContent,
  DocsWrapper,
  H2,
  H3,
  IconGallery,
  IconItem,
  Preview,
  PreviewSkeleton,
  Source,
  SourceError,
  Story,
  StorySkeleton,
  Subtitle,
  TabbedArgsTable,
  Title,
  Typeset,
  components,
  resetComponents
} from "./chunk-EI5VFFVC.js";
import {
  ThemeProvider,
  ensure,
  styled
} from "./chunk-RDE34AKY.js";
import {
  require_doctrine
} from "./chunk-FIVPAWUW.js";
import "./chunk-5JHT3TIZ.js";
import {
  require_dist
} from "./chunk-ETISVMUQ.js";
import "./chunk-DC46WWQU.js";
import "./chunk-G7UUC7DG.js";
import "./chunk-QCGHIWPD.js";
import {
  init_es_array_fill,
  init_es_array_find_index
} from "./chunk-AS5JO2AN.js";
import {
  init_es_array_sort,
  init_es_string_starts_with
} from "./chunk-6ZDB7Z4F.js";
import {
  init_es_array_join,
  init_es_regexp_constructor,
  init_es_string_match,
  init_es_string_split,
  init_es_string_trim
} from "./chunk-7OGGZRZ2.js";
import {
  require_runtime
} from "./chunk-FYNXAUJO.js";
import {
  require_slash
} from "./chunk-EI55OOHV.js";
import {
  require_stable
} from "./chunk-O54N6DCX.js";
import {
  require_synchronous_promise
} from "./chunk-POXA3YOR.js";
import {
  require_isPlainObject
} from "./chunk-4GTMLINT.js";
import {
  require_mapValues
} from "./chunk-TZDX4YZJ.js";
import "./chunk-RLMPKBR5.js";
import {
  require_pick
} from "./chunk-XKTHYDRR.js";
import {
  require_pickBy
} from "./chunk-C6ONF5DF.js";
import "./chunk-GFFDGKQU.js";
import "./chunk-BNAL75LC.js";
import "./chunk-53RHYIWK.js";
import "./chunk-P3LN5K4K.js";
import {
  require_fast_deep_equal
} from "./chunk-TYSONRL3.js";
import "./chunk-OP5JJFEB.js";
import "./chunk-AAX2GIZB.js";
import "./chunk-7YNVW6DM.js";
import "./chunk-T3VXEBVH.js";
import "./chunk-VVK6L2CC.js";
import "./chunk-ROB3CBKF.js";
import "./chunk-E7VKHDQP.js";
import "./chunk-D63MQTKO.js";
import {
  MDXProvider
} from "./chunk-OLB7B676.js";
import {
  require_react
} from "./chunk-PYBX742Q.js";
import "./chunk-WIRWV3HW.js";
import {
  HooksContext,
  NAVIGATE_URL,
  addons,
  applyHooks,
  esm_default as esm_default2
} from "./chunk-GDRHSWBZ.js";
import {
  logger,
  once
} from "./chunk-3FOXOBMZ.js";
import {
  init_es_array_find
} from "./chunk-OXSGFUZ3.js";
import "./chunk-OAH7BJYX.js";
import {
  init_web_url,
  init_web_url_search_params
} from "./chunk-XJPSDBHU.js";
import {
  init_es_number_constructor
} from "./chunk-UQDYFMBC.js";
import "./chunk-ZUNZSUNP.js";
import {
  require_memoizerific
} from "./chunk-KVRPG7SF.js";
import "./chunk-JCW4ILU7.js";
import "./chunk-DVOR3AYW.js";
import "./chunk-MN2U2KRJ.js";
import "./chunk-VLEFNQIC.js";
import "./chunk-7HXFEW6U.js";
import "./chunk-5ITSQQ6C.js";
import "./chunk-2KQ6D7ZS.js";
import "./chunk-4YAAK665.js";
import "./chunk-SOEUX4PC.js";
import "./chunk-OTIRC4UE.js";
import {
  init_es_object_values
} from "./chunk-B3Z7DGEU.js";
import {
  init_es_promise
} from "./chunk-AUU3CWDW.js";
import {
  init_es_array_from,
  init_es_array_includes,
  init_es_array_map,
  init_es_function_name,
  init_es_object_assign,
  init_es_object_entries,
  init_es_string_includes,
  init_es_symbol,
  init_es_symbol_description,
  init_es_symbol_iterator
} from "./chunk-JNJVKBIS.js";
import "./chunk-ZSCJDNBJ.js";
import "./chunk-47AYDWDR.js";
import {
  esm_default,
  init_esm
} from "./chunk-AGDQOUL7.js";
import {
  require_browser
} from "./chunk-NHJEIV3I.js";
import "./chunk-G3R3CJKS.js";
import {
  init_es_array_filter,
  init_es_array_slice,
  init_es_object_freeze,
  init_es_object_keys,
  init_es_regexp_to_string,
  init_web_dom_collections_for_each
} from "./chunk-3JN5YVZI.js";
import "./chunk-J7PSVTWH.js";
import {
  init_es_array_concat,
  init_es_set,
  init_es_string_replace,
  init_web_dom_collections_iterator,
  require_es_array_iterator,
  require_es_regexp_exec,
  require_es_string_iterator
} from "./chunk-MYJXNO5K.js";
import {
  init_es_object_to_string
} from "./chunk-L4GB7WNN.js";
import {
  require_window
} from "./chunk-UY7AYQEB.js";
import {
  __toESM,
  init_define_import_meta_env
} from "./chunk-63WBANMH.js";

// dep:@storybook_addon-docs
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/dist/esm/index.js
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/dist/esm/blocks/index.js
init_define_import_meta_env();

// node_modules/@storybook/components/dist/esm/index.js
init_define_import_meta_env();
var import_react = __toESM(require_react());
var import_csf = __toESM(require_dist());

// node_modules/@storybook/addon-docs/dist/esm/blocks/Anchor.js
init_define_import_meta_env();
var import_react2 = __toESM(require_react());
var anchorBlockIdFromId = function anchorBlockIdFromId2(storyId) {
  return "anchor--".concat(storyId);
};
var Anchor = function Anchor2(_ref) {
  var storyId = _ref.storyId, children = _ref.children;
  return import_react2.default.createElement("div", {
    id: anchorBlockIdFromId(storyId)
  }, children);
};

// node_modules/@storybook/addon-docs/dist/esm/blocks/ArgsTable.js
init_define_import_meta_env();
init_es_array_includes();
init_es_string_includes();
init_es_object_assign();
init_es_array_sort();
init_es_array_find();
init_es_object_to_string();
init_es_object_values();
init_es_symbol();
init_es_symbol_description();
init_es_symbol_iterator();
var import_es_array_iterator15 = __toESM(require_es_array_iterator());
var import_es_string_iterator15 = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_es_array_slice();
init_es_function_name();
init_es_array_from();
var import_es_regexp_exec18 = __toESM(require_es_regexp_exec());
var import_react7 = __toESM(require_react());
var import_mapValues5 = __toESM(require_mapValues());

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/index.js
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/StoryStore.js
init_define_import_meta_env();
var import_runtime2 = __toESM(require_runtime());
init_es_object_assign();
init_es_function_name();
init_es_object_to_string();
init_web_dom_collections_for_each();
init_es_object_entries();
init_es_array_map();
init_es_array_filter();
init_es_object_keys();
init_es_array_sort();
init_es_array_slice();
init_es_object_values();
init_es_promise();
init_es_symbol();
init_es_symbol_description();
init_es_symbol_iterator();
var import_es_array_iterator11 = __toESM(require_es_array_iterator());
var import_es_string_iterator11 = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_es_array_from();
var import_es_regexp_exec12 = __toESM(require_es_regexp_exec());
var import_memoizerific = __toESM(require_memoizerific());
var import_mapValues4 = __toESM(require_mapValues());
var import_pick = __toESM(require_pick());
var import_global2 = __toESM(require_window());
var import_synchronous_promise = __toESM(require_synchronous_promise());

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/StoryIndexStore.js
init_define_import_meta_env();
init_es_object_keys();
init_es_array_find();
init_es_object_to_string();
init_es_string_starts_with();
init_es_function_name();
init_es_object_entries();
init_es_symbol();
init_es_symbol_description();
init_es_symbol_iterator();
var import_es_array_iterator = __toESM(require_es_array_iterator());
var import_es_string_iterator = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_es_array_slice();
init_es_array_from();
var import_es_regexp_exec = __toESM(require_es_regexp_exec());
init_es_object_freeze();
init_esm();
var _templateObject;
function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray(o, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var StoryIndexStore = function() {
  function StoryIndexStore2() {
    var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
      v: 3,
      stories: {}
    }, stories = _ref.stories;
    _classCallCheck(this, StoryIndexStore2);
    this.channel = void 0;
    this.stories = void 0;
    this.stories = stories;
  }
  _createClass(StoryIndexStore2, [{
    key: "storyIdFromSpecifier",
    value: function storyIdFromSpecifier(specifier) {
      var storyIds = Object.keys(this.stories);
      if (specifier === "*") {
        return storyIds[0];
      }
      if (typeof specifier === "string") {
        if (storyIds.indexOf(specifier) >= 0) {
          return specifier;
        }
        return storyIds.find(function(storyId) {
          return storyId.startsWith(specifier);
        });
      }
      var name = specifier.name, title = specifier.title;
      var match = Object.entries(this.stories).find(function(_ref2) {
        var _ref3 = _slicedToArray(_ref2, 2), id = _ref3[0], story = _ref3[1];
        return story.name === name && story.title === title;
      });
      return match && match[0];
    }
  }, {
    key: "storyIdToEntry",
    value: function storyIdToEntry(storyId) {
      var storyEntry = this.stories[storyId];
      if (!storyEntry) {
        throw new Error(esm_default(_templateObject || (_templateObject = _taggedTemplateLiteral(["Couldn't find story matching '", "' after HMR.\n      - Did you remove it from your CSF file?\n      - Are you sure a story with that id exists?\n      - Please check your stories field of your main.js config.\n      - Also check the browser console and terminal for error messages."])), storyId));
      }
      return storyEntry;
    }
  }]);
  return StoryIndexStore2;
}();

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/ArgsStore.js
init_define_import_meta_env();
init_es_object_to_string();
init_web_dom_collections_for_each();
init_es_object_keys();
init_es_object_assign();

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/args.js
init_define_import_meta_env();
init_es_symbol_iterator();
var import_es_array_iterator2 = __toESM(require_es_array_iterator());
var import_es_string_iterator2 = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_es_array_slice();
init_es_array_from();
var import_es_regexp_exec2 = __toESM(require_es_regexp_exec());
init_es_object_freeze();
init_es_symbol();
init_es_symbol_description();
init_es_object_to_string();
init_es_function_name();
init_es_number_constructor();
init_es_object_entries();
init_es_object_assign();
init_es_array_filter();
init_es_object_keys();
init_es_array_includes();
init_es_array_find_index();
init_es_string_includes();
init_es_array_concat();
init_es_array_join();
init_es_array_map();
init_es_array_fill();
init_web_dom_collections_for_each();
var import_fast_deep_equal = __toESM(require_fast_deep_equal());
var import_isPlainObject = __toESM(require_isPlainObject());
init_esm();
var _templateObject2;
var _templateObject22;
function _taggedTemplateLiteral2(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread();
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray2(arr);
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _slicedToArray2(arr, i) {
  return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest2();
}
function _nonIterableRest2() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray2(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray2(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray2(o, minLen);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit2(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles2(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}
var INCOMPATIBLE = Symbol("incompatible");
var map = function map2(arg, type) {
  if (arg === void 0 || arg === null || !type)
    return arg;
  switch (type.name) {
    case "string":
      return String(arg);
    case "enum":
      return arg;
    case "number":
      return Number(arg);
    case "boolean":
      return arg === "true";
    case "array":
      if (!type.value || !Array.isArray(arg))
        return INCOMPATIBLE;
      return arg.reduce(function(acc, item, index) {
        var mapped = map2(item, type.value);
        if (mapped !== INCOMPATIBLE)
          acc[index] = mapped;
        return acc;
      }, new Array(arg.length));
    case "object":
      if (typeof arg === "string" || typeof arg === "number")
        return arg;
      if (!type.value || _typeof(arg) !== "object")
        return INCOMPATIBLE;
      return Object.entries(arg).reduce(function(acc, _ref) {
        var _ref2 = _slicedToArray2(_ref, 2), key = _ref2[0], val = _ref2[1];
        var mapped = map2(val, type.value[key]);
        return mapped === INCOMPATIBLE ? acc : Object.assign(acc, _defineProperty({}, key, mapped));
      }, {});
    default:
      return INCOMPATIBLE;
  }
};
var mapArgsToTypes = function mapArgsToTypes2(args, argTypes) {
  return Object.entries(args).reduce(function(acc, _ref3) {
    var _ref4 = _slicedToArray2(_ref3, 2), key = _ref4[0], value = _ref4[1];
    if (!argTypes[key])
      return acc;
    var mapped = map(value, argTypes[key].type);
    return mapped === INCOMPATIBLE ? acc : Object.assign(acc, _defineProperty({}, key, mapped));
  }, {});
};
var combineArgs = function combineArgs2(value, update) {
  if (Array.isArray(value) && Array.isArray(update)) {
    return update.reduce(function(acc, upd, index) {
      acc[index] = combineArgs2(value[index], update[index]);
      return acc;
    }, _toConsumableArray(value)).filter(function(v) {
      return v !== void 0;
    });
  }
  if (!(0, import_isPlainObject.default)(value) || !(0, import_isPlainObject.default)(update))
    return update;
  return Object.keys(Object.assign({}, value, update)).reduce(function(acc, key) {
    if (key in update) {
      var combined = combineArgs2(value[key], update[key]);
      if (combined !== void 0)
        acc[key] = combined;
    } else {
      acc[key] = value[key];
    }
    return acc;
  }, {});
};
var validateOptions = function validateOptions2(args, argTypes) {
  return Object.entries(argTypes).reduce(function(acc, _ref5) {
    var _ref6 = _slicedToArray2(_ref5, 2), key = _ref6[0], options = _ref6[1].options;
    if (!options) {
      if (key in args) {
        acc[key] = args[key];
      }
      return acc;
    }
    if (!Array.isArray(options)) {
      once.error(esm_default(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral2(["\n        Invalid argType: '", ".options' should be an array.\n\n        More info: https://storybook.js.org/docs/react/api/argtypes\n      "])), key));
      acc[key] = args[key];
      return acc;
    }
    if (options.some(function(opt) {
      return opt && ["object", "function"].includes(_typeof(opt));
    })) {
      once.error(esm_default(_templateObject22 || (_templateObject22 = _taggedTemplateLiteral2(["\n        Invalid argType: '", ".options' should only contain primitives. Use a 'mapping' for complex values.\n\n        More info: https://storybook.js.org/docs/react/writing-stories/args#mapping-to-complex-arg-values\n      "])), key));
      acc[key] = args[key];
      return acc;
    }
    var isArray = Array.isArray(args[key]);
    var invalidIndex = isArray && args[key].findIndex(function(val) {
      return !options.includes(val);
    });
    var isValidArray = isArray && invalidIndex === -1;
    if (args[key] === void 0 || options.includes(args[key]) || isValidArray) {
      acc[key] = args[key];
      return acc;
    }
    var field = isArray ? "".concat(key, "[").concat(invalidIndex, "]") : key;
    var supportedOptions = options.map(function(opt) {
      return typeof opt === "string" ? "'".concat(opt, "'") : String(opt);
    }).join(", ");
    once.warn("Received illegal value for '".concat(field, "'. Supported options: ").concat(supportedOptions));
    return acc;
  }, {});
};
var DEEPLY_EQUAL = Symbol("Deeply equal");
var deepDiff = function deepDiff2(value, update) {
  if (_typeof(value) !== _typeof(update))
    return update;
  if ((0, import_fast_deep_equal.default)(value, update))
    return DEEPLY_EQUAL;
  if (Array.isArray(value) && Array.isArray(update)) {
    var res = update.reduce(function(acc, upd, index) {
      var diff = deepDiff2(value[index], upd);
      if (diff !== DEEPLY_EQUAL)
        acc[index] = diff;
      return acc;
    }, new Array(update.length));
    if (update.length >= value.length)
      return res;
    return res.concat(new Array(value.length - update.length).fill(void 0));
  }
  if ((0, import_isPlainObject.default)(value) && (0, import_isPlainObject.default)(update)) {
    return Object.keys(Object.assign({}, value, update)).reduce(function(acc, key) {
      var diff = deepDiff2(value === null || value === void 0 ? void 0 : value[key], update === null || update === void 0 ? void 0 : update[key]);
      return diff === DEEPLY_EQUAL ? acc : Object.assign(acc, _defineProperty({}, key, diff));
    }, {});
  }
  return update;
};
var NO_TARGET_NAME = "";
function groupArgsByTarget(_ref7) {
  var args = _ref7.args, argTypes = _ref7.argTypes;
  var groupedArgs = {};
  Object.entries(args).forEach(function(_ref8) {
    var _ref9 = _slicedToArray2(_ref8, 2), name = _ref9[0], value = _ref9[1];
    var _ref10 = argTypes[name] || {}, _ref10$target = _ref10.target, target = _ref10$target === void 0 ? NO_TARGET_NAME : _ref10$target;
    groupedArgs[target] = groupedArgs[target] || {};
    groupedArgs[target][name] = value;
  });
  return groupedArgs;
}

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/ArgsStore.js
function _classCallCheck2(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties2(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass2(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties2(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties2(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function deleteUndefined(obj) {
  Object.keys(obj).forEach(function(key) {
    return obj[key] === void 0 && delete obj[key];
  });
  return obj;
}
var ArgsStore = function() {
  function ArgsStore2() {
    _classCallCheck2(this, ArgsStore2);
    this.initialArgsByStoryId = {};
    this.argsByStoryId = {};
  }
  _createClass2(ArgsStore2, [{
    key: "get",
    value: function get(storyId) {
      if (!(storyId in this.argsByStoryId)) {
        throw new Error("No args known for ".concat(storyId, " -- has it been rendered yet?"));
      }
      return this.argsByStoryId[storyId];
    }
  }, {
    key: "setInitial",
    value: function setInitial(story) {
      if (!this.initialArgsByStoryId[story.id]) {
        this.initialArgsByStoryId[story.id] = story.initialArgs;
        this.argsByStoryId[story.id] = story.initialArgs;
      } else if (this.initialArgsByStoryId[story.id] !== story.initialArgs) {
        var delta = deepDiff(this.initialArgsByStoryId[story.id], this.argsByStoryId[story.id]);
        this.initialArgsByStoryId[story.id] = story.initialArgs;
        this.argsByStoryId[story.id] = story.initialArgs;
        if (delta !== DEEPLY_EQUAL) {
          this.updateFromDelta(story, delta);
        }
      }
    }
  }, {
    key: "updateFromDelta",
    value: function updateFromDelta(story, delta) {
      var validatedDelta = validateOptions(delta, story.argTypes);
      this.argsByStoryId[story.id] = combineArgs(this.argsByStoryId[story.id], validatedDelta);
    }
  }, {
    key: "updateFromPersisted",
    value: function updateFromPersisted(story, persisted) {
      var mappedPersisted = mapArgsToTypes(persisted, story.argTypes);
      return this.updateFromDelta(story, mappedPersisted);
    }
  }, {
    key: "update",
    value: function update(storyId, argsUpdate) {
      if (!(storyId in this.argsByStoryId)) {
        throw new Error("No args known for ".concat(storyId, " -- has it been rendered yet?"));
      }
      this.argsByStoryId[storyId] = deleteUndefined(Object.assign({}, this.argsByStoryId[storyId], argsUpdate));
    }
  }]);
  return ArgsStore2;
}();

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/GlobalsStore.js
init_define_import_meta_env();
init_es_array_slice();
init_es_object_freeze();
init_es_symbol();
init_es_symbol_description();
init_es_symbol_iterator();
init_es_array_from();
init_es_function_name();
var import_es_regexp_exec4 = __toESM(require_es_regexp_exec());
var import_es_array_iterator4 = __toESM(require_es_array_iterator());
init_es_object_to_string();
init_es_set();
var import_es_string_iterator4 = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_es_array_concat();
init_es_object_keys();
init_es_object_assign();
init_es_object_entries();
init_web_dom_collections_for_each();
var import_util_deprecate = __toESM(require_browser());
init_esm();

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/csf/getValuesFromArgTypes.js
init_define_import_meta_env();
init_es_object_to_string();
init_es_object_entries();
init_es_symbol();
init_es_symbol_description();
init_es_symbol_iterator();
var import_es_array_iterator3 = __toESM(require_es_array_iterator());
var import_es_string_iterator3 = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_es_array_slice();
init_es_function_name();
init_es_array_from();
var import_es_regexp_exec3 = __toESM(require_es_regexp_exec());
function _slicedToArray3(arr, i) {
  return _arrayWithHoles3(arr) || _iterableToArrayLimit3(arr, i) || _unsupportedIterableToArray3(arr, i) || _nonIterableRest3();
}
function _nonIterableRest3() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray3(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray3(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray3(o, minLen);
}
function _arrayLikeToArray3(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit3(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles3(arr) {
  if (Array.isArray(arr))
    return arr;
}
var getValuesFromArgTypes = function getValuesFromArgTypes2() {
  var argTypes = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  return Object.entries(argTypes).reduce(function(acc, _ref) {
    var _ref2 = _slicedToArray3(_ref, 2), arg = _ref2[0], defaultValue = _ref2[1].defaultValue;
    if (typeof defaultValue !== "undefined") {
      acc[arg] = defaultValue;
    }
    return acc;
  }, {});
};

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/GlobalsStore.js
var _templateObject3;
function _slicedToArray4(arr, i) {
  return _arrayWithHoles4(arr) || _iterableToArrayLimit4(arr, i) || _unsupportedIterableToArray4(arr, i) || _nonIterableRest4();
}
function _nonIterableRest4() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit4(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles4(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _toConsumableArray2(arr) {
  return _arrayWithoutHoles2(arr) || _iterableToArray2(arr) || _unsupportedIterableToArray4(arr) || _nonIterableSpread2();
}
function _nonIterableSpread2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray4(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray4(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray4(o, minLen);
}
function _iterableToArray2(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles2(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray4(arr);
}
function _arrayLikeToArray4(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _classCallCheck3(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties3(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass3(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties3(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties3(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
function _taggedTemplateLiteral3(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var setUndeclaredWarning = (0, import_util_deprecate.default)(function() {
}, esm_default(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral3(["\n    Setting a global value that is undeclared (i.e. not in the user's initial set of globals\n    or globalTypes) is deprecated and will have no effect in 7.0.\n  "]))));
var GlobalsStore = function() {
  function GlobalsStore2() {
    _classCallCheck3(this, GlobalsStore2);
    this.allowedGlobalNames = void 0;
    this.initialGlobals = void 0;
    this.globals = {};
  }
  _createClass3(GlobalsStore2, [{
    key: "set",
    value: function set(_ref) {
      var _ref$globals = _ref.globals, globals = _ref$globals === void 0 ? {} : _ref$globals, _ref$globalTypes = _ref.globalTypes, globalTypes = _ref$globalTypes === void 0 ? {} : _ref$globalTypes;
      var delta = this.initialGlobals && deepDiff(this.initialGlobals, this.globals);
      this.allowedGlobalNames = new Set([].concat(_toConsumableArray2(Object.keys(globals)), _toConsumableArray2(Object.keys(globalTypes))));
      var defaultGlobals = getValuesFromArgTypes(globalTypes);
      this.initialGlobals = Object.assign({}, defaultGlobals, globals);
      this.globals = this.initialGlobals;
      if (delta && delta !== DEEPLY_EQUAL) {
        this.updateFromPersisted(delta);
      }
    }
  }, {
    key: "filterAllowedGlobals",
    value: function filterAllowedGlobals(globals) {
      var _this = this;
      return Object.entries(globals).reduce(function(acc, _ref2) {
        var _ref3 = _slicedToArray4(_ref2, 2), key = _ref3[0], value = _ref3[1];
        if (_this.allowedGlobalNames.has(key))
          acc[key] = value;
        return acc;
      }, {});
    }
  }, {
    key: "updateFromPersisted",
    value: function updateFromPersisted(persisted) {
      var allowedUrlGlobals = this.filterAllowedGlobals(persisted);
      this.globals = Object.assign({}, this.globals, allowedUrlGlobals);
    }
  }, {
    key: "get",
    value: function get() {
      return this.globals;
    }
  }, {
    key: "update",
    value: function update(newGlobals) {
      var _this2 = this;
      Object.keys(newGlobals).forEach(function(key) {
        if (!_this2.allowedGlobalNames.has(key)) {
          setUndeclaredWarning();
        }
      });
      this.globals = Object.assign({}, this.globals, newGlobals);
    }
  }]);
  return GlobalsStore2;
}();

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/csf/index.js
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/csf/normalizeInputTypes.js
init_define_import_meta_env();
init_es_object_keys();
init_es_symbol();
init_es_object_assign();
var import_mapValues = __toESM(require_mapValues());
var _excluded = ["type", "control"];
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var normalizeType = function normalizeType2(type) {
  return typeof type === "string" ? {
    name: type
  } : type;
};
var normalizeControl = function normalizeControl2(control) {
  return typeof control === "string" ? {
    type: control
  } : control;
};
var normalizeInputType = function normalizeInputType2(inputType, key) {
  var type = inputType.type, control = inputType.control, rest = _objectWithoutProperties(inputType, _excluded);
  var normalized = Object.assign({
    name: key
  }, rest);
  if (type)
    normalized.type = normalizeType(type);
  if (control) {
    normalized.control = normalizeControl(control);
  } else if (control === false) {
    normalized.control = {
      disable: true
    };
  }
  return normalized;
};
var normalizeInputTypes = function normalizeInputTypes2(inputTypes) {
  return (0, import_mapValues.default)(inputTypes, normalizeInputType);
};

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/csf/normalizeStory.js
init_define_import_meta_env();
init_es_array_slice();
init_es_object_freeze();
init_es_symbol();
init_es_symbol_description();
init_es_object_to_string();
init_es_symbol_iterator();
var import_es_array_iterator5 = __toESM(require_es_array_iterator());
var import_es_string_iterator5 = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_es_array_from();
var import_es_regexp_exec5 = __toESM(require_es_regexp_exec());
init_es_function_name();
init_es_array_concat();
init_es_object_assign();
var import_csf2 = __toESM(require_dist());
init_esm();
var import_util_deprecate2 = __toESM(require_browser());
var _templateObject4;
function _toConsumableArray3(arr) {
  return _arrayWithoutHoles3(arr) || _iterableToArray3(arr) || _unsupportedIterableToArray5(arr) || _nonIterableSpread3();
}
function _nonIterableSpread3() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray5(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray5(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray5(o, minLen);
}
function _iterableToArray3(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles3(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray5(arr);
}
function _arrayLikeToArray5(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _taggedTemplateLiteral4(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var deprecatedStoryAnnotation = esm_default(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral4(["\nCSF .story annotations deprecated; annotate story functions directly:\n- StoryFn.story.name => StoryFn.storyName\n- StoryFn.story.(parameters|decorators) => StoryFn.(parameters|decorators)\nSee https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#hoisted-csf-annotations for details and codemod.\n"])));
var deprecatedStoryAnnotationWarning = (0, import_util_deprecate2.default)(function() {
}, deprecatedStoryAnnotation);
function normalizeStory(key, storyAnnotations, meta) {
  var userStoryFn;
  var storyObject;
  if (typeof storyAnnotations === "function") {
    userStoryFn = storyAnnotations;
    storyObject = storyAnnotations;
  } else {
    storyObject = storyAnnotations;
  }
  var _storyObject = storyObject, story = _storyObject.story;
  if (story) {
    logger.debug("deprecated story", story);
    deprecatedStoryAnnotationWarning();
  }
  var exportName = (0, import_csf2.storyNameFromExport)(key);
  var name = typeof storyObject !== "function" && storyObject.name || storyObject.storyName || (story === null || story === void 0 ? void 0 : story.name) || exportName;
  var decorators = [].concat(_toConsumableArray3(storyObject.decorators || []), _toConsumableArray3((story === null || story === void 0 ? void 0 : story.decorators) || []));
  var parameters = Object.assign({}, story === null || story === void 0 ? void 0 : story.parameters, storyObject.parameters);
  var args = Object.assign({}, story === null || story === void 0 ? void 0 : story.args, storyObject.args);
  var argTypes = Object.assign({}, story === null || story === void 0 ? void 0 : story.argTypes, storyObject.argTypes);
  var loaders = [].concat(_toConsumableArray3(storyObject.loaders || []), _toConsumableArray3((story === null || story === void 0 ? void 0 : story.loaders) || []));
  var _storyObject2 = storyObject, render = _storyObject2.render, play = _storyObject2.play;
  var id = parameters.__id || (0, import_csf2.toId)(meta.id || meta.title, exportName);
  return Object.assign({
    id,
    name,
    decorators,
    parameters,
    args,
    argTypes: normalizeInputTypes(argTypes),
    loaders
  }, render && {
    render
  }, userStoryFn && {
    userStoryFn
  }, play && {
    play
  });
}

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/csf/processCSFFile.js
init_define_import_meta_env();
init_es_symbol();
init_es_object_to_string();
init_web_dom_collections_for_each();
init_es_object_keys();
var import_csf4 = __toESM(require_dist());

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/csf/normalizeComponentAnnotations.js
init_define_import_meta_env();
init_es_object_assign();
var import_csf3 = __toESM(require_dist());
function normalizeComponentAnnotations(defaultExport) {
  var title = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultExport.title;
  var importPath = arguments.length > 2 ? arguments[2] : void 0;
  var id = defaultExport.id, argTypes = defaultExport.argTypes;
  return Object.assign({
    id: (0, import_csf3.sanitize)(id || title)
  }, defaultExport, {
    title
  }, argTypes && {
    argTypes: normalizeInputTypes(argTypes)
  }, {
    parameters: Object.assign({
      fileName: importPath
    }, defaultExport.parameters)
  });
}

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/csf/processCSFFile.js
var _excluded2 = ["default", "__namedExportsOrder"];
function _objectWithoutProperties2(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose2(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var checkGlobals = function checkGlobals2(parameters) {
  var globals = parameters.globals, globalTypes = parameters.globalTypes;
  if (globals || globalTypes) {
    logger.error("Global args/argTypes can only be set globally", JSON.stringify({
      globals,
      globalTypes
    }));
  }
};
var checkStorySort = function checkStorySort2(parameters) {
  var options = parameters.options;
  if (options !== null && options !== void 0 && options.storySort)
    logger.error("The storySort option parameter can only be set globally");
};
var checkDisallowedParameters = function checkDisallowedParameters2(parameters) {
  if (!parameters) {
    return;
  }
  checkGlobals(parameters);
  checkStorySort(parameters);
};
function processCSFFile(moduleExports, importPath, title) {
  var defaultExport = moduleExports.default, __namedExportsOrder = moduleExports.__namedExportsOrder, namedExports = _objectWithoutProperties2(moduleExports, _excluded2);
  var meta = normalizeComponentAnnotations(defaultExport, title, importPath);
  checkDisallowedParameters(meta.parameters);
  var csfFile = {
    meta,
    stories: {}
  };
  Object.keys(namedExports).forEach(function(key) {
    if ((0, import_csf4.isExportStory)(key, meta)) {
      var storyMeta = normalizeStory(key, namedExports[key], meta);
      checkDisallowedParameters(storyMeta.parameters);
      csfFile.stories[storyMeta.id] = storyMeta;
    }
  });
  return csfFile;
}

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/csf/prepareStory.js
init_define_import_meta_env();
init_es_array_slice();
init_es_symbol();
init_es_symbol_description();
init_es_symbol_iterator();
init_es_array_from();
var import_es_regexp_exec8 = __toESM(require_es_regexp_exec());
var import_runtime = __toESM(require_runtime());
init_es_function_name();
init_es_array_concat();
init_es_object_assign();
init_es_object_to_string();
init_es_object_keys();
var import_es_array_iterator8 = __toESM(require_es_array_iterator());
init_es_promise();
var import_es_string_iterator8 = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_es_array_map();
init_es_object_entries();
init_es_object_freeze();
init_esm();
var import_util_deprecate3 = __toESM(require_browser());
var import_global = __toESM(require_window());
var import_csf5 = __toESM(require_dist());

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/parameters.js
init_define_import_meta_env();
init_es_object_to_string();
init_es_array_filter();
init_web_dom_collections_for_each();
init_es_object_entries();
init_es_object_keys();
init_es_array_map();
init_es_symbol();
init_es_symbol_description();
init_es_symbol_iterator();
var import_es_array_iterator6 = __toESM(require_es_array_iterator());
var import_es_string_iterator6 = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_es_array_slice();
init_es_function_name();
init_es_array_from();
var import_es_regexp_exec6 = __toESM(require_es_regexp_exec());
var import_isPlainObject2 = __toESM(require_isPlainObject());
function _toConsumableArray4(arr) {
  return _arrayWithoutHoles4(arr) || _iterableToArray4(arr) || _unsupportedIterableToArray6(arr) || _nonIterableSpread4();
}
function _nonIterableSpread4() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArray4(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles4(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray6(arr);
}
function _slicedToArray5(arr, i) {
  return _arrayWithHoles5(arr) || _iterableToArrayLimit5(arr, i) || _unsupportedIterableToArray6(arr, i) || _nonIterableRest5();
}
function _nonIterableRest5() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray6(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray6(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray6(o, minLen);
}
function _arrayLikeToArray6(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit5(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles5(arr) {
  if (Array.isArray(arr))
    return arr;
}
var combineParameters = function combineParameters2() {
  for (var _len = arguments.length, parameterSets = new Array(_len), _key = 0; _key < _len; _key++) {
    parameterSets[_key] = arguments[_key];
  }
  var mergeKeys = {};
  var combined = parameterSets.filter(Boolean).reduce(function(acc, p) {
    Object.entries(p).forEach(function(_ref) {
      var _ref2 = _slicedToArray5(_ref, 2), key = _ref2[0], value = _ref2[1];
      var existing = acc[key];
      if (Array.isArray(value) || typeof existing === "undefined") {
        acc[key] = value;
      } else if ((0, import_isPlainObject2.default)(value) && (0, import_isPlainObject2.default)(existing)) {
        mergeKeys[key] = true;
      } else if (typeof value !== "undefined") {
        acc[key] = value;
      }
    });
    return acc;
  }, {});
  Object.keys(mergeKeys).forEach(function(key) {
    var mergeValues = parameterSets.filter(Boolean).map(function(p) {
      return p[key];
    }).filter(function(value) {
      return typeof value !== "undefined";
    });
    if (mergeValues.every(function(value) {
      return (0, import_isPlainObject2.default)(value);
    })) {
      combined[key] = combineParameters2.apply(void 0, _toConsumableArray4(mergeValues));
    } else {
      combined[key] = mergeValues[mergeValues.length - 1];
    }
  });
  return combined;
};

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/hooks.js
init_define_import_meta_env();
init_es_array_concat();
init_es_symbol();
init_es_symbol_description();
init_es_object_to_string();
init_es_symbol_iterator();
var import_es_array_iterator7 = __toESM(require_es_array_iterator());
var import_es_string_iterator7 = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_es_array_slice();
init_es_function_name();
init_es_array_from();
var import_es_regexp_exec7 = __toESM(require_es_regexp_exec());

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/decorators.js
init_define_import_meta_env();
init_es_object_keys();
init_es_symbol();
init_es_function_name();
init_es_object_assign();
init_es_object_to_string();
var _excluded3 = ["componentId", "title", "kind", "id", "name", "story", "parameters", "initialArgs", "argTypes"];
function _objectWithoutProperties3(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose3(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose3(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function decorateStory(storyFn, decorator, bindWithContext) {
  var boundStoryFunction = bindWithContext(storyFn);
  return function(context) {
    return decorator(boundStoryFunction, context);
  };
}
function sanitizeStoryContextUpdate() {
  var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var componentId = _ref.componentId, title = _ref.title, kind = _ref.kind, id = _ref.id, name = _ref.name, story = _ref.story, parameters = _ref.parameters, initialArgs = _ref.initialArgs, argTypes = _ref.argTypes, update = _objectWithoutProperties3(_ref, _excluded3);
  return update;
}
function defaultDecorateStory(storyFn, decorators) {
  var contextStore = {};
  var bindWithContext = function bindWithContext2(decoratedStoryFn) {
    return function(update) {
      contextStore.value = Object.assign({}, contextStore.value, sanitizeStoryContextUpdate(update));
      return decoratedStoryFn(contextStore.value);
    };
  };
  var decoratedWithContextStore = decorators.reduce(function(story, decorator) {
    return decorateStory(story, decorator, bindWithContext);
  }, storyFn);
  return function(context) {
    contextStore.value = context;
    return decoratedWithContextStore(context);
  };
}

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/csf/prepareStory.js
var _templateObject5;
function _slicedToArray6(arr, i) {
  return _arrayWithHoles6(arr) || _iterableToArrayLimit6(arr, i) || _unsupportedIterableToArray7(arr, i) || _nonIterableRest6();
}
function _nonIterableRest6() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _iterableToArrayLimit6(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles6(arr) {
  if (Array.isArray(arr))
    return arr;
}
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _toConsumableArray5(arr) {
  return _arrayWithoutHoles5(arr) || _iterableToArray5(arr) || _unsupportedIterableToArray7(arr) || _nonIterableSpread5();
}
function _nonIterableSpread5() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray7(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray7(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray7(o, minLen);
}
function _iterableToArray5(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles5(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray7(arr);
}
function _arrayLikeToArray7(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _taggedTemplateLiteral5(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var argTypeDefaultValueWarning = (0, import_util_deprecate3.default)(function() {
}, esm_default(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral5(["\n  `argType.defaultValue` is deprecated and will be removed in Storybook 7.0.\n\n  https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#no-longer-inferring-default-values-of-args"], ["\n  \\`argType.defaultValue\\` is deprecated and will be removed in Storybook 7.0.\n\n  https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#no-longer-inferring-default-values-of-args"]))));
function prepareStory(storyAnnotations, componentAnnotations, projectAnnotations) {
  var _global$FEATURES;
  var id = storyAnnotations.id, name = storyAnnotations.name;
  var title = componentAnnotations.title;
  var parameters = combineParameters(projectAnnotations.parameters, componentAnnotations.parameters, storyAnnotations.parameters);
  var decorators = [].concat(_toConsumableArray5(storyAnnotations.decorators || []), _toConsumableArray5(componentAnnotations.decorators || []), _toConsumableArray5(projectAnnotations.decorators || []));
  var _projectAnnotations$a = projectAnnotations.applyDecorators, applyDecorators = _projectAnnotations$a === void 0 ? defaultDecorateStory : _projectAnnotations$a, _projectAnnotations$a2 = projectAnnotations.argTypesEnhancers, argTypesEnhancers = _projectAnnotations$a2 === void 0 ? [] : _projectAnnotations$a2, _projectAnnotations$a3 = projectAnnotations.argsEnhancers, argsEnhancers = _projectAnnotations$a3 === void 0 ? [] : _projectAnnotations$a3;
  var loaders = [].concat(_toConsumableArray5(projectAnnotations.loaders || []), _toConsumableArray5(componentAnnotations.loaders || []), _toConsumableArray5(storyAnnotations.loaders || []));
  var render = storyAnnotations.userStoryFn || storyAnnotations.render || componentAnnotations.render || projectAnnotations.render;
  var passedArgTypes = combineParameters(projectAnnotations.argTypes, componentAnnotations.argTypes, storyAnnotations.argTypes);
  var _parameters$passArgsF = parameters.passArgsFirst, passArgsFirst = _parameters$passArgsF === void 0 ? true : _parameters$passArgsF;
  parameters.__isArgsStory = passArgsFirst && render.length > 0;
  var passedArgs = Object.assign({}, projectAnnotations.args, componentAnnotations.args, storyAnnotations.args);
  var contextForEnhancers = {
    componentId: componentAnnotations.id,
    title,
    kind: title,
    id,
    name,
    story: name,
    component: componentAnnotations.component,
    subcomponents: componentAnnotations.subcomponents,
    parameters,
    initialArgs: passedArgs,
    argTypes: passedArgTypes
  };
  contextForEnhancers.argTypes = argTypesEnhancers.reduce(function(accumulatedArgTypes, enhancer) {
    return enhancer(Object.assign({}, contextForEnhancers, {
      argTypes: accumulatedArgTypes
    }));
  }, contextForEnhancers.argTypes);
  var defaultArgs = getValuesFromArgTypes(contextForEnhancers.argTypes);
  if (Object.keys(defaultArgs).length > 0) {
    argTypeDefaultValueWarning();
  }
  var initialArgsBeforeEnhancers = Object.assign({}, defaultArgs, passedArgs);
  contextForEnhancers.initialArgs = argsEnhancers.reduce(function(accumulatedArgs, enhancer) {
    return Object.assign({}, accumulatedArgs, enhancer(Object.assign({}, contextForEnhancers, {
      initialArgs: accumulatedArgs
    })));
  }, initialArgsBeforeEnhancers);
  if (!((_global$FEATURES = import_global.default.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.breakingChangesV7)) {
    contextForEnhancers.parameters = Object.assign({}, contextForEnhancers.parameters, {
      __id: id,
      globals: projectAnnotations.globals,
      globalTypes: projectAnnotations.globalTypes,
      args: contextForEnhancers.initialArgs,
      argTypes: contextForEnhancers.argTypes
    });
  }
  var applyLoaders = function() {
    var _ref = _asyncToGenerator(regeneratorRuntime.mark(function _callee(context) {
      var loadResults, loaded;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return Promise.all(loaders.map(function(loader) {
                return loader(context);
              }));
            case 2:
              loadResults = _context.sent;
              loaded = Object.assign.apply(Object, [{}].concat(_toConsumableArray5(loadResults)));
              return _context.abrupt("return", Object.assign({}, context, {
                loaded
              }));
            case 5:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));
    return function applyLoaders2(_x) {
      return _ref.apply(this, arguments);
    };
  }();
  var undecoratedStoryFn = function undecoratedStoryFn2(context) {
    var mappedArgs = Object.entries(context.args).reduce(function(acc, _ref2) {
      var _context$argTypes$key;
      var _ref3 = _slicedToArray6(_ref2, 2), key = _ref3[0], val = _ref3[1];
      var mapping = (_context$argTypes$key = context.argTypes[key]) === null || _context$argTypes$key === void 0 ? void 0 : _context$argTypes$key.mapping;
      acc[key] = mapping && val in mapping ? mapping[val] : val;
      return acc;
    }, {});
    var includedArgs = Object.entries(mappedArgs).reduce(function(acc, _ref4) {
      var _ref5 = _slicedToArray6(_ref4, 2), key = _ref5[0], val = _ref5[1];
      var argType = context.argTypes[key] || {};
      if ((0, import_csf5.includeConditionalArg)(argType, mappedArgs))
        acc[key] = val;
      return acc;
    }, {});
    var includedContext = Object.assign({}, context, {
      args: includedArgs
    });
    var _context$parameters$p = context.parameters.passArgsFirst, renderTimePassArgsFirst = _context$parameters$p === void 0 ? true : _context$parameters$p;
    return renderTimePassArgsFirst ? render(includedContext.args, includedContext) : render(includedContext);
  };
  var decoratedStoryFn = applyHooks(applyDecorators)(undecoratedStoryFn, decorators);
  var unboundStoryFn = function unboundStoryFn2(context) {
    var _global$FEATURES2;
    var finalContext = context;
    if ((_global$FEATURES2 = import_global.default.FEATURES) !== null && _global$FEATURES2 !== void 0 && _global$FEATURES2.argTypeTargetsV7) {
      var argsByTarget = groupArgsByTarget(Object.assign({
        args: context.args
      }, context));
      finalContext = Object.assign({}, context, {
        allArgs: context.args,
        argsByTarget,
        args: argsByTarget[NO_TARGET_NAME] || {}
      });
    }
    return decoratedStoryFn(finalContext);
  };
  var playFunction = storyAnnotations.play;
  return Object.freeze(Object.assign({}, contextForEnhancers, {
    originalStoryFn: render,
    undecoratedStoryFn,
    unboundStoryFn,
    applyLoaders,
    playFunction
  }));
}

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/csf/normalizeProjectAnnotations.js
init_define_import_meta_env();
init_es_object_keys();
init_es_symbol();
init_es_symbol_description();
init_es_object_to_string();
init_es_symbol_iterator();
var import_es_array_iterator10 = __toESM(require_es_array_iterator());
var import_es_string_iterator10 = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_es_array_from();
init_es_array_slice();
init_es_function_name();
var import_es_regexp_exec11 = __toESM(require_es_regexp_exec());
init_es_object_assign();
init_es_array_concat();

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/inferArgTypes.js
init_define_import_meta_env();
init_es_array_slice();
init_es_object_freeze();
var import_es_array_iterator9 = __toESM(require_es_array_iterator());
init_es_object_to_string();
init_es_set();
var import_es_string_iterator9 = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_es_array_concat();
init_es_symbol();
init_es_symbol_description();
init_es_symbol_iterator();
var import_mapValues2 = __toESM(require_mapValues());
init_esm();
var _templateObject6;
function _taggedTemplateLiteral6(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function _typeof2(obj) {
  "@babel/helpers - typeof";
  return _typeof2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof2(obj);
}
var inferType = function inferType2(value, name, visited) {
  var type = _typeof2(value);
  switch (type) {
    case "boolean":
    case "string":
    case "number":
    case "function":
    case "symbol":
      return {
        name: type
      };
    default:
      break;
  }
  if (value) {
    if (visited.has(value)) {
      logger.warn(esm_default(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral6(["\n        We've detected a cycle in arg '", "'. Args should be JSON-serializable.\n\n        Consider using the mapping feature or fully custom args:\n        - Mapping: https://storybook.js.org/docs/react/writing-stories/args#mapping-to-complex-arg-values\n        - Custom args: https://storybook.js.org/docs/react/essentials/controls#fully-custom-args\n      "])), name));
      return {
        name: "other",
        value: "cyclic object"
      };
    }
    visited.add(value);
    if (Array.isArray(value)) {
      var childType = value.length > 0 ? inferType2(value[0], name, new Set(visited)) : {
        name: "other",
        value: "unknown"
      };
      return {
        name: "array",
        value: childType
      };
    }
    var fieldTypes = (0, import_mapValues2.default)(value, function(field) {
      return inferType2(field, name, new Set(visited));
    });
    return {
      name: "object",
      value: fieldTypes
    };
  }
  return {
    name: "object",
    value: {}
  };
};
var inferArgTypes = function inferArgTypes2(context) {
  var id = context.id, _context$argTypes = context.argTypes, userArgTypes = _context$argTypes === void 0 ? {} : _context$argTypes, _context$initialArgs = context.initialArgs, initialArgs = _context$initialArgs === void 0 ? {} : _context$initialArgs;
  var argTypes = (0, import_mapValues2.default)(initialArgs, function(arg, key) {
    return {
      name: key,
      type: inferType(arg, "".concat(id, ".").concat(key), /* @__PURE__ */ new Set())
    };
  });
  var userArgTypesNames = (0, import_mapValues2.default)(userArgTypes, function(argType, key) {
    return {
      name: key
    };
  });
  return combineParameters(argTypes, userArgTypesNames, userArgTypes);
};
inferArgTypes.secondPass = true;

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/inferControls.js
init_define_import_meta_env();
var import_es_regexp_exec10 = __toESM(require_es_regexp_exec());
init_es_function_name();
var import_mapValues3 = __toESM(require_mapValues());

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/filterArgTypes.js
init_define_import_meta_env();
init_es_array_includes();
init_es_string_includes();
var import_es_regexp_exec9 = __toESM(require_es_regexp_exec());
init_es_string_match();
init_es_function_name();
var import_pickBy = __toESM(require_pickBy());
var matches = function matches2(name, descriptor) {
  return Array.isArray(descriptor) ? descriptor.includes(name) : name.match(descriptor);
};
var filterArgTypes = function filterArgTypes2(argTypes, include, exclude) {
  if (!include && !exclude) {
    return argTypes;
  }
  return argTypes && (0, import_pickBy.default)(argTypes, function(argType, key) {
    var name = argType.name || key;
    return (!include || matches(name, include)) && (!exclude || !matches(name, exclude));
  });
};

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/inferControls.js
var inferControl = function inferControl2(argType, name, matchers) {
  var type = argType.type, options = argType.options;
  if (!type && !options) {
    return void 0;
  }
  if (matchers.color && matchers.color.test(name)) {
    var controlType = argType.type.name;
    if (controlType === "string") {
      return {
        control: {
          type: "color"
        }
      };
    }
    logger.warn('Addon controls: Control of type color only supports string, received "'.concat(controlType, '" instead'));
  }
  if (matchers.date && matchers.date.test(name)) {
    return {
      control: {
        type: "date"
      }
    };
  }
  switch (type.name) {
    case "array":
      return {
        control: {
          type: "object"
        }
      };
    case "boolean":
      return {
        control: {
          type: "boolean"
        }
      };
    case "string":
      return {
        control: {
          type: "text"
        }
      };
    case "number":
      return {
        control: {
          type: "number"
        }
      };
    case "enum": {
      var _ref = type, value = _ref.value;
      return {
        control: {
          type: (value === null || value === void 0 ? void 0 : value.length) <= 5 ? "radio" : "select"
        },
        options: value
      };
    }
    case "function":
    case "symbol":
      return null;
    default:
      return {
        control: {
          type: options ? "select" : "object"
        }
      };
  }
};
var inferControls = function inferControls2(context) {
  var argTypes = context.argTypes, _context$parameters = context.parameters, __isArgsStory = _context$parameters.__isArgsStory, _context$parameters$c = _context$parameters.controls;
  _context$parameters$c = _context$parameters$c === void 0 ? {} : _context$parameters$c;
  var _context$parameters$c2 = _context$parameters$c.include, include = _context$parameters$c2 === void 0 ? null : _context$parameters$c2, _context$parameters$c3 = _context$parameters$c.exclude, exclude = _context$parameters$c3 === void 0 ? null : _context$parameters$c3, _context$parameters$c4 = _context$parameters$c.matchers, matchers = _context$parameters$c4 === void 0 ? {} : _context$parameters$c4;
  if (!__isArgsStory)
    return argTypes;
  var filteredArgTypes = filterArgTypes(argTypes, include, exclude);
  var withControls = (0, import_mapValues3.default)(filteredArgTypes, function(argType, name) {
    return (argType === null || argType === void 0 ? void 0 : argType.type) && inferControl(argType, name, matchers);
  });
  return combineParameters(withControls, filteredArgTypes);
};
inferControls.secondPass = true;

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/csf/normalizeProjectAnnotations.js
var _excluded4 = ["argTypes", "globalTypes", "argTypesEnhancers"];
function _toConsumableArray6(arr) {
  return _arrayWithoutHoles6(arr) || _iterableToArray6(arr) || _unsupportedIterableToArray8(arr) || _nonIterableSpread6();
}
function _nonIterableSpread6() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray8(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray8(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray8(o, minLen);
}
function _iterableToArray6(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles6(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray8(arr);
}
function _arrayLikeToArray8(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _objectWithoutProperties4(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose4(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose4(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function normalizeProjectAnnotations(_ref) {
  var argTypes = _ref.argTypes, globalTypes = _ref.globalTypes, argTypesEnhancers = _ref.argTypesEnhancers, annotations = _objectWithoutProperties4(_ref, _excluded4);
  return Object.assign({}, argTypes && {
    argTypes: normalizeInputTypes(argTypes)
  }, globalTypes && {
    globalTypes: normalizeInputTypes(globalTypes)
  }, {
    argTypesEnhancers: [].concat(_toConsumableArray6(argTypesEnhancers || []), [
      inferArgTypes,
      inferControls
    ])
  }, annotations);
}

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/StoryStore.js
function _defineProperty2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _slicedToArray7(arr, i) {
  return _arrayWithHoles7(arr) || _iterableToArrayLimit7(arr, i) || _unsupportedIterableToArray9(arr, i) || _nonIterableRest7();
}
function _nonIterableRest7() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray9(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray9(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray9(o, minLen);
}
function _arrayLikeToArray9(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit7(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles7(arr) {
  if (Array.isArray(arr))
    return arr;
}
function asyncGeneratorStep2(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator2(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep2(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep2(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _classCallCheck4(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties4(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass4(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties4(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties4(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", { writable: false });
  return Constructor;
}
var CSF_CACHE_SIZE = 1e3;
var STORY_CACHE_SIZE = 1e4;
var StoryStore = function() {
  function StoryStore2() {
    var _this = this;
    _classCallCheck4(this, StoryStore2);
    this.storyIndex = void 0;
    this.importFn = void 0;
    this.projectAnnotations = void 0;
    this.globals = void 0;
    this.args = void 0;
    this.hooks = void 0;
    this.cachedCSFFiles = void 0;
    this.processCSFFileWithCache = void 0;
    this.prepareStoryWithCache = void 0;
    this.initializationPromise = void 0;
    this.resolveInitializationPromise = void 0;
    this.getStoriesJsonData = function() {
      var value = _this.getSetStoriesPayload();
      var allowedParameters = ["fileName", "docsOnly", "framework", "__id", "__isArgsStory"];
      var stories = (0, import_mapValues4.default)(value.stories, function(story) {
        var _global$FEATURES;
        return Object.assign({}, (0, import_pick.default)(story, ["id", "name", "title"]), {
          importPath: _this.storyIndex.stories[story.id].importPath
        }, !((_global$FEATURES = import_global2.default.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.breakingChangesV7) && {
          kind: story.title,
          story: story.name,
          parameters: Object.assign({}, (0, import_pick.default)(story.parameters, allowedParameters), {
            fileName: _this.storyIndex.stories[story.id].importPath
          })
        });
      });
      return {
        v: 3,
        stories
      };
    };
    this.globals = new GlobalsStore();
    this.args = new ArgsStore();
    this.hooks = {};
    this.processCSFFileWithCache = (0, import_memoizerific.default)(CSF_CACHE_SIZE)(processCSFFile);
    this.prepareStoryWithCache = (0, import_memoizerific.default)(STORY_CACHE_SIZE)(prepareStory);
    this.initializationPromise = new import_synchronous_promise.SynchronousPromise(function(resolve) {
      _this.resolveInitializationPromise = resolve;
    });
  }
  _createClass4(StoryStore2, [{
    key: "setProjectAnnotations",
    value: function setProjectAnnotations(projectAnnotations) {
      this.projectAnnotations = normalizeProjectAnnotations(projectAnnotations);
      var globals = projectAnnotations.globals, globalTypes = projectAnnotations.globalTypes;
      this.globals.set({
        globals,
        globalTypes
      });
    }
  }, {
    key: "initialize",
    value: function initialize(_ref) {
      var storyIndex = _ref.storyIndex, importFn = _ref.importFn, _ref$cache = _ref.cache, cache = _ref$cache === void 0 ? false : _ref$cache;
      this.storyIndex = new StoryIndexStore(storyIndex);
      this.importFn = importFn;
      this.resolveInitializationPromise();
      return cache ? this.cacheAllCSFFiles() : import_synchronous_promise.SynchronousPromise.resolve();
    }
  }, {
    key: "onStoriesChanged",
    value: function() {
      var _onStoriesChanged = _asyncToGenerator2(regeneratorRuntime.mark(function _callee(_ref2) {
        var importFn, storyIndex;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                importFn = _ref2.importFn, storyIndex = _ref2.storyIndex;
                if (importFn)
                  this.importFn = importFn;
                if (storyIndex)
                  this.storyIndex.stories = storyIndex.stories;
                if (!this.cachedCSFFiles) {
                  _context.next = 6;
                  break;
                }
                _context.next = 6;
                return this.cacheAllCSFFiles();
              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function onStoriesChanged(_x) {
        return _onStoriesChanged.apply(this, arguments);
      }
      return onStoriesChanged;
    }()
  }, {
    key: "loadCSFFileByStoryId",
    value: function loadCSFFileByStoryId(storyId) {
      var _this2 = this;
      var _this$storyIndex$stor = this.storyIndex.storyIdToEntry(storyId), importPath = _this$storyIndex$stor.importPath, title = _this$storyIndex$stor.title;
      return this.importFn(importPath).then(function(moduleExports) {
        return _this2.processCSFFileWithCache(moduleExports, importPath, title);
      });
    }
  }, {
    key: "loadAllCSFFiles",
    value: function loadAllCSFFiles() {
      var _this3 = this;
      var importPaths = {};
      Object.entries(this.storyIndex.stories).forEach(function(_ref3) {
        var _ref4 = _slicedToArray7(_ref3, 2), storyId = _ref4[0], importPath = _ref4[1].importPath;
        importPaths[importPath] = storyId;
      });
      var csfFilePromiseList = Object.entries(importPaths).map(function(_ref5) {
        var _ref6 = _slicedToArray7(_ref5, 2), importPath = _ref6[0], storyId = _ref6[1];
        return _this3.loadCSFFileByStoryId(storyId).then(function(csfFile) {
          return {
            importPath,
            csfFile
          };
        });
      });
      return import_synchronous_promise.SynchronousPromise.all(csfFilePromiseList).then(function(list) {
        return list.reduce(function(acc, _ref7) {
          var importPath = _ref7.importPath, csfFile = _ref7.csfFile;
          acc[importPath] = csfFile;
          return acc;
        }, {});
      });
    }
  }, {
    key: "cacheAllCSFFiles",
    value: function cacheAllCSFFiles() {
      var _this4 = this;
      return this.initializationPromise.then(function() {
        return _this4.loadAllCSFFiles().then(function(csfFiles) {
          _this4.cachedCSFFiles = csfFiles;
        });
      });
    }
  }, {
    key: "loadStory",
    value: function() {
      var _loadStory = _asyncToGenerator2(regeneratorRuntime.mark(function _callee2(_ref8) {
        var storyId, csfFile;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                storyId = _ref8.storyId;
                _context2.next = 3;
                return this.initializationPromise;
              case 3:
                _context2.next = 5;
                return this.loadCSFFileByStoryId(storyId);
              case 5:
                csfFile = _context2.sent;
                return _context2.abrupt("return", this.storyFromCSFFile({
                  storyId,
                  csfFile
                }));
              case 7:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
      function loadStory(_x2) {
        return _loadStory.apply(this, arguments);
      }
      return loadStory;
    }()
  }, {
    key: "storyFromCSFFile",
    value: function storyFromCSFFile(_ref9) {
      var storyId = _ref9.storyId, csfFile = _ref9.csfFile;
      var storyAnnotations = csfFile.stories[storyId];
      if (!storyAnnotations) {
        throw new Error("Didn't find '".concat(storyId, "' in CSF file, this is unexpected"));
      }
      var componentAnnotations = csfFile.meta;
      var story = this.prepareStoryWithCache(storyAnnotations, componentAnnotations, this.projectAnnotations);
      this.args.setInitial(story);
      this.hooks[story.id] = this.hooks[story.id] || new HooksContext();
      return story;
    }
  }, {
    key: "componentStoriesFromCSFFile",
    value: function componentStoriesFromCSFFile(_ref10) {
      var _this5 = this;
      var csfFile = _ref10.csfFile;
      return Object.keys(this.storyIndex.stories).filter(function(storyId) {
        return !!csfFile.stories[storyId];
      }).map(function(storyId) {
        return _this5.storyFromCSFFile({
          storyId,
          csfFile
        });
      });
    }
  }, {
    key: "getStoryContext",
    value: function getStoryContext(story) {
      return Object.assign({}, story, {
        args: this.args.get(story.id),
        globals: this.globals.get(),
        hooks: this.hooks[story.id]
      });
    }
  }, {
    key: "cleanupStory",
    value: function cleanupStory(story) {
      this.hooks[story.id].clean();
    }
  }, {
    key: "extract",
    value: function extract3() {
      var _this6 = this;
      var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {
        includeDocsOnly: false
      };
      if (!this.cachedCSFFiles) {
        throw new Error("Cannot call extract() unless you call cacheAllCSFFiles() first.");
      }
      return Object.entries(this.storyIndex.stories).reduce(function(acc, _ref11) {
        var _ref12 = _slicedToArray7(_ref11, 2), storyId = _ref12[0], importPath = _ref12[1].importPath;
        var csfFile = _this6.cachedCSFFiles[importPath];
        var story = _this6.storyFromCSFFile({
          storyId,
          csfFile
        });
        if (!options.includeDocsOnly && story.parameters.docsOnly) {
          return acc;
        }
        acc[storyId] = Object.entries(story).reduce(function(storyAcc, _ref13) {
          var _ref14 = _slicedToArray7(_ref13, 2), key = _ref14[0], value = _ref14[1];
          if (typeof value === "function") {
            return storyAcc;
          }
          if (Array.isArray(value)) {
            return Object.assign(storyAcc, _defineProperty2({}, key, value.slice().sort()));
          }
          return Object.assign(storyAcc, _defineProperty2({}, key, value));
        }, {
          args: story.initialArgs
        });
        return acc;
      }, {});
    }
  }, {
    key: "getSetStoriesPayload",
    value: function getSetStoriesPayload() {
      var stories = this.extract({
        includeDocsOnly: true
      });
      var kindParameters = Object.values(stories).reduce(function(acc, _ref15) {
        var title = _ref15.title;
        acc[title] = {};
        return acc;
      }, {});
      return {
        v: 2,
        globals: this.globals.get(),
        globalParameters: {},
        kindParameters,
        stories
      };
    }
  }, {
    key: "raw",
    value: function raw() {
      var _this7 = this;
      return Object.values(this.extract()).map(function(_ref16) {
        var id = _ref16.id;
        return _this7.fromId(id);
      });
    }
  }, {
    key: "fromId",
    value: function fromId(storyId) {
      var _this8 = this;
      if (!this.cachedCSFFiles) {
        throw new Error("Cannot call fromId/raw() unless you call cacheAllCSFFiles() first.");
      }
      var importPath;
      try {
        var _this$storyIndex$stor2 = this.storyIndex.storyIdToEntry(storyId);
        importPath = _this$storyIndex$stor2.importPath;
      } catch (err) {
        return null;
      }
      var csfFile = this.cachedCSFFiles[importPath];
      var story = this.storyFromCSFFile({
        storyId,
        csfFile
      });
      return Object.assign({}, story, {
        storyFn: function storyFn(update) {
          var context = Object.assign({}, _this8.getStoryContext(story), {
            viewMode: "story"
          });
          return story.unboundStoryFn(Object.assign({}, context, update));
        }
      });
    }
  }]);
  return StoryStore2;
}();

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/types.js
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/autoTitle.js
init_define_import_meta_env();
init_es_array_slice();
init_es_array_filter();
init_es_object_to_string();
var import_es_regexp_exec13 = __toESM(require_es_regexp_exec());
init_es_regexp_constructor();
init_es_regexp_to_string();
init_es_string_replace();
init_es_array_join();
init_es_string_split();
init_es_symbol();
init_es_symbol_description();
init_es_symbol_iterator();
var import_es_array_iterator12 = __toESM(require_es_array_iterator());
var import_es_string_iterator12 = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_es_array_from();
init_es_function_name();
var import_slash = __toESM(require_slash());

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/sortStories.js
init_define_import_meta_env();
init_es_array_slice();
init_es_object_freeze();
init_es_function_name();
init_es_array_map();
var import_stable = __toESM(require_stable());
init_esm();

// node_modules/@storybook/addon-docs/node_modules/@storybook/store/dist/esm/storySort.js
init_define_import_meta_env();
var import_es_regexp_exec14 = __toESM(require_es_regexp_exec());
init_es_string_split();
init_es_string_trim();
init_es_function_name();

// node_modules/@storybook/addon-docs/dist/esm/blocks/DocsContext.js
init_define_import_meta_env();
var import_react3 = __toESM(require_react());
var import_global3 = __toESM(require_window());
if (import_global3.window && import_global3.window.__DOCS_CONTEXT__ === void 0) {
  import_global3.window.__DOCS_CONTEXT__ = (0, import_react3.createContext)({});
  import_global3.window.__DOCS_CONTEXT__.displayName = "DocsContext";
}
var DocsContext = import_global3.window ? import_global3.window.__DOCS_CONTEXT__ : (0, import_react3.createContext)({});

// node_modules/@storybook/addon-docs/dist/esm/blocks/types.js
init_define_import_meta_env();
var CURRENT_SELECTION = ".";
var PRIMARY_STORY = "^";

// node_modules/@storybook/addon-docs/dist/esm/blocks/utils.js
init_define_import_meta_env();
init_es_array_join();
init_es_array_map();
var import_es_regexp_exec15 = __toESM(require_es_regexp_exec());
init_es_string_split();
init_es_array_slice();
init_es_array_includes();
init_es_string_includes();
init_es_function_name();
var titleCase = function titleCase2(str3) {
  return str3.split("-").map(function(part) {
    return part.charAt(0).toUpperCase() + part.slice(1);
  }).join("");
};
var getComponentName = function getComponentName2(component) {
  if (!component) {
    return void 0;
  }
  if (typeof component === "string") {
    if (component.includes("-")) {
      return titleCase(component);
    }
    return component;
  }
  if (component.__docgenInfo && component.__docgenInfo.displayName) {
    return component.__docgenInfo.displayName;
  }
  return component.name;
};
function scrollToElement(element) {
  var block = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "start";
  element.scrollIntoView({
    behavior: "smooth",
    block,
    inline: "nearest"
  });
}

// node_modules/@storybook/addon-docs/dist/esm/blocks/Story.js
init_define_import_meta_env();
init_es_function_name();
init_es_object_assign();
init_es_object_to_string();
init_es_promise();
var import_es_array_iterator14 = __toESM(require_es_array_iterator());
var import_es_string_iterator14 = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_es_array_concat();
init_es_symbol();
init_es_symbol_description();
init_es_symbol_iterator();
init_es_array_slice();
init_es_array_from();
var import_es_regexp_exec17 = __toESM(require_es_regexp_exec());
var import_react5 = __toESM(require_react());
var import_global4 = __toESM(require_window());
var import_csf7 = __toESM(require_dist());

// node_modules/@storybook/addon-docs/dist/esm/blocks/useStory.js
init_define_import_meta_env();
var import_runtime3 = __toESM(require_runtime());
init_es_object_to_string();
var import_es_array_iterator13 = __toESM(require_es_array_iterator());
init_es_promise();
var import_es_string_iterator13 = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_es_array_map();
init_es_object_assign();
init_es_symbol();
init_es_symbol_description();
init_es_symbol_iterator();
init_es_array_slice();
init_es_function_name();
init_es_array_from();
var import_es_regexp_exec16 = __toESM(require_es_regexp_exec());
var import_react4 = __toESM(require_react());
function _defineProperty3(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function asyncGeneratorStep3(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator3(fn) {
  return function() {
    var self = this, args = arguments;
    return new Promise(function(resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep3(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep3(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(void 0);
    });
  };
}
function _slicedToArray8(arr, i) {
  return _arrayWithHoles8(arr) || _iterableToArrayLimit8(arr, i) || _unsupportedIterableToArray10(arr, i) || _nonIterableRest8();
}
function _nonIterableRest8() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray10(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray10(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray10(o, minLen);
}
function _arrayLikeToArray10(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit8(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles8(arr) {
  if (Array.isArray(arr))
    return arr;
}
function useStory(storyId, context) {
  var stories = useStories([storyId], context);
  return stories && stories[0];
}
function useStories(storyIds, context) {
  var initialStoriesById = context.componentStories().reduce(function(acc, story) {
    acc[story.id] = story;
    return acc;
  }, {});
  var _useState = (0, import_react4.useState)(initialStoriesById), _useState2 = _slicedToArray8(_useState, 2), storiesById = _useState2[0], setStories = _useState2[1];
  (0, import_react4.useEffect)(function() {
    Promise.all(storyIds.map(function() {
      var _ref = _asyncToGenerator3(regeneratorRuntime.mark(function _callee(storyId) {
        var story;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return context.loadStory(storyId);
              case 2:
                story = _context.sent;
                setStories(function(current) {
                  return current[storyId] === story ? current : Object.assign({}, current, _defineProperty3({}, storyId, story));
                });
              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));
      return function(_x) {
        return _ref.apply(this, arguments);
      };
    }()));
  });
  return storyIds.map(function(storyId) {
    return storiesById[storyId];
  });
}

// node_modules/@storybook/addon-docs/dist/esm/blocks/Story.js
function _slicedToArray9(arr, i) {
  return _arrayWithHoles9(arr) || _iterableToArrayLimit9(arr, i) || _unsupportedIterableToArray11(arr, i) || _nonIterableRest9();
}
function _nonIterableRest9() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray11(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray11(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray11(o, minLen);
}
function _arrayLikeToArray11(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit9(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles9(arr) {
  if (Array.isArray(arr))
    return arr;
}
var storyBlockIdFromId = function storyBlockIdFromId2(storyId) {
  return "story--".concat(storyId);
};
var lookupStoryId = function lookupStoryId2(storyName, _ref) {
  var mdxStoryNameToKey = _ref.mdxStoryNameToKey, mdxComponentAnnotations = _ref.mdxComponentAnnotations;
  return (0, import_csf7.toId)(mdxComponentAnnotations.id || mdxComponentAnnotations.title, (0, import_csf7.storyNameFromExport)(mdxStoryNameToKey[storyName]));
};
var getStoryId = function getStoryId2(props, context) {
  var _ref2 = props, id = _ref2.id;
  var _ref3 = props, name = _ref3.name;
  var inputId = id === CURRENT_SELECTION ? context.id : id;
  return inputId || lookupStoryId(name, context);
};
var getStoryProps = function getStoryProps2(_ref4, story, context, onStoryFnCalled) {
  var height = _ref4.height, inline = _ref4.inline;
  var storyName = story.name, parameters = story.parameters;
  var _parameters$docs = parameters.docs, docs = _parameters$docs === void 0 ? {} : _parameters$docs;
  if (docs.disable) {
    return null;
  }
  var _docs$inlineStories = docs.inlineStories, inlineStories = _docs$inlineStories === void 0 ? false : _docs$inlineStories, _docs$iframeHeight = docs.iframeHeight, iframeHeight = _docs$iframeHeight === void 0 ? 100 : _docs$iframeHeight, prepareForInline = docs.prepareForInline;
  var storyIsInline = typeof inline === "boolean" ? inline : inlineStories;
  if (storyIsInline && !prepareForInline) {
    throw new Error("Story '".concat(storyName, "' is set to render inline, but no 'prepareForInline' function is implemented in your docs configuration!"));
  }
  var boundStoryFn = function boundStoryFn2() {
    var storyResult = story.unboundStoryFn(Object.assign({}, context.getStoryContext(story), {
      loaded: {},
      abortSignal: void 0,
      canvasElement: void 0
    }));
    onStoryFnCalled();
    return storyResult;
  };
  return Object.assign({
    inline: storyIsInline,
    id: story.id,
    height: height || (storyIsInline ? void 0 : iframeHeight),
    title: storyName
  }, storyIsInline && {
    parameters,
    storyFn: function storyFn() {
      return prepareForInline(boundStoryFn, context.getStoryContext(story));
    }
  });
};
function makeGate() {
  var open;
  var gate = new Promise(function(r) {
    open = r;
  });
  return [gate, open];
}
var Story2 = function Story3(props) {
  var context = (0, import_react5.useContext)(DocsContext);
  var channel = addons.getChannel();
  var storyRef = (0, import_react5.useRef)();
  var storyId = getStoryId(props, context);
  var story = useStory(storyId, context);
  var _useState = (0, import_react5.useState)(true), _useState2 = _slicedToArray9(_useState, 2), showLoader = _useState2[0], setShowLoader = _useState2[1];
  (0, import_react5.useEffect)(function() {
    var cleanup;
    if (story && storyRef.current) {
      var element = storyRef.current;
      cleanup = context.renderStoryToElement(story, element);
      setShowLoader(false);
    }
    return function() {
      return cleanup && cleanup();
    };
  }, [story]);
  var _makeGate = makeGate(), _makeGate2 = _slicedToArray9(_makeGate, 2), storyFnRan = _makeGate2[0], onStoryFnRan = _makeGate2[1];
  var _makeGate3 = makeGate(), _makeGate4 = _slicedToArray9(_makeGate3, 2), rendered = _makeGate4[0], onRendered = _makeGate4[1];
  (0, import_react5.useEffect)(onRendered);
  if (!story) {
    return import_react5.default.createElement(StorySkeleton, null);
  }
  var storyProps = getStoryProps(props, story, context, onStoryFnRan);
  if (!storyProps) {
    return null;
  }
  if (storyProps.inline) {
    var _global$FEATURES;
    if (!(import_global4.default !== null && import_global4.default !== void 0 && (_global$FEATURES = import_global4.default.FEATURES) !== null && _global$FEATURES !== void 0 && _global$FEATURES.modernInlineRender)) {
      Promise.all([storyFnRan, rendered]).then(function() {
        channel.emit(esm_default2.STORY_RENDERED, storyId);
      });
    } else {
      var htmlContents = "<span></span>";
      var height = storyProps.height;
      return import_react5.default.createElement("div", {
        id: storyBlockIdFromId(story.id)
      }, import_react5.default.createElement(MDXProvider, {
        components: resetComponents
      }, height ? import_react5.default.createElement("style", null, "#story--".concat(story.id, " { min-height: ").concat(height, "; transform: translateZ(0); overflow: auto }")) : null, showLoader && import_react5.default.createElement(StorySkeleton, null), import_react5.default.createElement("div", {
        ref: storyRef,
        "data-name": story.name,
        dangerouslySetInnerHTML: {
          __html: htmlContents
        }
      })));
    }
  }
  return import_react5.default.createElement("div", {
    id: storyBlockIdFromId(story.id)
  }, import_react5.default.createElement(MDXProvider, {
    components: resetComponents
  }, import_react5.default.createElement(Story, storyProps)));
};
Story2.defaultProps = {
  children: null,
  name: null
};

// node_modules/@storybook/addon-docs/dist/esm/blocks/ArgsTable.js
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _defineProperty4(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _slicedToArray10(arr, i) {
  return _arrayWithHoles10(arr) || _iterableToArrayLimit10(arr, i) || _unsupportedIterableToArray12(arr, i) || _nonIterableRest10();
}
function _nonIterableRest10() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray12(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray12(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray12(o, minLen);
}
function _arrayLikeToArray12(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit10(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles10(arr) {
  if (Array.isArray(arr))
    return arr;
}
var useArgs2 = function useArgs3(storyId, context) {
  var channel = addons.getChannel();
  var story = context.storyById(storyId);
  if (!story) {
    throw new Error("Unknown story: ".concat(storyId));
  }
  var storyContext = context.getStoryContext(story);
  var _useState = (0, import_react7.useState)(storyContext.args), _useState2 = _slicedToArray10(_useState, 2), args = _useState2[0], setArgs = _useState2[1];
  (0, import_react7.useEffect)(function() {
    var cb = function cb2(changed) {
      if (changed.storyId === storyId) {
        setArgs(changed.args);
      }
    };
    channel.on(esm_default2.STORY_ARGS_UPDATED, cb);
    return function() {
      return channel.off(esm_default2.STORY_ARGS_UPDATED, cb);
    };
  }, [storyId]);
  var updateArgs = (0, import_react7.useCallback)(function(updatedArgs) {
    return channel.emit(esm_default2.UPDATE_STORY_ARGS, {
      storyId,
      updatedArgs
    });
  }, [storyId]);
  var resetArgs = (0, import_react7.useCallback)(function(argNames) {
    return channel.emit(esm_default2.RESET_STORY_ARGS, {
      storyId,
      argNames
    });
  }, [storyId]);
  return [args, updateArgs, resetArgs];
};
var extractComponentArgTypes = function extractComponentArgTypes2(component, _ref, include, exclude) {
  var id = _ref.id, storyById = _ref.storyById;
  var _storyById = storyById(id), parameters = _storyById.parameters;
  var _ref2 = parameters.docs || {}, extractArgTypes = _ref2.extractArgTypes;
  if (!extractArgTypes) {
    throw new Error(ArgsTableError.ARGS_UNSUPPORTED);
  }
  var argTypes = extractArgTypes(component);
  argTypes = filterArgTypes(argTypes, include, exclude);
  return argTypes;
};
var isShortcut = function isShortcut2(value) {
  return value && [CURRENT_SELECTION, PRIMARY_STORY].includes(value);
};
var getComponent = function getComponent2() {
  var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  var _ref3 = arguments.length > 1 ? arguments[1] : void 0, id = _ref3.id, storyById = _ref3.storyById;
  var _ref4 = props, of = _ref4.of;
  var _ref5 = props, story = _ref5.story;
  var _storyById2 = storyById(id), component = _storyById2.component;
  if (isShortcut(of) || isShortcut(story)) {
    return component || null;
  }
  if (!of) {
    throw new Error(ArgsTableError.NO_COMPONENT);
  }
  return of;
};
var addComponentTabs = function addComponentTabs2(tabs, components2, context, include, exclude, sort) {
  return Object.assign({}, tabs, (0, import_mapValues5.default)(components2, function(comp) {
    return {
      rows: extractComponentArgTypes(comp, context, include, exclude),
      sort
    };
  }));
};
var StoryTable = function StoryTable2(props) {
  var context = (0, import_react7.useContext)(DocsContext);
  var currentId = context.id, componentStories = context.componentStories;
  var storyName = props.story, component = props.component, subcomponents = props.subcomponents, showComponent = props.showComponent, include = props.include, exclude = props.exclude, sort = props.sort;
  try {
    var storyId;
    switch (storyName) {
      case CURRENT_SELECTION: {
        storyId = currentId;
        break;
      }
      case PRIMARY_STORY: {
        var primaryStory = componentStories()[0];
        storyId = primaryStory.id;
        break;
      }
      default: {
        storyId = lookupStoryId(storyName, context);
      }
    }
    var story = useStory(storyId, context);
    var _useArgs = useArgs2(storyId, context), _useArgs2 = _slicedToArray10(_useArgs, 3), args = _useArgs2[0], updateArgs = _useArgs2[1], resetArgs = _useArgs2[2];
    if (!story)
      return import_react7.default.createElement(ArgsTable, {
        isLoading: true,
        updateArgs,
        resetArgs
      });
    var argTypes = filterArgTypes(story.argTypes, include, exclude);
    var mainLabel = getComponentName(component) || "Story";
    var tabs = _defineProperty4({}, mainLabel, {
      rows: argTypes,
      args,
      updateArgs,
      resetArgs
    });
    var storyHasArgsWithControls = argTypes && Object.values(argTypes).find(function(v) {
      return !!(v !== null && v !== void 0 && v.control);
    });
    if (!storyHasArgsWithControls) {
      updateArgs = null;
      resetArgs = null;
      tabs = {};
    }
    if (component && (!storyHasArgsWithControls || showComponent)) {
      tabs = addComponentTabs(tabs, _defineProperty4({}, mainLabel, component), context, include, exclude);
    }
    if (subcomponents) {
      if (Array.isArray(subcomponents)) {
        throw new Error("Unexpected subcomponents array. Expected an object whose keys are tab labels and whose values are components.");
      }
      tabs = addComponentTabs(tabs, subcomponents, context, include, exclude);
    }
    return import_react7.default.createElement(TabbedArgsTable, {
      tabs,
      sort
    });
  } catch (err) {
    return import_react7.default.createElement(ArgsTable, {
      error: err.message
    });
  }
};
var ComponentsTable = function ComponentsTable2(props) {
  var context = (0, import_react7.useContext)(DocsContext);
  var components2 = props.components, include = props.include, exclude = props.exclude, sort = props.sort;
  var tabs = addComponentTabs({}, components2, context, include, exclude);
  return import_react7.default.createElement(TabbedArgsTable, {
    tabs,
    sort
  });
};
var ArgsTable2 = function ArgsTable3(props) {
  var context = (0, import_react7.useContext)(DocsContext);
  var id = context.id, storyById = context.storyById;
  var _storyById3 = storyById(id), controls = _storyById3.parameters.controls, subcomponents = _storyById3.subcomponents;
  var _ref6 = props, include = _ref6.include, exclude = _ref6.exclude, components2 = _ref6.components, sortProp = _ref6.sort;
  var _ref7 = props, storyName = _ref7.story;
  var sort = sortProp || (controls === null || controls === void 0 ? void 0 : controls.sort);
  var main = getComponent(props, context);
  if (storyName) {
    return import_react7.default.createElement(StoryTable, _extends({}, props, {
      component: main,
      subcomponents,
      sort
    }));
  }
  if (!components2 && !subcomponents) {
    var mainProps;
    try {
      mainProps = {
        rows: extractComponentArgTypes(main, context, include, exclude)
      };
    } catch (err) {
      mainProps = {
        error: err.message
      };
    }
    return import_react7.default.createElement(ArgsTable, _extends({}, mainProps, {
      sort
    }));
  }
  if (components2) {
    return import_react7.default.createElement(ComponentsTable, _extends({}, props, {
      components: components2,
      sort
    }));
  }
  var mainLabel = getComponentName(main);
  return import_react7.default.createElement(ComponentsTable, _extends({}, props, {
    components: Object.assign(_defineProperty4({}, mainLabel, main), subcomponents),
    sort
  }));
};
ArgsTable2.defaultProps = {
  of: CURRENT_SELECTION
};

// node_modules/@storybook/addon-docs/dist/esm/blocks/Canvas.js
init_define_import_meta_env();
init_es_object_keys();
init_es_symbol();
init_es_object_assign();
init_es_array_filter();
init_es_object_to_string();
init_es_function_name();
init_es_array_map();
var import_react10 = __toESM(require_react());
var import_csf8 = __toESM(require_dist());

// node_modules/@storybook/addon-docs/dist/esm/blocks/SourceContainer.js
init_define_import_meta_env();
init_es_object_assign();
init_es_symbol();
init_es_symbol_description();
init_es_object_to_string();
init_es_symbol_iterator();
var import_es_array_iterator16 = __toESM(require_es_array_iterator());
var import_es_string_iterator16 = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_es_array_slice();
init_es_function_name();
init_es_array_from();
var import_es_regexp_exec19 = __toESM(require_es_regexp_exec());
var import_react8 = __toESM(require_react());
var import_fast_deep_equal2 = __toESM(require_fast_deep_equal());

// node_modules/@storybook/addon-docs/dist/esm/shared.js
init_define_import_meta_env();
var ADDON_ID = "storybook/docs";
var PANEL_ID = "".concat(ADDON_ID, "/panel");
var SNIPPET_RENDERED = "".concat(ADDON_ID, "/snippet-rendered");
var SourceType;
(function(SourceType3) {
  SourceType3["AUTO"] = "auto";
  SourceType3["CODE"] = "code";
  SourceType3["DYNAMIC"] = "dynamic";
})(SourceType || (SourceType = {}));

// node_modules/@storybook/addon-docs/dist/esm/blocks/SourceContainer.js
function _defineProperty5(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _slicedToArray11(arr, i) {
  return _arrayWithHoles11(arr) || _iterableToArrayLimit11(arr, i) || _unsupportedIterableToArray13(arr, i) || _nonIterableRest11();
}
function _nonIterableRest11() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray13(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray13(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray13(o, minLen);
}
function _arrayLikeToArray13(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function _iterableToArrayLimit11(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _s, _e;
  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _arrayWithHoles11(arr) {
  if (Array.isArray(arr))
    return arr;
}
var SourceContext = (0, import_react8.createContext)({
  sources: {}
});
var SourceContainer = function SourceContainer2(_ref) {
  var children = _ref.children;
  var _useState = (0, import_react8.useState)({}), _useState2 = _slicedToArray11(_useState, 2), sources = _useState2[0], setSources = _useState2[1];
  var channel = addons.getChannel();
  (0, import_react8.useEffect)(function() {
    var handleSnippetRendered = function handleSnippetRendered2(id, newItem) {
      if (newItem !== sources[id]) {
        setSources(function(current) {
          var newSources = Object.assign({}, current, _defineProperty5({}, id, newItem));
          if (!(0, import_fast_deep_equal2.default)(current, newSources)) {
            return newSources;
          }
          return current;
        });
      }
    };
    channel.on(SNIPPET_RENDERED, handleSnippetRendered);
    return function() {
      return channel.off(SNIPPET_RENDERED, handleSnippetRendered);
    };
  });
  return import_react8.default.createElement(SourceContext.Provider, {
    value: {
      sources
    }
  }, children);
};

// node_modules/@storybook/addon-docs/dist/esm/blocks/Source.js
init_define_import_meta_env();
init_es_array_filter();
init_es_object_to_string();
init_es_array_map();
init_es_array_join();
var import_react9 = __toESM(require_react());

// node_modules/@storybook/addon-docs/dist/esm/blocks/enhanceSource.js
init_define_import_meta_env();
init_es_array_join();
init_es_array_concat();
init_es_array_slice();
var import_es_regexp_exec20 = __toESM(require_es_regexp_exec());
init_es_string_replace();
init_es_string_split();
init_es_symbol();
init_es_symbol_description();
init_es_object_to_string();
init_es_symbol_iterator();
var import_es_array_iterator17 = __toESM(require_es_array_iterator());
var import_es_string_iterator17 = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_es_array_from();
init_es_function_name();
function _toConsumableArray7(arr) {
  return _arrayWithoutHoles7(arr) || _iterableToArray7(arr) || _unsupportedIterableToArray14(arr) || _nonIterableSpread7();
}
function _nonIterableSpread7() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray14(o, minLen) {
  if (!o)
    return;
  if (typeof o === "string")
    return _arrayLikeToArray14(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor)
    n = o.constructor.name;
  if (n === "Map" || n === "Set")
    return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
    return _arrayLikeToArray14(o, minLen);
}
function _iterableToArray7(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _arrayWithoutHoles7(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray14(arr);
}
function _arrayLikeToArray14(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
function extractSource(location, lines) {
  var start = location.startBody, end = location.endBody;
  if (start.line === end.line && lines[start.line - 1] !== void 0) {
    return lines[start.line - 1].substring(start.col, end.col);
  }
  var startLine = lines[start.line - 1];
  var endLine = lines[end.line - 1];
  if (startLine === void 0 || endLine === void 0) {
    return null;
  }
  return [startLine.substring(start.col)].concat(_toConsumableArray7(lines.slice(start.line, end.line - 1)), [endLine.substring(0, end.col)]).join("\n");
}
var storyIdToSanitizedStoryName = function storyIdToSanitizedStoryName2(id) {
  return id.replace(/^.*?--/, "");
};
var extract = function extract2(targetId, _ref) {
  var source = _ref.source, locationsMap = _ref.locationsMap;
  if (!locationsMap) {
    return source;
  }
  var sanitizedStoryName = storyIdToSanitizedStoryName(targetId);
  var location = locationsMap[sanitizedStoryName];
  if (!location) {
    return source;
  }
  var lines = source.split("\n");
  return extractSource(location, lines);
};
var enhanceSource = function enhanceSource2(story) {
  var _docs$source;
  var id = story.id, parameters = story.parameters;
  var storySource = parameters.storySource, _parameters$docs = parameters.docs, docs = _parameters$docs === void 0 ? {} : _parameters$docs;
  var transformSource = docs.transformSource;
  if (!(storySource !== null && storySource !== void 0 && storySource.source) || (_docs$source = docs.source) !== null && _docs$source !== void 0 && _docs$source.code) {
    return null;
  }
  var input = extract(id, storySource);
  var code = transformSource ? transformSource(input, story) : input;
  return {
    docs: combineParameters(docs, {
      source: {
        code
      }
    })
  };
};

// node_modules/@storybook/addon-docs/dist/esm/blocks/Source.js
var SourceState;
(function(SourceState2) {
  SourceState2["OPEN"] = "open";
  SourceState2["CLOSED"] = "closed";
  SourceState2["NONE"] = "none";
})(SourceState || (SourceState = {}));
var getSourceState = function getSourceState2(stories) {
  var states = stories.map(function(story) {
    var _story$parameters$doc, _story$parameters$doc2;
    return (_story$parameters$doc = story.parameters.docs) === null || _story$parameters$doc === void 0 ? void 0 : (_story$parameters$doc2 = _story$parameters$doc.source) === null || _story$parameters$doc2 === void 0 ? void 0 : _story$parameters$doc2.state;
  }).filter(Boolean);
  if (states.length === 0)
    return SourceState.CLOSED;
  return states[0];
};
var getStorySource = function getStorySource2(storyId, sourceContext) {
  var sources = sourceContext.sources;
  return (sources === null || sources === void 0 ? void 0 : sources[storyId]) || "";
};
var getSnippet = function getSnippet2(snippet, story) {
  var _parameters$docs, _parameters$docs$sour, _parameters$docs2, _parameters$docs2$sou, _enhanced$docs, _enhanced$docs$source;
  if (!story) {
    return snippet;
  }
  var parameters = story.parameters;
  var isArgsStory = parameters.__isArgsStory;
  var type = ((_parameters$docs = parameters.docs) === null || _parameters$docs === void 0 ? void 0 : (_parameters$docs$sour = _parameters$docs.source) === null || _parameters$docs$sour === void 0 ? void 0 : _parameters$docs$sour.type) || SourceType.AUTO;
  var userCode = (_parameters$docs2 = parameters.docs) === null || _parameters$docs2 === void 0 ? void 0 : (_parameters$docs2$sou = _parameters$docs2.source) === null || _parameters$docs2$sou === void 0 ? void 0 : _parameters$docs2$sou.code;
  if (userCode !== void 0) {
    return userCode;
  }
  if (type === SourceType.DYNAMIC) {
    var _parameters$docs3, _parameters$docs3$tra;
    return ((_parameters$docs3 = parameters.docs) === null || _parameters$docs3 === void 0 ? void 0 : (_parameters$docs3$tra = _parameters$docs3.transformSource) === null || _parameters$docs3$tra === void 0 ? void 0 : _parameters$docs3$tra.call(_parameters$docs3, snippet, story)) || snippet;
  }
  if (type === SourceType.AUTO && snippet && isArgsStory) {
    var _parameters$docs4, _parameters$docs4$tra;
    return ((_parameters$docs4 = parameters.docs) === null || _parameters$docs4 === void 0 ? void 0 : (_parameters$docs4$tra = _parameters$docs4.transformSource) === null || _parameters$docs4$tra === void 0 ? void 0 : _parameters$docs4$tra.call(_parameters$docs4, snippet, story)) || snippet;
  }
  var enhanced = enhanceSource(story) || parameters;
  return (enhanced === null || enhanced === void 0 ? void 0 : (_enhanced$docs = enhanced.docs) === null || _enhanced$docs === void 0 ? void 0 : (_enhanced$docs$source = _enhanced$docs.source) === null || _enhanced$docs$source === void 0 ? void 0 : _enhanced$docs$source.code) || "";
};
var getSourceProps = function getSourceProps2(props, docsContext, sourceContext) {
  var currentId = docsContext.id, storyById = docsContext.storyById;
  var _storyById = storyById(currentId), parameters = _storyById.parameters;
  var codeProps = props;
  var singleProps = props;
  var multiProps = props;
  var source = codeProps.code;
  var targetIds = multiProps.ids || [singleProps.id || currentId];
  var storyIds = targetIds.map(function(targetId) {
    return targetId === CURRENT_SELECTION ? currentId : targetId;
  });
  var stories = useStories(storyIds, docsContext);
  if (!stories.every(Boolean)) {
    return {
      error: SourceError.SOURCE_UNAVAILABLE,
      state: SourceState.NONE
    };
  }
  if (!source) {
    source = storyIds.map(function(storyId, idx) {
      var storySource = getStorySource(storyId, sourceContext);
      var storyObj = stories[idx];
      return getSnippet(storySource, storyObj);
    }).join("\n\n");
  }
  var state = getSourceState(stories);
  var _parameters$docs5 = parameters.docs, docsParameters = _parameters$docs5 === void 0 ? {} : _parameters$docs5;
  var _docsParameters$sourc = docsParameters.source, sourceParameters = _docsParameters$sourc === void 0 ? {} : _docsParameters$sourc;
  var _sourceParameters$lan = sourceParameters.language, docsLanguage = _sourceParameters$lan === void 0 ? null : _sourceParameters$lan;
  return source ? {
    code: source,
    state,
    language: props.language || docsLanguage || "jsx",
    dark: props.dark || false
  } : {
    error: SourceError.SOURCE_UNAVAILABLE,
    state
  };
};
var Source2 = function Source3(props) {
  var sourceContext = (0, import_react9.useContext)(SourceContext);
  var docsContext = (0, import_react9.useContext)(DocsContext);
  var sourceProps = getSourceProps(props, docsContext, sourceContext);
  return import_react9.default.createElement(Source, sourceProps);
};

// node_modules/@storybook/addon-docs/dist/esm/blocks/Canvas.js
var _excluded5 = ["withSource", "mdxSource", "children"];
function _objectWithoutProperties5(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose5(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose5(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var getPreviewProps = function getPreviewProps2(_ref, docsContext, sourceContext) {
  var withSource = _ref.withSource, mdxSource = _ref.mdxSource, children = _ref.children, props = _objectWithoutProperties5(_ref, _excluded5);
  var mdxComponentAnnotations = docsContext.mdxComponentAnnotations, mdxStoryNameToKey = docsContext.mdxStoryNameToKey;
  var sourceState = withSource;
  var isLoading = false;
  if (sourceState === SourceState.NONE) {
    return {
      isLoading,
      previewProps: props
    };
  }
  if (mdxSource) {
    return {
      isLoading,
      previewProps: Object.assign({}, props, {
        withSource: getSourceProps({
          code: decodeURI(mdxSource)
        }, docsContext, sourceContext)
      })
    };
  }
  var childArray = Array.isArray(children) ? children : [children];
  var storyChildren = childArray.filter(function(c) {
    return c.props && (c.props.id || c.props.name);
  });
  var targetIds = storyChildren.map(function(s) {
    return s.props.id || (0, import_csf8.toId)(mdxComponentAnnotations.id || mdxComponentAnnotations.title, (0, import_csf8.storyNameFromExport)(mdxStoryNameToKey[s.props.name]));
  });
  var sourceProps = getSourceProps({
    ids: targetIds
  }, docsContext, sourceContext);
  if (!sourceState)
    sourceState = sourceProps.state;
  var stories = useStories(targetIds, docsContext);
  isLoading = stories.some(function(s) {
    return !s;
  });
  return {
    isLoading,
    previewProps: Object.assign({}, props, {
      withSource: sourceProps,
      isExpanded: sourceState === SourceState.OPEN
    })
  };
};
var Canvas = function Canvas2(props) {
  var docsContext = (0, import_react10.useContext)(DocsContext);
  var sourceContext = (0, import_react10.useContext)(SourceContext);
  var _getPreviewProps = getPreviewProps(props, docsContext, sourceContext), isLoading = _getPreviewProps.isLoading, previewProps = _getPreviewProps.previewProps;
  var children = props.children;
  if (isLoading)
    return import_react10.default.createElement(PreviewSkeleton, null);
  return import_react10.default.createElement(MDXProvider, {
    components: resetComponents
  }, import_react10.default.createElement(Preview, previewProps, children));
};

// node_modules/@storybook/addon-docs/dist/esm/blocks/Description.js
init_define_import_meta_env();
init_es_symbol();
init_es_symbol_description();
init_es_string_trim();
init_es_array_concat();
init_es_object_assign();
var import_react12 = __toESM(require_react());

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/index.js
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/index.js
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/index.js
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/typescript/index.js
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/typescript/convert.js
init_define_import_meta_env();
init_es_object_to_string();
init_web_dom_collections_for_each();
init_es_function_name();
init_es_object_assign();
init_es_array_map();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/typescript/types.js
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/flow/index.js
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/flow/convert.js
init_define_import_meta_env();
init_es_function_name();
var import_es_regexp_exec21 = __toESM(require_es_regexp_exec());
init_es_string_replace();
init_es_object_to_string();
init_web_dom_collections_for_each();
init_es_object_assign();
init_es_array_map();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/flow/types.js
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/proptypes/index.js
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/proptypes/convert.js
init_define_import_meta_env();
init_es_function_name();
init_es_array_map();
init_es_number_constructor();
init_es_object_assign();
var import_es_regexp_exec23 = __toESM(require_es_regexp_exec());
init_es_string_split();
init_es_array_concat();
var import_mapValues6 = __toESM(require_mapValues());

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/utils.js
init_define_import_meta_env();
var import_es_regexp_exec22 = __toESM(require_es_regexp_exec());
init_es_string_replace();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/convert/proptypes/types.js
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/index.js
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/types.js
init_define_import_meta_env();
var TypeSystem;
(function(TypeSystem2) {
  TypeSystem2["JAVASCRIPT"] = "JavaScript";
  TypeSystem2["FLOW"] = "Flow";
  TypeSystem2["TYPESCRIPT"] = "TypeScript";
  TypeSystem2["UNKNOWN"] = "Unknown";
})(TypeSystem || (TypeSystem = {}));

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/utils/index.js
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/utils/defaultValue.js
init_define_import_meta_env();
init_es_object_to_string();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/utils/string.js
init_define_import_meta_env();
var str = function str2(obj) {
  if (!obj) {
    return "";
  }
  if (typeof obj === "string") {
    return obj;
  }
  throw new Error("Description: expected string, got: ".concat(JSON.stringify(obj)));
};

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/utils/docgenInfo.js
init_define_import_meta_env();
init_es_object_keys();
init_es_symbol();
init_es_symbol_description();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/extractDocgenProps.js
init_define_import_meta_env();
init_es_array_map();
init_es_object_assign();
init_es_function_name();
init_es_object_keys();
init_es_array_filter();
init_es_object_to_string();
init_es_symbol();
init_es_symbol_description();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/jsdocParser.js
init_define_import_meta_env();
init_es_array_includes();
init_es_string_includes();
init_es_symbol();
init_es_symbol_description();
init_es_function_name();
var import_es_regexp_exec24 = __toESM(require_es_regexp_exec());
init_es_string_replace();
init_es_array_map();
init_es_array_concat();
init_es_array_join();
var import_doctrine = __toESM(require_doctrine());

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/createPropDef.js
init_define_import_meta_env();
init_es_function_name();
init_es_object_to_string();
init_es_symbol();
init_es_symbol_description();
init_es_array_map();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/utils.js
init_define_import_meta_env();
var import_es_regexp_exec25 = __toESM(require_es_regexp_exec());
init_es_string_replace();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/flow/createPropDef.js
init_define_import_meta_env();
init_es_symbol();
init_es_symbol_description();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/flow/createType.js
init_define_import_meta_env();
init_es_function_name();
init_es_array_join();
init_es_array_map();
var import_es_regexp_exec26 = __toESM(require_es_regexp_exec());
init_es_string_replace();
var FlowTypesType;
(function(FlowTypesType2) {
  FlowTypesType2["UNION"] = "union";
  FlowTypesType2["SIGNATURE"] = "signature";
})(FlowTypesType || (FlowTypesType = {}));

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/flow/createDefaultValue.js
init_define_import_meta_env();
init_es_function_name();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/typeScript/createPropDef.js
init_define_import_meta_env();
init_es_symbol();
init_es_symbol_description();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/typeScript/createType.js
init_define_import_meta_env();
var import_es_regexp_exec27 = __toESM(require_es_regexp_exec());
init_es_string_replace();
init_es_function_name();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/typeScript/createDefaultValue.js
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/docgen/PropDef.js
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/types.js
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/argTypes/enhanceArgTypes.js
init_define_import_meta_env();

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/shared.js
init_define_import_meta_env();
var ADDON_ID2 = "storybook/docs";
var PANEL_ID2 = "".concat(ADDON_ID2, "/panel");
var SNIPPET_RENDERED2 = "".concat(ADDON_ID2, "/snippet-rendered");
var SourceType2;
(function(SourceType3) {
  SourceType3["AUTO"] = "auto";
  SourceType3["CODE"] = "code";
  SourceType3["DYNAMIC"] = "dynamic";
})(SourceType2 || (SourceType2 = {}));

// node_modules/@storybook/addon-docs/node_modules/@storybook/docs-tools/dist/esm/hasDocsOrControls.js
init_define_import_meta_env();
init_es_object_to_string();
var import_es_regexp_exec28 = __toESM(require_es_regexp_exec());
init_es_function_name();

// node_modules/@storybook/addon-docs/dist/esm/blocks/Description.js
var DescriptionType;
(function(DescriptionType2) {
  DescriptionType2["INFO"] = "info";
  DescriptionType2["NOTES"] = "notes";
  DescriptionType2["DOCGEN"] = "docgen";
  DescriptionType2["LEGACY_5_2"] = "legacy-5.2";
  DescriptionType2["AUTO"] = "auto";
})(DescriptionType || (DescriptionType = {}));
var getNotes = function getNotes2(notes) {
  return notes && (typeof notes === "string" ? notes : str(notes.markdown) || str(notes.text));
};
var getInfo = function getInfo2(info) {
  return info && (typeof info === "string" ? info : str(info.text));
};
var noDescription = function noDescription2(component) {
  return null;
};
var getDescriptionProps = function getDescriptionProps2(_ref, _ref2) {
  var of = _ref.of, type = _ref.type, markdown = _ref.markdown, children = _ref.children;
  var id = _ref2.id, storyById = _ref2.storyById;
  var _storyById = storyById(id), component = _storyById.component, parameters = _storyById.parameters;
  if (children || markdown) {
    return {
      markdown: children || markdown
    };
  }
  var notes = parameters.notes, info = parameters.info, docs = parameters.docs;
  var _ref3 = docs || {}, _ref3$extractComponen = _ref3.extractComponentDescription, extractComponentDescription = _ref3$extractComponen === void 0 ? noDescription : _ref3$extractComponen, description = _ref3.description;
  var target = of === CURRENT_SELECTION ? component : of;
  var componentDescriptionParameter = description === null || description === void 0 ? void 0 : description.component;
  if (componentDescriptionParameter) {
    return {
      markdown: componentDescriptionParameter
    };
  }
  switch (type) {
    case DescriptionType.INFO:
      return {
        markdown: getInfo(info)
      };
    case DescriptionType.NOTES:
      return {
        markdown: getNotes(notes)
      };
    case DescriptionType.LEGACY_5_2:
      return {
        markdown: "\n".concat(getNotes(notes) || getInfo(info) || "", "\n\n").concat(extractComponentDescription(target) || "", "\n").trim()
      };
    case DescriptionType.DOCGEN:
    case DescriptionType.AUTO:
    default:
      return {
        markdown: extractComponentDescription(target, Object.assign({
          component
        }, parameters))
      };
  }
};
var DescriptionContainer = function DescriptionContainer2(props) {
  var context = (0, import_react12.useContext)(DocsContext);
  var _getDescriptionProps = getDescriptionProps(props, context), markdown = _getDescriptionProps.markdown;
  return markdown ? import_react12.default.createElement(Description$1, {
    markdown
  }) : null;
};
DescriptionContainer.defaultProps = {
  of: "."
};

// node_modules/@storybook/addon-docs/dist/esm/blocks/DocsPage.js
init_define_import_meta_env();
var import_react21 = __toESM(require_react());

// node_modules/@storybook/addon-docs/dist/esm/blocks/Title.js
init_define_import_meta_env();
var import_es_regexp_exec29 = __toESM(require_es_regexp_exec());
init_es_string_split();
init_es_string_trim();
var import_react13 = __toESM(require_react());
var STORY_KIND_PATH_SEPARATOR = /\s*\/\s*/;
var extractTitle = function extractTitle2(_ref) {
  var title = _ref.title;
  var groups = title.trim().split(STORY_KIND_PATH_SEPARATOR);
  return groups && groups[groups.length - 1] || title;
};
var Title2 = function Title3(_ref2) {
  var children = _ref2.children;
  var context = (0, import_react13.useContext)(DocsContext);
  var text = children;
  if (!text) {
    text = extractTitle(context);
  }
  return text ? import_react13.default.createElement(Title, {
    className: "sbdocs-title"
  }, text) : null;
};

// node_modules/@storybook/addon-docs/dist/esm/blocks/Subtitle.js
init_define_import_meta_env();
var import_react14 = __toESM(require_react());
var Subtitle2 = function Subtitle3(_ref) {
  var children = _ref.children;
  var _useContext = (0, import_react14.useContext)(DocsContext), id = _useContext.id, storyById = _useContext.storyById;
  var _storyById = storyById(id), parameters = _storyById.parameters;
  var text = children;
  if (!text) {
    text = parameters === null || parameters === void 0 ? void 0 : parameters.componentSubtitle;
  }
  return text ? import_react14.default.createElement(Subtitle, {
    className: "sbdocs-subtitle"
  }, text) : null;
};

// node_modules/@storybook/addon-docs/dist/esm/blocks/Primary.js
init_define_import_meta_env();
init_es_function_name();
init_es_array_find();
init_es_object_to_string();
init_es_object_assign();
var import_react18 = __toESM(require_react());

// node_modules/@storybook/addon-docs/dist/esm/blocks/DocsStory.js
init_define_import_meta_env();
init_es_array_slice();
init_es_object_freeze();
init_es_function_name();
init_es_symbol();
init_es_symbol_description();
var import_react17 = __toESM(require_react());
var import_util_deprecate4 = __toESM(require_browser());
init_esm();

// node_modules/@storybook/addon-docs/dist/esm/blocks/Subheading.js
init_define_import_meta_env();
var import_es_regexp_exec31 = __toESM(require_es_regexp_exec());
init_es_string_replace();
var import_react16 = __toESM(require_react());

// node_modules/@storybook/addon-docs/dist/esm/blocks/mdx.js
init_define_import_meta_env();
init_es_object_keys();
init_es_symbol();
init_es_object_assign();
var import_es_regexp_exec30 = __toESM(require_es_regexp_exec());
init_es_string_match();
init_es_string_split();
init_es_string_starts_with();
init_es_object_to_string();
var import_react15 = __toESM(require_react());
var import_global5 = __toESM(require_window());
var _excluded6 = ["children"];
var _excluded22 = ["className", "children"];
var _excluded32 = ["href", "target", "children"];
var _excluded42 = ["as", "id", "children"];
var _excluded52 = ["as", "id", "children"];
function _defineProperty6(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _extends2() {
  _extends2 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
function _objectWithoutProperties6(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose6(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose6(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var document = import_global5.default.document;
var assertIsFn = function assertIsFn2(val) {
  if (typeof val !== "function") {
    throw new Error("Expected story function, got: ".concat(val));
  }
  return val;
};
var AddContext = function AddContext2(props) {
  var children = props.children, rest = _objectWithoutProperties6(props, _excluded6);
  var parentContext = import_react15.default.useContext(DocsContext);
  return import_react15.default.createElement(DocsContext.Provider, {
    value: Object.assign({}, parentContext, rest)
  }, children);
};
var CodeOrSourceMdx = function CodeOrSourceMdx2(_ref) {
  var className = _ref.className, children = _ref.children, rest = _objectWithoutProperties6(_ref, _excluded22);
  if (typeof className !== "string" && (typeof children !== "string" || !children.match(/[\n\r]/g))) {
    return import_react15.default.createElement(Code, null, children);
  }
  var language = className && className.split("-");
  return import_react15.default.createElement(Source, _extends2({
    language: language && language[1] || "plaintext",
    format: false,
    code: children
  }, rest));
};
function navigate(url) {
  addons.getChannel().emit(NAVIGATE_URL, url);
}
var A = components.a;
var AnchorInPage = function AnchorInPage2(_ref2) {
  var hash = _ref2.hash, children = _ref2.children;
  return import_react15.default.createElement(A, {
    href: hash,
    target: "_self",
    onClick: function onClick(event) {
      var id = hash.substring(1);
      var element = document.getElementById(id);
      if (element) {
        navigate(hash);
      }
    }
  }, children);
};
var AnchorMdx = function AnchorMdx2(props) {
  var href = props.href, target = props.target, children = props.children, rest = _objectWithoutProperties6(props, _excluded32);
  if (href) {
    if (href.startsWith("#")) {
      return import_react15.default.createElement(AnchorInPage, {
        hash: href
      }, children);
    }
    if (target !== "_blank") {
      return import_react15.default.createElement(A, _extends2({
        href,
        onClick: function onClick(event) {
          event.preventDefault();
          navigate(event.currentTarget.getAttribute("href"));
        },
        target
      }, rest), children);
    }
  }
  return import_react15.default.createElement(A, props);
};
var SUPPORTED_MDX_HEADERS = ["h1", "h2", "h3", "h4", "h5", "h6"];
var OcticonHeaders = SUPPORTED_MDX_HEADERS.reduce(function(acc, headerType) {
  return Object.assign({}, acc, _defineProperty6({}, headerType, styled(components[headerType])({
    "& svg": {
      visibility: "hidden"
    },
    "&:hover svg": {
      visibility: "visible"
    }
  })));
}, {});
var OcticonAnchor = styled.a(function() {
  return {
    float: "left",
    paddingRight: "4px",
    marginLeft: "-20px",
    color: "inherit"
  };
});
var HeaderWithOcticonAnchor = function HeaderWithOcticonAnchor2(_ref3) {
  var as = _ref3.as, id = _ref3.id, children = _ref3.children, rest = _objectWithoutProperties6(_ref3, _excluded42);
  var OcticonHeader = OcticonHeaders[as];
  var hash = "#".concat(id);
  return import_react15.default.createElement(OcticonHeader, _extends2({
    id
  }, rest), import_react15.default.createElement(OcticonAnchor, {
    "aria-hidden": "true",
    href: hash,
    tabIndex: -1,
    target: "_self",
    onClick: function onClick(event) {
      var element = document.getElementById(id);
      if (element) {
        navigate(hash);
      }
    }
  }, import_react15.default.createElement("svg", {
    viewBox: "0 0 16 16",
    version: "1.1",
    width: "16",
    height: "16",
    "aria-hidden": "true",
    fill: "currentColor"
  }, import_react15.default.createElement("path", {
    fillRule: "evenodd",
    d: "M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"
  }))), children);
};
var HeaderMdx = function HeaderMdx2(props) {
  var as = props.as, id = props.id, children = props.children, rest = _objectWithoutProperties6(props, _excluded52);
  if (id) {
    return import_react15.default.createElement(HeaderWithOcticonAnchor, _extends2({
      as,
      id
    }, rest), children);
  }
  var Header = components[as];
  return import_react15.default.createElement(Header, props);
};
var HeadersMdx = SUPPORTED_MDX_HEADERS.reduce(function(acc, headerType) {
  return Object.assign({}, acc, _defineProperty6({}, headerType, function(props) {
    return import_react15.default.createElement(HeaderMdx, _extends2({
      as: headerType
    }, props));
  }));
}, {});

// node_modules/@storybook/addon-docs/dist/esm/blocks/Subheading.js
var Subheading = function Subheading2(_ref) {
  var children = _ref.children, disableAnchor = _ref.disableAnchor;
  if (disableAnchor || typeof children !== "string") {
    return import_react16.default.createElement(H3, null, children);
  }
  var tagID = children.toLowerCase().replace(/[^a-z0-9]/gi, "-");
  return import_react16.default.createElement(HeaderMdx, {
    as: "h3",
    id: tagID
  }, children);
};

// node_modules/@storybook/addon-docs/dist/esm/blocks/DocsStory.js
var _templateObject7;
function _taggedTemplateLiteral7(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var warnStoryDescription = (0, import_util_deprecate4.default)(function() {
}, esm_default(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral7(["\n    Deprecated parameter: docs.storyDescription => docs.description.story\n      \n    https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#docs-description-parameter\n  "]))));
var DocsStory = function DocsStory2(_ref) {
  var id = _ref.id, name = _ref.name, _ref$expanded = _ref.expanded, expanded = _ref$expanded === void 0 ? true : _ref$expanded, _ref$withToolbar = _ref.withToolbar, withToolbar = _ref$withToolbar === void 0 ? false : _ref$withToolbar, _ref$parameters = _ref.parameters, parameters = _ref$parameters === void 0 ? {} : _ref$parameters;
  var description;
  var docs = parameters.docs;
  if (expanded && docs) {
    var _docs$description;
    description = (_docs$description = docs.description) === null || _docs$description === void 0 ? void 0 : _docs$description.story;
    if (!description) {
      description = docs.storyDescription;
      if (description)
        warnStoryDescription();
    }
  }
  var subheading = expanded && name;
  return import_react17.default.createElement(Anchor, {
    storyId: id
  }, subheading && import_react17.default.createElement(Subheading, null, subheading), description && import_react17.default.createElement(DescriptionContainer, {
    markdown: description
  }), import_react17.default.createElement(Canvas, {
    withToolbar
  }, import_react17.default.createElement(Story2, {
    id,
    parameters
  })));
};

// node_modules/@storybook/addon-docs/dist/esm/blocks/Primary.js
function _extends3() {
  _extends3 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends3.apply(this, arguments);
}
var Primary = function Primary2(_ref) {
  var name = _ref.name;
  var _useContext = (0, import_react18.useContext)(DocsContext), getComponentStories = _useContext.componentStories;
  var componentStories = getComponentStories();
  var story;
  if (componentStories) {
    story = name ? componentStories.find(function(s) {
      return s.name === name;
    }) : componentStories[0];
  }
  return story ? import_react18.default.createElement(DocsStory, _extends3({}, story, {
    expanded: false,
    withToolbar: true
  })) : null;
};

// node_modules/@storybook/addon-docs/dist/esm/blocks/Stories.js
init_define_import_meta_env();
init_es_array_filter();
init_es_object_to_string();
init_es_array_slice();
init_es_array_map();
init_es_object_assign();
var import_react20 = __toESM(require_react());

// node_modules/@storybook/addon-docs/dist/esm/blocks/Heading.js
init_define_import_meta_env();
var import_es_regexp_exec32 = __toESM(require_es_regexp_exec());
init_es_string_replace();
var import_react19 = __toESM(require_react());
var Heading = function Heading2(_ref) {
  var children = _ref.children, disableAnchor = _ref.disableAnchor;
  if (disableAnchor || typeof children !== "string") {
    return import_react19.default.createElement(H2, null, children);
  }
  var tagID = children.toLowerCase().replace(/[^a-z0-9]/gi, "-");
  return import_react19.default.createElement(HeaderMdx, {
    as: "h2",
    id: tagID
  }, children);
};

// node_modules/@storybook/addon-docs/dist/esm/blocks/Stories.js
function _extends4() {
  _extends4 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends4.apply(this, arguments);
}
var Stories = function Stories2(_ref) {
  var title = _ref.title, _ref$includePrimary = _ref.includePrimary, includePrimary = _ref$includePrimary === void 0 ? false : _ref$includePrimary;
  var _useContext = (0, import_react20.useContext)(DocsContext), componentStories = _useContext.componentStories;
  var stories = componentStories();
  stories = stories.filter(function(story) {
    var _story$parameters, _story$parameters$doc;
    return !((_story$parameters = story.parameters) !== null && _story$parameters !== void 0 && (_story$parameters$doc = _story$parameters.docs) !== null && _story$parameters$doc !== void 0 && _story$parameters$doc.disable);
  });
  if (!includePrimary)
    stories = stories.slice(1);
  if (!stories || stories.length === 0) {
    return null;
  }
  return import_react20.default.createElement(import_react20.default.Fragment, null, import_react20.default.createElement(Heading, null, title), stories.map(function(story) {
    return story && import_react20.default.createElement(DocsStory, _extends4({
      key: story.id
    }, story, {
      expanded: true
    }));
  }));
};
Stories.defaultProps = {
  title: "Stories"
};

// node_modules/@storybook/addon-docs/dist/esm/blocks/DocsPage.js
var DocsPage = function DocsPage2() {
  return import_react21.default.createElement(import_react21.default.Fragment, null, import_react21.default.createElement(Title2, null), import_react21.default.createElement(Subtitle2, null), import_react21.default.createElement(DescriptionContainer, null), import_react21.default.createElement(Primary, null), import_react21.default.createElement(ArgsTable2, {
    story: PRIMARY_STORY
  }), import_react21.default.createElement(Stories, null));
};

// node_modules/@storybook/addon-docs/dist/esm/blocks/DocsContainer.js
init_define_import_meta_env();
init_es_array_slice();
init_es_object_freeze();
init_es_object_assign();
var import_es_array_iterator18 = __toESM(require_es_array_iterator());
init_es_object_to_string();
var import_es_string_iterator18 = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_web_url();
init_web_url_search_params();
var import_react22 = __toESM(require_react());
var import_global6 = __toESM(require_window());
var import_util_deprecate5 = __toESM(require_browser());
init_esm();
var _templateObject8;
function _taggedTemplateLiteral8(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var document2 = import_global6.default.document;
var globalWindow2 = import_global6.default.window;
var defaultComponents = Object.assign({}, components, {
  code: CodeOrSourceMdx,
  a: AnchorMdx
}, HeadersMdx);
var warnOptionsTheme = (0, import_util_deprecate5.default)(function() {
}, esm_default(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral8(["\n    Deprecated parameter: options.theme => docs.theme\n\n    https://github.com/storybookjs/storybook/blob/next/addons/docs/docs/theming.md#storybook-theming\n"]))));
var DocsContainer = function DocsContainer2(_ref) {
  var context = _ref.context, children = _ref.children;
  var storyId = context.id, storyById = context.storyById;
  var _storyById = storyById(storyId), _storyById$parameters = _storyById.parameters, _storyById$parameters2 = _storyById$parameters.options, options = _storyById$parameters2 === void 0 ? {} : _storyById$parameters2, _storyById$parameters3 = _storyById$parameters.docs, docs = _storyById$parameters3 === void 0 ? {} : _storyById$parameters3;
  var themeVars = docs.theme;
  if (!themeVars && options.theme) {
    warnOptionsTheme();
    themeVars = options.theme;
  }
  var theme = ensure(themeVars);
  var allComponents = Object.assign({}, defaultComponents, docs.components);
  (0, import_react22.useEffect)(function() {
    var url;
    try {
      url = new URL(globalWindow2.parent.location);
    } catch (err) {
      return;
    }
    if (url.hash) {
      var element = document2.getElementById(url.hash.substring(1));
      if (element) {
        setTimeout(function() {
          scrollToElement(element);
        }, 200);
      }
    } else {
      var _element = document2.getElementById(anchorBlockIdFromId(storyId)) || document2.getElementById(storyBlockIdFromId(storyId));
      if (_element) {
        var allStories = _element.parentElement.querySelectorAll('[id|="anchor-"]');
        var scrollTarget = _element;
        if (allStories && allStories[0] === _element) {
          scrollTarget = document2.getElementById("docs-root");
        }
        setTimeout(function() {
          scrollToElement(scrollTarget, "start");
        }, 200);
      }
    }
  }, [storyId]);
  return import_react22.default.createElement(DocsContext.Provider, {
    value: context
  }, import_react22.default.createElement(SourceContainer, null, import_react22.default.createElement(ThemeProvider, {
    theme
  }, import_react22.default.createElement(MDXProvider, {
    components: allComponents
  }, import_react22.default.createElement(DocsWrapper, {
    className: "sbdocs sbdocs-wrapper"
  }, import_react22.default.createElement(DocsContent, {
    className: "sbdocs sbdocs-content"
  }, children))))));
};

// node_modules/@storybook/addon-docs/dist/esm/blocks/Meta.js
init_define_import_meta_env();
var import_es_array_iterator19 = __toESM(require_es_array_iterator());
init_es_object_to_string();
var import_es_string_iterator19 = __toESM(require_es_string_iterator());
init_web_dom_collections_iterator();
init_web_url();
init_web_url_search_params();
var import_react24 = __toESM(require_react());
var import_global7 = __toESM(require_window());
var document3 = import_global7.default.document;
function getFirstStoryId(docsContext) {
  var stories = docsContext.componentStories();
  return stories.length > 0 ? stories[0].id : null;
}
function renderAnchor() {
  var context = (0, import_react24.useContext)(DocsContext);
  var anchorId = getFirstStoryId(context) || context.id;
  return import_react24.default.createElement(Anchor, {
    storyId: anchorId
  });
}
var Meta = function Meta2() {
  var params = new URL(document3.location).searchParams;
  var isDocs = params.get("viewMode") === "docs";
  return isDocs ? renderAnchor() : null;
};

// node_modules/@storybook/addon-docs/dist/esm/blocks/Preview.js
init_define_import_meta_env();
init_es_array_slice();
init_es_object_freeze();
var import_react25 = __toESM(require_react());
var import_util_deprecate6 = __toESM(require_browser());
init_esm();
var _templateObject9;
function _taggedTemplateLiteral9(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var Preview2 = (0, import_util_deprecate6.default)(function(props) {
  return import_react25.default.createElement(Canvas, props);
}, esm_default(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral9(["\n    Preview doc block has been renamed to Canvas.\n\n    https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#previewprops-renamed\n  "]))));

// node_modules/@storybook/addon-docs/dist/esm/blocks/Props.js
init_define_import_meta_env();
init_es_array_slice();
init_es_object_freeze();
var import_react26 = __toESM(require_react());
var import_util_deprecate7 = __toESM(require_browser());
init_esm();
var _templateObject10;
function _taggedTemplateLiteral10(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
var Props = (0, import_util_deprecate7.default)(function(props) {
  return import_react26.default.createElement(ArgsTable2, props);
}, esm_default(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral10(["\n    Props doc block has been renamed to ArgsTable.\n\n    https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#previewprops-renamed\n  "]))));
Props.defaultProps = {
  of: CURRENT_SELECTION
};

// node_modules/@storybook/addon-docs/dist/esm/blocks/Wrapper.js
init_define_import_meta_env();
var import_react27 = __toESM(require_react());
var Wrapper = function Wrapper2(_ref) {
  var children = _ref.children;
  return import_react27.default.createElement("div", {
    style: {
      fontFamily: "sans-serif"
    }
  }, children);
};
export {
  AddContext,
  Anchor,
  AnchorMdx,
  ArgsTable2 as ArgsTable,
  CURRENT_SELECTION,
  Canvas,
  CodeOrSourceMdx,
  ColorItem,
  ColorPalette,
  ComponentsTable,
  DescriptionContainer as Description,
  DescriptionType,
  DocsContainer,
  DocsContext,
  DocsPage,
  DocsStory,
  HeaderMdx,
  HeadersMdx,
  Heading,
  IconGallery,
  IconItem,
  Meta,
  PRIMARY_STORY,
  Preview2 as Preview,
  Primary,
  Props,
  Source2 as Source,
  SourceContainer,
  SourceContext,
  SourceState,
  Stories,
  Story2 as Story,
  StoryTable,
  Subheading,
  Subtitle2 as Subtitle,
  Title2 as Title,
  Typeset,
  Wrapper,
  anchorBlockIdFromId,
  assertIsFn,
  extractComponentArgTypes,
  extractTitle,
  getComponent,
  getDescriptionProps,
  getSourceProps,
  getStoryId,
  getStoryProps,
  lookupStoryId,
  storyBlockIdFromId
};
//# sourceMappingURL=@storybook_addon-docs.js.map
