{
  "version": 3,
  "sources": ["../core-js/modules/es.number.constructor.js", "../core-js/internals/array-sort.js"],
  "sourcesContent": ["'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isForced = require('../internals/is-forced');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar hasOwn = require('../internals/has-own-property');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar isSymbol = require('../internals/is-symbol');\nvar toPrimitive = require('../internals/to-primitive');\nvar fails = require('../internals/fails');\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar defineProperty = require('../internals/object-define-property').f;\nvar thisNumberValue = require('../internals/this-number-value');\nvar trim = require('../internals/string-trim').trim;\n\nvar NUMBER = 'Number';\nvar NativeNumber = global[NUMBER];\nvar NumberPrototype = NativeNumber.prototype;\nvar TypeError = global.TypeError;\nvar arraySlice = uncurryThis(''.slice);\nvar charCodeAt = uncurryThis(''.charCodeAt);\n\n// `ToNumeric` abstract operation\n// https://tc39.es/ecma262/#sec-tonumeric\nvar toNumeric = function (value) {\n  var primValue = toPrimitive(value, 'number');\n  return typeof primValue == 'bigint' ? primValue : toNumber(primValue);\n};\n\n// `ToNumber` abstract operation\n// https://tc39.es/ecma262/#sec-tonumber\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, 'number');\n  var first, third, radix, maxCode, digits, length, index, code;\n  if (isSymbol(it)) throw TypeError('Cannot convert a Symbol value to a number');\n  if (typeof it == 'string' && it.length > 2) {\n    it = trim(it);\n    first = charCodeAt(it, 0);\n    if (first === 43 || first === 45) {\n      third = charCodeAt(it, 2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (charCodeAt(it, 1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i\n        default: return +it;\n      }\n      digits = arraySlice(it, 2);\n      length = digits.length;\n      for (index = 0; index < length; index++) {\n        code = charCodeAt(digits, index);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\n// `Number` constructor\n// https://tc39.es/ecma262/#sec-number-constructor\nif (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {\n  var NumberWrapper = function Number(value) {\n    var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));\n    var dummy = this;\n    // check on 1..constructor(foo) case\n    return isPrototypeOf(NumberPrototype, dummy) && fails(function () { thisNumberValue(dummy); })\n      ? inheritIfRequired(Object(n), dummy, NumberWrapper) : n;\n  };\n  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES2015 (in case, if modules with ES2015 Number statics required before):\n    'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' +\n    // ESNext\n    'fromString,range'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (hasOwn(NativeNumber, key = keys[j]) && !hasOwn(NumberWrapper, key)) {\n      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));\n    }\n  }\n  NumberWrapper.prototype = NumberPrototype;\n  NumberPrototype.constructor = NumberWrapper;\n  defineBuiltIn(global, NUMBER, NumberWrapper, { constructor: true });\n}\n", "var arraySlice = require('../internals/array-slice-simple');\n\nvar floor = Math.floor;\n\nvar mergeSort = function (array, comparefn) {\n  var length = array.length;\n  var middle = floor(length / 2);\n  return length < 8 ? insertionSort(array, comparefn) : merge(\n    array,\n    mergeSort(arraySlice(array, 0, middle), comparefn),\n    mergeSort(arraySlice(array, middle), comparefn),\n    comparefn\n  );\n};\n\nvar insertionSort = function (array, comparefn) {\n  var length = array.length;\n  var i = 1;\n  var element, j;\n\n  while (i < length) {\n    j = i;\n    element = array[i];\n    while (j && comparefn(array[j - 1], element) > 0) {\n      array[j] = array[--j];\n    }\n    if (j !== i++) array[j] = element;\n  } return array;\n};\n\nvar merge = function (array, left, right, comparefn) {\n  var llength = left.length;\n  var rlength = right.length;\n  var lindex = 0;\n  var rindex = 0;\n\n  while (lindex < llength || rindex < rlength) {\n    array[lindex + rindex] = (lindex < llength && rindex < rlength)\n      ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]\n      : lindex < llength ? left[lindex++] : right[rindex++];\n  } return array;\n};\n\nmodule.exports = mergeSort;\n"],
  "mappings": "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",
  "names": ["arraySlice"]
}
